var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","sum_reduce","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","EndsWith","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","Unique","UpperBound","Uppercase","ValueCounts","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[867,"polars::chunked_array::arithmetic"],[895,"polars::chunked_array::builder"],[1152,"polars::chunked_array::builder::list"],[1169,"polars::chunked_array::collect"],[1183,"polars::chunked_array::float"],[1185,"polars::chunked_array::from_iterator_par"],[1189,"polars::chunked_array::iterator"],[1259,"polars::chunked_array::iterator::par"],[1261,"polars::chunked_array::object"],[1332,"polars::chunked_array::object::builder"],[1355,"polars::chunked_array::object::registry"],[1383,"polars::chunked_array::ops"],[1581,"polars::chunked_array::ops::arity"],[1616,"polars::chunked_array::ops::float_sorted_arg_max"],[1618,"polars::chunked_array::ops::gather"],[1621,"polars::chunked_array::ops::search_sorted"],[1650,"polars::chunked_array::ops::sort"],[1657,"polars::chunked_array::ops::sort::arg_bottom_k"],[1658,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1665,"polars::chunked_array::ops::sort::options"],[1678,"polars::chunked_array::temporal"],[1685,"polars::chunked_array::temporal::conversion"],[1688,"polars::datatypes"],[3056,"polars::datatypes::categorical"],[3073,"polars::datatypes::categorical::revmap"],[3079,"polars::datatypes::categorical::string_cache"],[3098,"polars::docs"],[3100,"polars::error"],[3184,"polars::error::PolarsError"],[3188,"polars::error::constants"],[3191,"polars::frame"],[3444,"polars::frame::explode"],[3473,"polars::frame::group_by"],[3708,"polars::frame::group_by::GroupByMethod"],[3709,"polars::frame::group_by::GroupsProxy"],[3711,"polars::frame::group_by::aggregations"],[3724,"polars::frame::group_by::expr"],[3727,"polars::frame::row"],[3834,"polars::functions"],[3836,"polars::prelude"],[8712,"polars::prelude::AggExpr"],[8719,"polars::prelude::BooleanFunction"],[8722,"polars::prelude::DslPlan"],[8773,"polars::prelude::Expr"],[8807,"polars::prelude::FunctionExpr"],[8828,"polars::prelude::GroupByMethod"],[8829,"polars::prelude::GroupsProxy"],[8831,"polars::prelude::LiteralValue"],[8834,"polars::prelude::PolarsError"],[8838,"polars::prelude::StringFunction"],[8852,"polars::prelude::aggregations"],[8865,"polars::prelude::arity"],[8900,"polars::prelude::array"],[8919,"polars::prelude::binary"],[8935,"polars::prelude::cat"],[8936,"polars::prelude::chunkedarray"],[9003,"polars::prelude::chunkedarray::string"],[9041,"polars::prelude::chunkedarray::string::infer"],[9071,"polars::prelude::cloud"],[9118,"polars::prelude::cloud::options"],[9126,"polars::prelude::datatypes"],[9391,"polars::prelude::datatypes::categorical"],[9408,"polars::prelude::datatypes::categorical::revmap"],[9414,"polars::prelude::datatypes::categorical::string_cache"],[9418,"polars::prelude::datetime"],[9421,"polars::prelude::default_arrays"],[9427,"polars::prelude::dt"],[9479,"polars::prelude::expr"],[9482,"polars::prelude::fixed_size_list"],[9502,"polars::prelude::float_sorted_arg_max"],[9504,"polars::prelude::function_expr"],[9627,"polars::prelude::function_expr::BooleanFunction"],[9630,"polars::prelude::function_expr::FunctionExpr"],[9651,"polars::prelude::function_expr::StringFunction"],[9665,"polars::prelude::function_expr::cat"],[9667,"polars::prelude::function_expr::pow"],[9671,"polars::prelude::function_expr::rolling"],[9700,"polars::prelude::function_expr::rolling_by"],[9729,"polars::prelude::gather"],[9732,"polars::prelude::interpolate"],[9736,"polars::prelude::interpolate_by"],[9737,"polars::prelude::mode"],[9738,"polars::prelude::nan_propagating_aggregate"],[9742,"polars::prelude::null"],[9772,"polars::prelude::schema_inference"],[9796,"polars::prelude::search_sorted"],[9802,"polars::prelude::series"],[9824,"polars::prelude::slice"],[9827,"polars::prelude::sort"],[9834,"polars::prelude::sort::arg_bottom_k"],[9835,"polars::prelude::sort::arg_sort_multiple"],[9842,"polars::prelude::sort::options"],[9855,"polars::prelude::strings"],[9909,"polars::prelude::udf"],[9915,"polars::prelude::utf8"],[9919,"polars::series"],[10320,"polars::series::arithmetic"],[10341,"polars::series::arithmetic::checked"],[10347,"polars::series::ops"],[10373,"polars::series::unstable"],[10397,"dyn_clone::sealed"],[10398,"polars_core::datatypes"],[10399,"polars_core::chunked_array"],[10400,"num_traits"],[10401,"num_traits::cast"],[10402,"polars_core::series"],[10403,"polars_error"],[10404,"core::result"],[10405,"polars_core::series::arithmetic::borrowed"],[10406,"polars_core::frame::group_by::proxy"],[10407,"polars_core::chunked_array::object"],[10408,"core::option"],[10409,"polars_arrow::array"],[10410,"alloc::boxed"],[10411,"core::iter::traits::iterator"],[10412,"polars_core::chunked_array::list::iterator"],[10413,"core::ops::function"],[10414,"core::marker"],[10415,"alloc::borrow"],[10416,"polars_core::series::unstable"],[10417,"polars_core::datatypes::dtype"],[10418,"alloc::string"],[10419,"polars_core::chunked_array::ops::sort::options"],[10420,"polars_core::series::arithmetic::borrowed::checked"],[10421,"core::slice::iter"],[10422,"core::iter::adapters::map"],[10423,"alloc::vec"],[10424,"core::iter::traits::double_ended"],[10425,"polars_arrow::offset"],[10426,"core::iter::traits::collect"],[10427,"core::fmt"],[10428,"polars_utils::iter::fallible"],[10429,"polars_core::chunked_array::from_iterator"],[10430,"polars_arrow::bitmap::immutable"],[10431,"core::convert"],[10432,"core::borrow"],[10433,"polars_arrow::pushable"],[10434,"rayon::iter"],[10435,"polars_arrow::trusted_len"],[10436,"polars_core::datatypes::any_value"],[10437,"polars_core::series::series_trait"],[10438,"polars_core::chunked_array::logical"],[10439,"polars_core::datatypes::time_unit"],[10440,"core::iter::traits::exact_size"],[10441,"polars_core::chunked_array::iterator"],[10442,"bitflags::iter"],[10443,"core::ops::range"],[10444,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10445,"polars_core::datatypes::field"],[10446,"polars_core::chunked_array::ops::rolling_window"],[10447,"polars_ops::chunked_array::scatter"],[10448,"polars_utils::index"],[10449,"ahash::random_state"],[10450,"polars_utils::hashing"],[10451,"ndarray::data_repr"],[10452,"ndarray::dimension::dim"],[10453,"ndarray"],[10454,"either"],[10455,"core::any"],[10456,"polars_core::chunked_array::arithmetic::numeric"],[10457,"polars_core::chunked_array::builder::list::anonymous"],[10458,"polars_core::chunked_array::builder::list::boolean"],[10459,"polars_core::chunked_array::builder::list::primitive"],[10460,"polars_core::chunked_array::builder::list"],[10461,"polars_core::chunked_array::builder"],[10462,"polars_core::chunked_array::builder::list::binary"],[10463,"polars_core::chunked_array::builder::list::null"],[10464,"polars_core::chunked_array::builder::string"],[10465,"polars_arrow::array::binview"],[10466,"polars_core::chunked_array::builder::boolean"],[10467,"polars_core::chunked_array::builder::null"],[10468,"polars_core::chunked_array::builder::primitive"],[10469,"core::clone"],[10470,"polars_core::series::implementations::null"],[10471,"polars_core::chunked_array::collect"],[10472,"polars_core::chunked_array::float"],[10473,"polars_core::chunked_array::from_iterator_par"],[10474,"polars_arrow::array::boolean"],[10475,"polars_arrow::array::fixed_size_list"],[10476,"polars_arrow::datatypes"],[10477,"polars_arrow::bitmap::utils::iterator"],[10478,"polars_arrow::bitmap::utils::zip_validity"],[10479,"alloc::sync"],[10480,"polars_core::chunked_array::object::builder"],[10481,"polars_core::chunked_array::object::registry"],[10482,"polars_core::chunked_array::ops"],[10483,"core::hash"],[10484,"polars_arrow::legacy::array::slice"],[10485,"polars_core::chunked_array::ops::arity"],[10486,"polars_arrow::array::static_array"],[10487,"core::error"],[10488,"polars_arrow::array::primitive"],[10489,"polars_core::chunked_array::ops::search_sorted"],[10490,"polars_core::utils"],[10491,"polars_row::row"],[10492,"chrono::naive::datetime"],[10493,"chrono_tz::timezones"],[10494,"chrono::naive::time"],[10495,"polars_core::chunked_array::logical::struct_"],[10496,"polars_core::chunked_array::logical::categorical"],[10497,"polars_core::chunked_array::logical::categorical::builder"],[10498,"polars_arrow::array::static_array_collect"],[10499,"bytemuck::zeroable"],[10500,"polars_core::chunked_array::logical::categorical::revmap"],[10501,"polars_core::chunked_array::logical::categorical::merge"],[10502,"polars_arrow::datatypes::physical_type"],[10503,"polars_arrow::types"],[10504,"chrono::time_delta"],[10505,"chrono::naive::date"],[10506,"smartstring::config"],[10507,"smartstring"],[10508,"core::cmp"],[10509,"polars_time::windows::duration"],[10510,"polars_core::frame"],[10511,"polars_core::chunked_array::logical::categorical::string_cache"],[10512,"polars_error::warning"],[10513,"regex::error"],[10514,"simdutf8::basic"],[10515,"polars_parquet::parquet::error"],[10516,"planus::errors"],[10517,"alloc::collections"],[10518,"std::io::error"],[10519,"polars_core::schema"],[10520,"polars_core::series::from"],[10521,"hashbrown::set"],[10522,"polars_arrow::datatypes::schema"],[10523,"polars_core::frame::row"],[10524,"polars_core::frame::group_by"],[10525,"polars_time::group_by::dynamic"],[10526,"polars_lazy::frame"],[10527,"polars_core::frame::explode"],[10528,"polars_core::chunked_array::ndarray"],[10529,"polars_arrow::array::struct_"],[10530,"polars_arrow::record_batch"],[10531,"polars_utils::idx_vec"],[10532,"rayon::iter::plumbing"],[10533,"polars_plan::logical_plan::aexpr"],[10534,"polars_core::frame::group_by::into_groups"],[10535,"core::iter::adapters::copied"],[10536,"core::iter::adapters::zip"],[10537,"polars_utils::float"],[10538,"polars_arrow::types::native"],[10539,"polars_core::frame::group_by::aggregations::agg_list"],[10540,"polars_core::frame::group_by::aggregations"],[10541,"polars_core::frame::group_by::expr"],[10542,"polars_core::frame::row::av_buffer"],[10543,"polars_utils::arena"],[10544,"polars_plan::logical_plan::alp"],[10545,"polars_ops::frame::join::hash_join"],[10546,"polars_ops::frame::join::args"],[10547,"polars_ops::chunked_array::gather::chunked"],[10548,"polars_ops::frame"],[10549,"polars_io::csv::read::reader"],[10550,"polars_io::predicates"],[10551,"polars_io::mmap"],[10552,"polars_plan::dsl::expr"],[10553,"core::alloc"],[10554,"polars_plan::logical_plan::anonymous_scan"],[10555,"polars_lazy::scan::ndjson"],[10556,"polars_lazy::scan::anonymous_scan"],[10557,"polars_plan::dsl::expr_dyn_fn"],[10558,"polars_plan::logical_plan::visitor"],[10559,"polars_plan::dsl::function_expr"],[10560,"polars_ops::series::ops::arg_min_max"],[10561,"polars_plan::dsl::array"],[10562,"polars_plan::dsl::list"],[10563,"polars_plan::dsl::function_expr::schema"],[10564,"polars_io::ipc::ipc_stream"],[10565,"std::io"],[10566,"polars_ops::chunked_array::binary"],[10567,"polars_time::chunkedarray::string"],[10568,"std::os::fd::owned"],[10569,"polars_ops::chunked_array::list"],[10570,"std::os::fd::raw"],[10571,"polars_ops::series::ops"],[10572,"polars_ops::chunked_array::strings"],[10573,"core::mem::maybe_uninit"],[10574,"polars_ops::chunked_array::strings::namespace"],[10575,"polars_io::csv::read::read_impl::batched"],[10576,"polars_io::csv::write::writer"],[10577,"polars_io::ipc::write"],[10578,"polars_io::parquet::read::reader"],[10579,"polars_io::parquet::read::read_impl"],[10580,"polars_io::parquet::write::writer"],[10581,"polars_io::parquet::write::batched_writer"],[10582,"polars_plan::dsl::binary"],[10583,"polars_plan::dsl::udf"],[10584,"polars_lazy::frame::exitable"],[10585,"hashbrown::map"],[10586,"polars_plan::dsl::cat"],[10587,"polars_ops::series::ops::round"],[10588,"polars_time::series"],[10589,"polars_time::chunkedarray::rolling_window"],[10590,"polars_time::windows::bounds"],[10591,"polars_lazy::scan::csv"],[10592,"polars_lazy::scan::ipc"],[10593,"polars_time::windows::group_by"],[10594,"polars_lazy::scan::parquet"],[10595,"polars_time::windows::window"],[10596,"polars_io::csv::read::options"],[10597,"polars_io::csv::write::options"],[10598,"polars_io::ipc::ipc_file"],[10599,"polars_io::json"],[10600,"polars_io::parquet::read::options"],[10601,"polars_io::parquet::write::options"],[10602,"polars_ops::frame::join::asof"],[10603,"polars_ops::series::ops::interpolation::interpolate"],[10604,"polars_ops::series::ops::is_between"],[10605,"polars_ops::series::ops::rank"],[10606,"polars_plan::logical_plan"],[10607,"polars_plan::dsl::arity"],[10608,"polars_plan::dsl::function_expr::boolean"],[10609,"polars_plan::dsl::function_expr::cat"],[10610,"polars_plan::dsl::function_expr::pow"],[10611,"polars_plan::dsl::function_expr::strings"],[10612,"polars_plan::dsl::functions::temporal"],[10613,"polars_plan::dsl::options"],[10614,"polars_plan::frame::opt_state"],[10615,"polars_plan::logical_plan::lit"],[10616,"polars_plan::logical_plan::options"],[10617,"polars_parquet::parquet::metadata::file_metadata"],[10618,"polars_arrow::legacy::kernels::rolling"],[10619,"polars_arrow::legacy::kernels::time"],[10620,"polars_lazy::scan::file_list_reader"],[10621,"polars_io::cloud::options"],[10622,"polars_parquet::parquet::metadata::column_order"],[10623,"polars_ops::chunked_array::binary::namespace"],[10624,"std::path"],[10625,"polars_io::shared"],[10626,"polars_ops::frame::join::cross_join"],[10627,"polars_lazy::dsl::eval"],[10628,"polars_time::chunkedarray::date"],[10629,"polars_time::chunkedarray::datetime"],[10630,"polars_time::chunkedarray::duration"],[10631,"core::default"],[10632,"polars_parquet::parquet::metadata::row_metadata"],[10633,"polars_core::series::ops"],[10634,"polars_plan::dsl::dt"],[10635,"polars_arrow::scalar"],[10636,"polars_lazy::dsl::list"],[10637,"crossterm::command"],[10638,"polars_plan::dsl::struct_"],[10639,"polars_io::ndjson::core"],[10640,"std::fs"],[10641,"polars_plan::logical_plan::apply"],[10642,"polars_plan::dsl::function_expr::array"],[10643,"polars_plan::dsl::function_expr::binary"],[10644,"polars_plan::dsl::function_expr::list"],[10645,"polars_plan::dsl::function_expr::struct_"],[10646,"polars_plan::dsl::function_expr::range"],[10647,"polars_plan::dsl::function_expr::datetime"],[10648,"alloc::ffi::c_str"],[10649,"core::ffi::c_str"],[10650,"std::ffi::os_str"],[10651,"polars_parquet::arrow::read::statistics"],[10652,"polars_arrow::array::struct_::mutable"],[10653,"polars_arrow::array::growable::structure"],[10654,"polars_arrow::legacy::array::default_arrays"],[10655,"polars_arrow::buffer::immutable"],[10656,"polars_arrow::array::list"],[10657,"polars_core::named_from"],[10658,"polars_ops::frame::join"],[10659,"polars_arrow::legacy::array"],[10660,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10661,"polars_time::chunkedarray::time"],[10662,"parquet_format_safe::parquet_format"],[10663,"polars_ops::series::ops::various"],[10664,"polars_arrow::array::struct_::iterator"],[10665,"polars_ops::frame::join::asof::groups"],[10666,"polars_ops::chunked_array::list::namespace"],[10667,"polars_plan::dsl::name"],[10668,"polars_io::options"],[10669,"polars_core::chunked_array::ops::aggregate"],[10670,"polars_core::chunked_array::ops::aggregate::quantile"],[10671,"polars_time::month_end"],[10672,"polars_time::month_start"],[10673,"polars_arrow::legacy::index"],[10674,"polars_ops::chunked_array::strings::split"],[10675,"core::pin"],[10676,"core::io::borrowed_buf"],[10677,"parquet_format_safe::thrift::varint::decode"],[10678,"polars_time::chunkedarray::rolling_window::dispatch"],[10679,"polars_time::round"],[10680,"polars_parquet::parquet::metadata::schema_descriptor"],[10681,"polars_core::chunked_array::ops::aggregate::var"],[10682,"polars_plan::dsl::string"],[10683,"polars_ops::series::ops::to_dummies"],[10684,"polars_time::truncate"],[10685,"std::sync::rwlock"],[10686,"polars_io::csv::read::schema_inference"],[10687,"polars_time::upsample"],[10688,"polars_core::hashing::vector_hasher"],[10689,"core::num::nonzero"],[10690,"alloc::collections::btree::map"],[10691,"polars_ops::chunked_array::array::namespace"],[10692,"polars_ops::chunked_array::array"],[10693,"polars_time::chunkedarray::string::patterns"],[10694,"polars_time::chunkedarray::string::infer"],[10695,"polars_arrow::legacy::array::fixed_size_list"],[10696,"polars_plan::dsl::function_expr::rolling"],[10697,"polars_plan::dsl::function_expr::rolling_by"],[10698,"polars_arrow::legacy::array::null"],[10699,"polars_arrow::bitmap::mutable"],[10700,"polars_arrow::array::utf8"],[10701,"polars_arrow::array::binary"],[10702,"polars_core::series::iterator"],[10703,"polars_core"],[10704,"polars_core::chunked_array::iterator::par"],[10705,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10706,"polars_core::chunked_array::ops::gather"],[10707,"polars_core::chunked_array::ops::sort"],[10708,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10709,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10710,"polars_core::chunked_array::temporal"],[10711,"polars_core::chunked_array::temporal::conversion"],[10712,"polars_core::chunked_array::temporal::time"],[10713,"polars_core::chunked_array::logical::date"],[10714,"polars_core::chunked_array::logical::datetime"],[10715,"polars_core::chunked_array::logical::decimal"],[10716,"polars_core::chunked_array::logical::duration"],[10717,"polars_core::datatypes::aliases"],[10718,"polars_utils::aliases"],[10719,"polars_core::chunked_array::logical::time"],[10720,"polars_error::constants"],[10721,"polars_core::functions"],[10722,"polars_io::utils"],[10723,"polars_io::parquet::metadata"],[10724,"polars_arrow::legacy::prelude"],[10725,"polars_ops::series::ops::rolling"],[10726,"polars_parquet::parquet::write"],[10727,"polars_ops::frame::join::general"],[10728,"polars_ops::series::ops::abs"],[10729,"polars_plan::dsl::functions::selectors"],[10730,"polars_plan::dsl::functions::horizontal"],[10731,"polars_plan::dsl::functions::arity"],[10732,"polars_plan::dsl"],[10733,"polars_plan::dsl::functions::range"],[10734,"polars_plan::dsl::functions::index"],[10735,"polars_ops::chunked_array"],[10736,"polars_plan::dsl::functions::coerce"],[10737,"polars_plan::dsl::functions::syntactic_sugar"],[10738,"polars_time::base_utc_offset"],[10739,"polars_time"],[10740,"polars_ops::series::ops::clip"],[10741,"polars_io"],[10742,"polars_ops::series::ops::horizontal"],[10743,"polars_lazy::dsl::functions"],[10744,"polars_plan::dsl::functions::concat"],[10745,"polars_ops::series::ops::index"],[10746,"polars_io::csv::read::parser"],[10747,"polars_ops::series::ops::cum_agg"],[10748,"polars_ops::series::ops::diff"],[10749,"polars_time::dst_offset"],[10750,"polars_ops::series::ops::floor_divide"],[10751,"polars_ops::chunked_array::strings::concat"],[10752,"polars_ops::chunked_array::datetime::replace_time_zone"],[10753,"polars_time::date_range"],[10754,"polars_ops::series::ops::interpolation"],[10755,"polars_ops::series::ops::interpolation::interpolate_by"],[10756,"polars_io::csv::read::utils"],[10757,"polars_ops::series::ops::is_first_distinct"],[10758,"polars_ops::series::ops::is_in"],[10759,"polars_ops::series::ops::is_last_distinct"],[10760,"polars_io::parquet::read::utils"],[10761,"polars_ops::series::ops::negate"],[10762,"polars_ops::series::ops::not"],[10763,"polars_ops::series::ops::int_range"],[10764,"polars_plan::dsl::functions::repeat"],[10765,"polars_ops::chunked_array::repeat_by"],[10766,"polars_ops::series::ops::replace"],[10767,"polars_io::csv::read"],[10768,"polars_ops::chunked_array::strings::strip"],[10769,"polars_time::chunkedarray"],[10770,"polars_io::cloud"],[10771,"polars_ops::chunked_array::mode"],[10772,"polars_ops::chunked_array::nan_propagating_aggregate"],[10773,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{l{c}}e}{}n{AbAd}}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{f{{l{c}}}}e}{}n{AbAd}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}}{{{l{Af}}{l{Af}}}}{{{l{Ah}}{l{Ah}}}}{{{f{{l{A`}}}}{f{Aj}}}}{{{l{c}}{l{c}}}{}n}{{{f{{l{Ah}}}}{f{{An{Al}}}}}}{{{l{A`}}{l{A`}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{{Bh{c}}}}}}{f{Bj}}}B`Bl}{{{f{{l{c}}}}{f{Bj}}}B`n}{{{f{{l{Bn}}}}{f{Bj}}}B`}{{{f{{l{Af}}}}{f{Bj}}}B`}{{{f{{l{Ah}}}}{f{Bj}}}B`}{{{f{{l{A`}}}}{f{Bj}}}B`}{{{f{{l{j}}}}{f{Bj}}}B`}{{{f{{l{Af}}}}}d}{{}C`}{{{f{{l{Af}}}}}{{Cb{d}}}}{{{f{{l{Bn}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bn}}}}{f{Aj}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Aj}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}64{{{f{Cn{l{c}}}}{f{{l{c}}}}}b{{Dd{}{{D`{Db}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{{Cb{B`}}}{{Df{{Cb{B`}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}n{{Dh{Cb}{{Df{Cb}}}}Dj}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}Dj}}{{{f{{l{{Bh{c}}}}}}e}{{l{{Bh{c}}}}}Bl{{Dh{{Cb{{f{c}}}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dh{{Cb{{f{Aj}}}}}{{Df{{Cb{{Dl{Aj}}}}}}}}Dj}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{{Cb{{f{{An{Al}}}}}}}{{Df{{Cb{{Dl{{An{Al}}}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{Bn}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{Bn}}}}c}{{l{Bn}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{Ed}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{Cb}{{Df{{Cb{e}}}}}}}Dd}{{{l{c}}e}{{l{c}}}n{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Af}}}}{f{Dh}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{Dh}}}{{l{A`}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{c}}}n}{{{f{{l{Ah}}}}{f{Dh}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{e}}}nDd}{{{f{{l{Af}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{Ah}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{A`}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{Cn{l{c}}}}e}bn{{Dh{}{{Df{}}}}Dj}}{{{f{{l{A`}}}}c}{{l{A`}}}{{E`{{f{Aj}}}{{Df{{f{Aj}}}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{{f{{An{Al}}}}}{{Df{{f{{An{Al}}}}}}}}}}{{{f{{l{c}}}}Efg}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{A`}}}}c}{{l{A`}}}{{E`{{f{Aj}}{f{CnEh}}}}}}{{{f{{l{j}}}}{f{Dh}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bn}}}}{f{Dh}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{A`}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{{f{Aj}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{j}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{B`}}{f{c}}}{{Df{c}}}}}}{{{f{{l{c}}}}g{f{Cn{An{e}}}}}bn{}{{Dh{Cb{f{e}}}{{Df{e}}}}}}{{{f{{l{Af}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{d}}{f{c}}}{{Df{c}}}}}}{{{f{{l{{Bh{c}}}}}}g{f{Cn{An{e}}}}}bBl{}{{Dh{{Cb{{f{c}}}}{f{e}}}{{Df{e}}}}}}{{{f{{l{Ah}}}}e{f{Cn{An{c}}}}}b{}{{Dh{{Cb{{f{{An{Al}}}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{{f{{An{Al}}}}}{{Df{{Dl{{An{Al}}}}}}}}Dj}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dh{{f{Aj}}}{{Df{{Dl{Aj}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}n{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{d}{{Df{d}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{B`}{{Df{B`}}}}Dj}}{{{f{{l{{Bh{c}}}}}}e}{{l{{Bh{c}}}}}Bl{{Dh{{f{c}}}{{Df{c}}}}Dj}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{A`}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}n}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{Ah}}}}Ej}{{l{El}}}}{{{f{{l{Af}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}n}{{{f{{l{A`}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Af}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{En}}}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bh{c}}}}}}}{{Bd{{l{El}}Bb}}}Bl}{{{f{{l{Af}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}n}`{{{f{{l{Bn}}}}}{{f{{l{Bn}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{A`}}}}}{{l{Ah}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dd}{{{f{{l{c}}}}}{{f{Ef}}}Dd}{{{f{{l{A`}}}}}{{f{{l{A`}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DdDd{{E`{{Cb{Dn}}CbCb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{{l{Af}}{l{Af}}}}{{C`C`}C`}{{{f{CnC`}}C`}b}24310{{{f{C`}}}Al}045321{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00``{{{f{{l{c}}}}{f{Ef}}}{{Bd{B`Bb}}}n}{{{f{{l{En}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Bn}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}n{{Dh{}{{Df{}}}}Dj}n}5432176{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAd}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}Dd}{{{f{{l{c}}}}}{{f{{Fn{{Ch{Cf}}}}}}}Dd}{{{f{Cn{l{c}}}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Dd}0{{{f{C`}}}C`}{{{f{c}}{f{Cne}}}b{}{}}0``{C`C`}{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}n}{{{f{C`}}C`}d}{{{f{{l{c}}}}}{{`{G`}}}n}{{}{{l{c}}}Dd}{{}C`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{{C`C`}C`}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{AbAd}}{{{f{{l{c}}}}e}{}n{AbAd}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{Fhb}{{{f{Cn{l{c}}}}}bDd}11{{{f{{l{c}}}}}{{f{Ef}}}Dd};{{{f{C`}}{f{C`}}}d}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{An{Al}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{Aj}}}{{l{Af}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}nAd}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}n}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}413687205{{{f{{l{Bn}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{Cn{l{c}}}}{f{{l{c}}}}}bn}{{{f{CnC`}}c}b{{Gh{}{{Cd{C`}}}}}}{{{f{{l{Af}}}}d}{{Bd{{l{Af}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Ah}}}}{f{{An{Al}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{{Bh{c}}}}}}{f{{l{Af}}}}}{{Bd{{l{{Bh{c}}}}Bb}}}Bl}{{{f{{l{A`}}}}{f{{l{Af}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Bn}}}}{f{{l{Af}}}}}{{Bd{{l{Bn}}Bb}}}}{{{f{{l{c}}}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{En}}}}{f{{l{Af}}}}}{{Bd{{l{En}}Bb}}}}{{{f{{l{Ah}}}}{f{{l{Af}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{j}}}}{f{{l{Af}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}`{{{f{{l{c}}}}{f{CnGj}}}{{Bd{bGl}}}n}{{{f{{l{Af}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{A`}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{{Bh{c}}}}}}{f{CnGj}}}{{Bd{bGl}}}Bl}{{{f{{l{Bn}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Ah}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{j}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C`}}{f{CnGj}}}{{Bd{bGl}}}}0000{{{f{{l{c}}}}e}bDd{{E`{Cb}}}}{{{f{{l{j}}}}c}b{{E`{{Cb{Dn}}}}}}{{{f{{l{Bn}}}}c}b{{E`{{Cb{Dn}}}}}}{c{{l{e}}}Cf{{Dd{}{{Gn{c}}}}}}{cc{}}00{Al{{Cb{C`}}}}{AlC`}00{{{f{Aj}}c}{{l{e}}}Gh{{Dd{}{{Gn{}}}}Dd}}{{{f{{l{c}}}}e}{{l{c}}}{{Dd{}{{Gn{}}}}Dd}Gh}{{{f{Aj}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{f{Aj}}{Fn{{Ch{Cf}}}}Ef}{{l{c}}}Dd}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}0{e{{l{Ah}}}{{Hb{{An{Al}}}}}{{Gh{}{{Cd{c}}}}}}{c{{l{e}}}{{Gh{}{{Cd{{Gf{Fn{Cb{Hd}}}}}}}}}n}{e{{l{{Bh{c}}}}}Bl{{Gh{}{{Cd{{Cb{c}}}}}}}}{c{{l{Af}}}{{Gh{}{{Cd{d}}}}}}{c{{l{e}}}{{Gh{}{{Cd{Cb}}}}}n}{e{{l{Ah}}}{{Hf{{An{Al}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{A`}}}{{Hf{Aj}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{A`}}}{{Hb{Aj}}}{{Gh{}{{Cd{c}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}{e{{l{j}}}{{Hh{B`}}}{{Gh{}{{Cd{c}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{B`}}}}}}}}{c{{l{Af}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{cC`{{Gh{}{{Cd{C`}}}}}}{{{f{Aj}}c}{{l{Af}}}{{Cj{}{{Cd{{Cb{d}}}}}}}}{{{f{Aj}}c}{{l{e}}}{{Cj{}{{Cd{Cb}}}}}n}{{{f{Aj}}e}{{l{Ah}}}{{Hf{{An{Al}}}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Aj}}e}{{l{A`}}}{{Hf{Aj}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Aj}}e}{{l{{Bh{c}}}}}Bl{{Cj{}{{Cd{{Cb{c}}}}}}}}>;?8{e{{l{En}}}{{Hf{{An{Al}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}=;8>{e{{l{En}}}{{Hb{{An{Al}}}}}{{Gh{}{{Cd{c}}}}}}{e{{l{Ah}}}{{Hb{{An{Al}}}}}{{Gh{}{{Cd{c}}}}}}9{{{f{Aj}}e}{{l{{Bh{c}}}}}Bl{{Cj{}{{Cd{c}}}}}}{{{f{Aj}}e}{{l{A`}}}{{Hf{Aj}}}{{Cj{}{{Cd{c}}}}}}{{{f{Aj}}c}{{l{Af}}}{{Cj{}{{Cd{d}}}}}}{{{f{Aj}}c}{{l{e}}}{{Cj{}{{Cd{}}}}}n}{{{f{Aj}}e}{{l{Ah}}}{{Hf{{An{Al}}}}}{{Cj{}{{Cd{c}}}}}}`{{{f{Aj}}}{{Cb{C`}}}}{e{{l{A`}}}{{Hb{Aj}}HjHlHn}{{I`{}{{Cd{c}}}}}}{e{{l{Ah}}}{{Hf{{An{Al}}}}HjHl}{{I`{}{{Cd{{Cb{c}}}}}}}}{c{{l{j}}}{{I`{}{{Cd{{Cb{B`}}}}}}}}{c{{l{Af}}}{{I`{}{{Cd{{Cb{d}}}}}}}}{c{{l{e}}}{{I`{}{{Cd{Cb}}}}}n}{e{{l{A`}}}{{Hf{Aj}}HjHl}{{I`{}{{Cd{{Cb{c}}}}}}}}{c{{l{Af}}}{{I`{}{{Cd{d}}}}}}{e{{l{Ah}}}{{Hb{{An{Al}}}}HjHlHn}{{I`{}{{Cd{c}}}}}}{{c{f{Aj}}Ef}{{l{j}}}{{I`{}{{Cd{{Cb{B`}}}}}}}}{{{f{Aj}}{f{{An{c}}}}}{{l{Ah}}}{{Hf{{An{Al}}}}}}{{{f{Aj}}{f{{An{c}}}}}{{l{A`}}}{{Hf{Aj}}}}{{{f{Aj}}{f{{An{d}}}}}{{l{Af}}}}{{{f{Aj}}{f{{An{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}{f{An}}}{{l{c}}}n}{{{f{Aj}}{f{{An{{Cb{c}}}}}}}{{l{A`}}}{{Hf{Aj}}}}{{{f{Aj}}{f{{An{{Cb{c}}}}}}}{{l{Ah}}}{{Hf{{An{Al}}}}}}{{{f{Aj}}{f{{An{{Cb{c}}}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}{f{{An{{Cb{d}}}}}}}{{l{Af}}}}{{{f{Aj}}{f{{An{Cb}}}}}{{l{c}}}n}{c{{l{e}}}{{Ib{}{{Cd{Cb}}}}}n}{c{{l{Af}}}{{Ib{}{{Cd{{Cb{d}}}}}}}}{{{f{Aj}}Fn}{{l{c}}}n}{{{f{Aj}}Fn{Cb{Hd}}}{{l{c}}}n}{{{f{Aj}}{f{{An{Al}}}}Fh}{{l{Ah}}}}{{{f{Aj}}{f{B`}}Fh}{{l{Bn}}}}{{{f{Aj}}{f{{An{Al}}}}Fh}{{l{En}}}}{{{f{Aj}}{f{Aj}}Fh}{{l{A`}}}}{{{f{Aj}}dFh}{{l{Af}}}}{{{f{Aj}}cFh}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}Fh}{{l{c}}}n}{{{f{Aj}}{f{B`}}Fh}{{l{j}}}}{{{f{Aj}}Fh}{{l{Af}}}}{{{f{Aj}}Fh}{{l{j}}}}{{{f{Aj}}Fh}{{l{A`}}}}{{{f{Aj}}Fh}{{l{En}}}}{{{f{Aj}}Fh}{{l{Ah}}}}6{{{f{Aj}}Fh}{{l{Bn}}}}{{{f{Aj}}Fh}{{l{{Bh{c}}}}}Bl}{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{Aj}}Fh{f{Ef}}Fh}{{l{Bn}}}}{{{f{Aj}}Fh{f{Ef}}}{{l{j}}}}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{A`}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{{Bh{c}}}}}}Fh}{{Bd{IdBb}}}Bl}{{{f{{l{En}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Bn}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Af}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{c}}}}Fh}{{Bd{IdBb}}}n}{{{f{{l{j}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Ah}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Bn}}}}Fh}Id}{{{f{{l{{Bh{c}}}}}}Fh}IdBl}{{{f{{l{Ah}}}}Fh}Id}{{{f{{l{A`}}}}Fh}Id}{{{f{{l{En}}}}Fh}Id}{{{f{{l{c}}}}Fh}Idn}{{{f{{l{Af}}}}Fh}Id}{{{f{{l{j}}}}Fh}Id}{{{f{{l{Bn}}}}Fh}{{Cb{B`}}}}{{{f{{l{j}}}}Fh}{{Cb{B`}}}}{{{f{{l{c}}}}}C`Dd}{{{f{{l{j}}}}}B`}{{{f{{l{Bn}}}}}B`}{{{f{{l{{Bh{c}}}}}}Fh}{{Cb{{f{If}}}}}Bl}0{{{f{C`}}}Ih}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{Bn}}}}}Fh}{{{f{{l{En}}}}}Fh}{{{f{{l{A`}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{Bn}}}}dd}{{Bd{BjBb}}}}{{{f{{l{j}}}}dd}{{Bd{BjBb}}}}{{{f{{l{A`}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}dd}{{Bd{BjBb}}}n}{{{f{{l{Af}}}}dd}{{Bd{BjBb}}}}{{{f{{l{En}}}}dd}{{Bd{BjBb}}}}{{{f{{l{{Bh{c}}}}}}dd}{{Bd{BjBb}}}Bl}{{{f{{l{Ah}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}FhdFh}BjFb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{An{Al}}}}}{{l{Af}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{Aj}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}n}{{{f{{l{c}}}}e}{{l{Af}}}nAd}861204375{{{f{{l{c}}}}}dDd}{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{}Fh}00{{FhIj{Cb{Il}}}{{l{c}}}n}{{{f{{l{Bn}}}}}Ef}{{{f{{l{j}}}}}Ef}{{{f{CnC`}}C`}b}{{C`C`}C`}{{{f{C`}}C`}d}{ce{}{}}00{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}Jf{Cb{Eh}}}{{Jb{JhJd}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Bd{{Jb{JlJj}}Bb}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Jb{JlJj}}}}{{{l{Jd}}Jf}{{Jb{JnJd}}}}{{{f{{l{A`}}}}}}{{{f{{l{Bn}}}}}}{{{f{{l{En}}}}}}{{{f{{l{c}}}}}{}n}{{{f{{l{Af}}}}}}{{{f{{l{{Bh{c}}}}}}}{}Bl}{{{f{{l{Ah}}}}}}{{{f{{l{j}}}}}}{C`}{{{f{{l{c}}}}}{{`{HjHlK`G`Ib}}}n}{{{l{Jj}}}B`}{{{l{c}}}B`Dd}{{{l{Jd}}}{{Jb{KbJd}}}}{{{f{C`}}}d}{{{f{{l{c}}}}}dDd}1{{{f{{l{c}}}}}{{l{Af}}}Kd}000{{{f{{l{c}}}}}{{l{Af}}}Dd}02{{{f{{l{c}}}}}IhDd}{{{f{{l{c}}}}}{{`{Kf}}}Dd}{{{f{C`}}}{{Kh{C`}}}}{{{f{C`}}}{{Kj{C`}}}}{{{f{{l{j}}}}}{{`{{Cj{}{{Cd{Gb}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{{Cb{{f{Hd}}}}}}}}}}}Dd}`{{{f{{l{c}}}}}CbDd}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}{{{f{{l{c}}}}}{{Kl{c}}}Dd}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}01{{{f{{l{c}}}}}FhDd}{{{f{{l{c}}}}e}{{l{c}}}n{AbKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}n}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}nAd}{{{f{{l{A`}}}}{f{Aj}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{An{Al}}}}}{{l{Af}}}}412876035{{{f{{l{c}}}}}Cbn}{{{f{{l{Af}}}}}{{Cb{d}}}}{{{f{{l{A`}}}}}L`}{{{f{{l{Ah}}}}}L`}{{{f{{l{Af}}}}}L`}{{{f{{l{c}}}}}L`n}{{{f{{l{c}}}}}{{Cb{Lb}}}n}{{{f{{l{Af}}}}}{{Cb{Lb}}}}{{{f{{l{c}}}}}{{Cb{Lb}}}Fb}{{{f{{l{Eb}}}}}{{Cb{Ij}}}}{{{f{{l{Ed}}}}}{{Cb{Lb}}}}{{{f{{l{Ed}}}}}L`}{{{f{{l{Eb}}}}}L`}{{{f{{l{c}}}}}L`Fb}=<{{{f{{l{c}}}}}{{Cb{Gf}}}n}<;:9{{{f{Aj}}{f{An}}}{{l{c}}}n}{{{f{Aj}}{f{{An{Al}}}}FhFh}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{AbAd}}{{{f{{l{c}}}}e}{}n{AbAd}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}{{Bd{FhBb}}}n}{{{f{{l{Ah}}}}}{{Bd{FhBb}}}}{{{f{{l{A`}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{Aj}}}Dd}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{f{{An{Al}}}}}}}}}}{{{f{Aj}}c}{{l{Ld}}}{{Hf{{An{Il}}}}}}{{{f{Aj}}{Lh{Lf}}}{{l{El}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{Eh}}}}}}{{{f{Aj}}c}{{l{Af}}}{{Hf{{An{d}}}}}}{{{f{Aj}}c}{{l{Eb}}}{{Hf{{An{{Cb{Ij}}}}}}}}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{Cb{{Fn{Al}}}}}}}}}}{{{f{Aj}}c}{{l{Lj}}}{{Hf{{An{Ll}}}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{{Cb{{Dl{Aj}}}}}}}}}}{{{f{Aj}}c}{{l{Ln}}}{{Hf{{An{{Cb{M`}}}}}}}}{{{f{Aj}}c}{{l{Jd}}}{{Hf{{An{Gb}}}}}}{{{f{Aj}}{Lh{Mb}}}{{l{In}}}}{{{f{Aj}}c}{{l{Md}}}{{Hf{{An{{Cb{Mf}}}}}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{{Cb{Eh}}}}}}}}{{{f{Aj}}c}{{l{Md}}}{{Hf{{An{Mf}}}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{{Cb{{f{Aj}}}}}}}}}}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{Fn{Al}}}}}}}}{{{f{Aj}}c}{{l{Ed}}}{{Hf{{An{{Cb{Lb}}}}}}}}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{Cb{{f{{An{Al}}}}}}}}}}}}{{{f{Aj}}c}{{l{Mh}}}{{Hf{{An{{Cb{Al}}}}}}}}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{Dl{{An{Al}}}}}}}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{{Dl{Aj}}}}}}}}{{{f{Aj}}c}{{l{Mh}}}{{Hf{{An{Al}}}}}}{{{f{Aj}}e}{{l{{Bh{c}}}}}Bl{{Hf{{An{{Cb{c}}}}}}}}{{{f{Aj}}{f{{An{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}c}{{l{Eb}}}{{Hf{{An{Ij}}}}}}{{{f{Aj}}c}{{l{In}}}{{Hf{{An{Mb}}}}}}{{{f{Aj}}c}{{l{A`}}}{{Hf{{An{{f{Aj}}}}}}}}{{{f{Aj}}{Lh{Il}}}{{l{Ld}}}}{{{f{Aj}}c}{{l{Ah}}}{{Hf{{An{{Cb{{Dl{{An{Al}}}}}}}}}}}}{{{f{Aj}}c}{{l{In}}}{{Hf{{An{{Cb{Mb}}}}}}}}{{{f{Aj}}c}{{l{Ed}}}{{Hf{{An{Lb}}}}}}{{{f{Aj}}c}{{l{Ld}}}{{Hf{{An{{Cb{Il}}}}}}}}{{{f{Aj}}c}{{l{Jd}}}{{Hf{{An{{Cb{Gb}}}}}}}}{{{f{Aj}}c}{{l{Af}}}{{Hf{{An{{Cb{d}}}}}}}}{{{f{Aj}}c}{{l{El}}}{{Hf{{An{{Cb{Lf}}}}}}}}{{{f{Aj}}c}{{l{El}}}{{Hf{{An{Lf}}}}}}{{{f{Aj}}{Lh{Gb}}}{{l{Jd}}}}{{{f{Aj}}c}{{l{Lj}}}{{Hf{{An{{Cb{Ll}}}}}}}}{{{f{Aj}}c}{{l{Ln}}}{{Hf{{An{M`}}}}}}{{{f{Aj}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{{Bh{c}}}}}}FhFh}{{l{{Bh{c}}}}}Bl}{{{f{{l{Bn}}}}FhFh}{{l{Bn}}}}{{{f{{l{Ah}}}}FhFh}{{l{Ah}}}}{{{f{{l{En}}}}FhFh}{{l{En}}}}{{{f{{l{Af}}}}FhFh}{{l{Af}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}n}{{{f{{l{A`}}}}FhFh}{{l{A`}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{Aj}}{Fn{c}}}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}{Fn{c}}Hd}{{l{{Bh{c}}}}}Bl}{{{f{Aj}}Fn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{Af}}}}}}{{{l{Af}}}}{C`C`}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}n}{{{f{{l{A`}}}}{f{Aj}}}{{l{Af}}}}{{{f{{l{Bn}}}}{f{{l{Bn}}}}}{{l{Af}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}nAd}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{An{Al}}}}}{{l{Af}}}}547831{{{f{{l{Bn}}}}{f{{l{Bn}}}}}}31{{{f{{l{c}}}}}FhDd}`{{{f{{l{A`}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{Bn}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gd{Gb}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Mj{}{{Cd{{Cb{B`}}}}}}}}}}{{{f{{l{A`}}}}}{{`{{Mj{}{{Cd{{Cb{{f{Aj}}}}}}}}}}}}{{{f{{l{A`}}}}}{{`{Ml}}}}{{{f{Cn{l{j}}}}}{{`{Ml}}}}{{{f{{l{c}}}}}L`n}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{Eb}}}}LbMn}{{Bd{{Cb{Ij}}Bb}}}}{{{f{{l{Ed}}}}LbMn}{{Bd{{Cb{Lb}}Bb}}}}{{{f{{l{c}}}}LbMn}{{Bd{{Cb{Lb}}Bb}}}Fb}{{{f{{l{c}}}}LbMn}{{Bd{L`Bb}}}Fb}{{{f{{l{Eb}}}}LbMn}{{Bd{L`Bb}}}}{{{f{{l{Ed}}}}LbMn}{{Bd{L`Bb}}}}{{{f{Aj}}FhLb}{{Bd{{l{Af}}Bb}}}}{{{f{Aj}}FhLbLb}{{Bd{{l{c}}Bb}}}n}{{{f{Aj}}Fh}{{l{c}}}n}{{{f{Aj}}FhLbLb}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Dd}{{{f{{l{c}}}}}{{f{N`}}}Dd}{{{f{{l{El}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Md}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ld}}}}}B`}{{{f{{l{Mh}}}}}B`}{{{f{{l{Lj}}}}}B`}{{{f{{l{In}}}}}B`}{{{f{{l{Ed}}}}}B`}{{{f{{l{Jd}}}}}B`}367092:5184{{{l{c}}e}{}n{AbAd}}{{{f{{l{c}}}}e}{}n{AbAd}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{CnC`}}C`}b}{{{f{Cn{l{c}}}}{f{Aj}}}bDd}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Bn}}}}}{{l{Bn}}}}{{{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{{Bh{c}}}}}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Dh}}Nb}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kd{{E`{{f{Cn{l{c}}}}}{{Df{Cb}}}}}}{{{f{{l{c}}}}Lbdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}Fhdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{Af}}}}{f{{An{Lf}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{{{f{{l{A`}}}}{f{{An{Lf}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{{f{Aj}}}}}}}}}}{{{l{c}}{f{{An{Lf}}}}e}{{Bd{B`Bb}}}Nd{{Gh{}{{Cd{Cb}}}}}}{{{f{{l{Ah}}}}c{Cb{{f{{An{Al}}}}}}}{{Bd{{l{Ah}}Bb}}}{{Gh{}{{Cd{Lf}}}}}}{{{f{{l{Af}}}}c{Cb{d}}}{{Bd{{l{Af}}Bb}}}{{Gh{}{{Cd{Lf}}}}}}{{{f{{l{A`}}}}c{Cb{{f{Aj}}}}}{{Bd{{l{A`}}Bb}}}{{Gh{}{{Cd{Lf}}}}}}{{{f{{l{c}}}}eCb}{{Bd{{l{c}}Bb}}}n{{Gh{}{{Cd{Lf}}}}}}{{{f{{l{Ah}}}}ce}{{Bd{{l{Ah}}Bb}}}{{Gh{}{{Cd{Lf}}}}}{{Dh{{Cb{{f{{An{Al}}}}}}}{{Df{{Cb{{Fn{Al}}}}}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Gh{}{{Cd{Lf}}}}}{{Dh{{Cb{{f{Aj}}}}}{{Df{{Cb{Eh}}}}}}}}{{{f{{l{Af}}}}ce}{{Bd{{l{Af}}Bb}}}{{Gh{}{{Cd{Lf}}}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}n{{Gh{}{{Cd{Lf}}}}}{{Dh{Cb}{{Df{Cb}}}}}}{{{f{{l{Ah}}}}{f{{l{Af}}}}{Cb{{f{{An{Al}}}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{A`}}}}{f{{l{Af}}}}{Cb{{f{Aj}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}{f{{l{Af}}}}Cb}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Af}}}}{f{{l{Af}}}}{Cb{d}}}{{Bd{{l{Af}}Bb}}}}{{{f{CnC`}}C`d}b}{{{f{Cn{l{j}}}}}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{Cn{l{c}}}}Lf}bDd}{{{f{Cn{l{c}}}}Ih}bDd}{{{f{CnC`}}Ih}b}{{{f{{l{Ah}}}}Gb}{{l{Ah}}}}{{{f{{l{En}}}}Gb}{{l{En}}}}{{{f{{l{Bn}}}}Gb}{{l{Bn}}}}{{{f{{l{j}}}}Gb}{{l{j}}}}{{{f{{l{c}}}}Gb}{{l{c}}}n}{{{f{{l{A`}}}}Gb}{{l{A`}}}}{{{f{{l{{Bh{c}}}}}}Gb}{{l{{Bh{c}}}}}Bl}{{{f{{l{Af}}}}Gb}{{l{Af}}}}{{{f{{l{Af}}}}Gb{Cb{d}}}{{l{Af}}}}{{{f{{l{Bn}}}}Gb{Cb{{f{B`}}}}}{{l{Bn}}}}{{{f{{l{En}}}}Gb{Cb{{f{{An{Al}}}}}}}{{l{En}}}}{{{f{{l{Ah}}}}Gb{Cb{{f{{An{Al}}}}}}}{{l{Ah}}}}{{{f{{l{{Bh{c}}}}}}Gb{Cb{{Bh{c}}}}}{{l{{Bh{c}}}}}Bl}{{{f{{l{c}}}}GbCb}{{l{c}}}n}{{{f{{l{j}}}}Gb{Cb{{f{B`}}}}}{{l{j}}}}{{{f{{l{A`}}}}Gb{Cb{{f{Aj}}}}}{{l{A`}}}}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}GbFh}{{l{c}}}Dd}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{Ah}}}}d}{{l{Ah}}}}{{{f{{l{Af}}}}d}{{l{Af}}}}{{{f{{l{A`}}}}Ej}{{l{A`}}}}{{{f{{l{c}}}}Ej}{{l{c}}}n}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{Ah}}}}Ej}{{l{Ah}}}}{{{f{{l{Af}}}}Ej}{{l{Af}}}}{{{f{{l{c}}}}Al}{{Cb{Lb}}}n}{{{f{{l{Ed}}}}Al}L`}{{{f{{l{Eb}}}}Al}L`}{{{f{{l{c}}}}Al}L`Fb}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AbAd}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}e}{}n{AbAd}}{{C`C`}C`}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Af}}}}}{{Cb{Lf}}}}{{{f{{l{c}}}}}Cbn}{{{f{{l{A`}}}}}L`}{{{f{{l{c}}}}}L`n}{{{f{{l{Af}}}}}L`}{{{f{{l{Ah}}}}}L`}8{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Dd{{Hf{{An{Lf}}}}Nf}}{{{f{{l{c}}}}{f{{An{Nh}}}}Ih}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{An{Nh}}}}}{{l{c}}}Dd}{{{f{{l{A`}}}}{f{{l{El}}}}}{{l{A`}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}{{Hf{{An{Lf}}}}Nf}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{Hf{{An{Lf}}}}Nf}}{{{f{{l{A`}}}}{f{c}}}{{l{A`}}}{{Hf{{An{Lf}}}}Nf}}{{{f{{l{Ah}}}}{f{{l{El}}}}}{{l{Ah}}}}`{{{f{{l{c}}}}dNl}{{Fn{{Fn{Nn}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{A`}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cn{l{Bn}}}}Ef}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{{l{j}}}}}{{Bd{{Of{O`{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{Of{{Oh{f}}{Od{{Ob{Fh}}}}}}Bb}}}n}{{{f{c}}}e{}{}}0{{{f{{l{Ah}}}}}{{l{A`}}}}{{{f{{l{c}}}}}{{Fn{Cb}}}n}{{{f{{l{c}}}}}{{Oj{Fn{Fn{Cb}}}}}n}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}01{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bn}}}}c}{{Bd{{l{Bn}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{Bn}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}Dj}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{c{{Bd{e}}}{}{}}00{{{f{Aj}}g}{{Bd{{l{i}}e}}}Cf{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{{Dd{}{{Gn{c}}}}Dd}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Bd{{Cb{B`}}Bb}}}}}}}}{{{f{c}}}Ol{}}00{{C`C`}C`}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{{Bh{c}}}}}}}{{Bd{{l{{Bh{c}}}}Bb}}}Bl}{{{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Ah}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}Fh}{}Dd}{{{f{{l{c}}}}Al}{{Cb{Lb}}}n}{{{f{{l{Eb}}}}Al}L`}{{{f{{l{c}}}}Al}L`Fb}{{{f{{l{Ed}}}}Al}L`}{{{f{{l{Af}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bh{c}}}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}Bl}{{{f{{l{Ah}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ah}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bh{c}}}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}Bl}{{{f{{l{En}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}{ce{}{}}00{{{f{{l{Bn}}}}}Fh}{{{f{Aj}}c}{{l{e}}}Cf{{Dd{}{{Gn{c}}}}Dd}}{{{f{{l{c}}}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{l{c}}{f{Aj}}}{{l{c}}}Dd}{{{f{{An{On}}}}e}c{}{{A@`{{f{{l{El}}}}}{{Df{c}}}}}}{{{f{{l{c}}}}Ih}{{l{c}}}Dd}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}32103232102323013223013232102323{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Bn}}}}{f{{l{c}}}}e}{{l{Bn}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}````{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{CnA@j}}{f{Cf}}}b}{{{f{CnA@j}}}b}{{{f{CnA@l}}}b}{{{f{CnA@n}}c}b{{Cj{}{{Cd{{Cb{d}}}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bn{{Cj{}{{Cd{Cb}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bn{{Cj{}{{Cd{}}}}Ib}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}65{{{f{CnAAf}}}b}{{{f{CnAAh}}}b}{{{f{CnA@n}}}b}{{{f{CnAAj}}}b}{{{f{Cn{AA`{c}}}}}bn}{{{f{Cn{AAl{c}}}}}b{AAnNf}}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{CnA@j}}{Cb{{f{Cf}}}}}b}{{{f{CnA@j}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{Cb{{f{An}}}}}bn}{{{f{Cn{AAl{c}}}}{Cb{e}}}b{AAnNf}{{Hf{c}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@j}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{f{B`}}}{{Bd{bBb}}}n}{{{f{Cn{AA`{c}}}}{f{An}}}bn}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{Cb{{f{Aj}}}}}}}}Ib}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{Cb{{f{{An{Al}}}}}}}}}}Ib}}{{{f{CnAAd}}c}b{}}{{{f{Cn{AAl{c}}}}e}b{AAnNf}{{Hf{c}}}}{{{f{CnAB`}}d}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{f{Aj}}}}}}}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000`{{{f{{AAl{c}}}}}{{AAl{c}}}{AAnNf}}{{{f{AB`}}}AB`}{{{f{ABb}}}ABb}{{{f{{ABd{c}}}}}{{ABd{c}}}{ABfn}}{{{f{c}}{f{Cne}}}b{}{}}000{{}A@j}{{}A@l}{Fh{{f{c}}}{}}0000000000{Fh{{f{Cnc}}}{}}0000000000{Fhb}0000000000{{{f{AAf}}}d}{{{f{AAh}}}d}{{{f{A@n}}}d}{{{f{{AA`{c}}}}}dn}{{{f{AAb}}}d}{{{f{AAf}}}{{f{N`}}}}{{{f{AAh}}}{{f{N`}}}}{{{f{A@n}}}{{f{N`}}}}{{{f{{AA`{c}}}}}{{f{N`}}}n}{{{f{AAb}}}{{f{N`}}}}{AAd{{l{c}}}Dd}{{{f{CnA@j}}}{{l{j}}}}{{{f{CnA@l}}}{{l{j}}}}{{{f{CnAAj}}}{{l{j}}}}{{{f{CnAAb}}}{{l{j}}}}{{{AAl{{An{Al}}}}}{{l{Ah}}}}{{{AAl{Aj}}}{{l{A`}}}}{AB`{{l{Af}}}}{ABbABh}{{{ABd{c}}}{{l{c}}}n}`{cc{}}0000000000{{{f{Aj}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Aj}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{{{f{Aj}}{f{{An{c}}}}}ABj{}}{{{f{Aj}}{f{{An{{Cb{c}}}}}}}ABj{}}{{{f{Ef}}FhFh{f{Aj}}}{{Bd{{Ch{AAb}}Bb}}}}{{}Fh}0000000000{{{f{CnAAf}}}{{Ch{Cf}}}}{{{f{CnAAh}}}{{Ch{Cf}}}}{{{f{CnA@n}}}{{Ch{Cf}}}}{{{f{Cn{AA`{c}}}}}{{Ch{Cf}}}n}{{{f{CnAAb}}}{{Ch{Cf}}}}{ce{}{}}0000000000`{{{f{Aj}}Fh{Cb{Ef}}}A@j}{{{f{Aj}}Fh{Cb{Ef}}}A@l}{{{f{Aj}}FhFh}AAf}{{{f{Aj}}FhFh}AAh}{{{f{Aj}}FhFh}A@n}{{{f{Aj}}Fh}AAj}{{{f{Aj}}FhFhEf}{{AA`{c}}}n}{{{f{Aj}}Fh}{{AAl{c}}}{AAnNf}}{{{f{Aj}}Fh}AB`}{{{f{Aj}}Fh}ABb}{{{f{Aj}}Fh}{{ABd{c}}}n}{{{f{Aj}}FhFhEfEf}{{AA`{c}}}n}{{{f{CnAAd}}}b}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}Ol{}}0000000000{ce{}{}}0000000000````````{{{f{CnAAb}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAb}}}d}{{{f{AAb}}}{{f{N`}}}}{{{f{CnAAb}}}{{l{j}}}}{{{f{Ef}}FhFh{f{Aj}}}{{Bd{{Ch{AAb}}Bb}}}}{{{f{CnAAb}}}{{Ch{Cf}}}}``{{ABl{f{Aj}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{Aj}}Ef}{{l{c}}}Dd}0{{ABl{f{Aj}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{Aj}}Ef}{{Bd{{l{c}}e}}}Dd{}}0`{AC`AC`}``{{ACb{f{Aj}}Ef}e{}{{ACd{c}}}}{{e{f{Aj}}Ef}ACd{}{{I`{}{{Cd{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Cnc}}}{{f{Cne}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Cnc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACf}}}ACh}{{{f{ACj}}Ef}ACl}{{{f{CnACh}}}Cb}{{{f{CnACl}}}Cb}{{{f{CnACn}}}Cb}{{{f{Cn{AD`{c}}}}}CbCj}32{{{f{Cn{AD`{c}}}}}CbG`}`{{{f{ACh}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{ACl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{{AD`{c}}}}}{{Gf{Fh{Cb{Fh}}}}}Cj}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}Ol{}}000<<<<``````{{{f{c}}h}b{}}{e{{ADb{c}}}Bl{{Gh{}{{Cd{{Cb{{f{c}}}}}}}}}}{e{{ADb{c}}}Bl{{Gh{}{{Cd{{f{c}}}}}}}}{{ADde}g{}{{Gh{}{{Cd{c}}}}}{}}0{{{f{If}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Bl}{{{f{Cn{ADb{c}}}}}{{f{CnADf}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`{{{f{{ADb{c}}}}}{{ADb{c}}}{ABfBl}}{{{f{c}}{f{Cne}}}b{}{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Bl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADb{c}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhBl}}{cc{}}{{FhADd}{{ADb{c}}}Bl}{{{f{{ADb{c}}}}Fh}{{Cb{{f{c}}}}}Bl}{{}ADd}{{{f{Hd}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Bl}{{ADd{f{Hd}}}{{ADb{c}}}Bl}{{{f{Hd}}{f{{ADb{c}}}}}{{ADb{c}}}Bl}0{{}Fh}{ce{}{}}{{{f{{ADb{c}}}}}{}Bl}{{{f{{ADb{c}}}}Fh}dBl}{{{f{c}}Fh}d{}}1{{{f{{ADb{c}}}}}{{ADl{{f{c}}{Ff{c}}ADj}}}Bl}{{{f{{ADb{c}}}}}{{ADl{ADj}}}Bl}{{{f{{ADb{c}}}}}FhBl}0`{{{f{Cn{ADb{c}}}}{Cb{Hd}}}bBl}{{{f{Cn{ADb{c}}}}FhFh}bBl}{{{f{c}}FhFh}e{}{}}01{{{f{If}}}{{Ch{If}}}}{{{f{{ADb{c}}}}}{{Ch{Cf}}}Bl}{{{f{c}}}e{}{}}{g{{Bd{{ADb{c}}e}}}Bl{}{{Gh{}{{Cd{{Bd{{Cb{{f{c}}}}e}}}}}}}}{g{{Bd{{ADb{c}}e}}}Bl{}{{Gh{}{{Cd{{Bd{{f{c}}e}}}}}}}}{{ADdg}{{Bd{ie}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{If}}}{{f{Aj}}}}{{}{{f{Aj}}}}{{{f{{ADb{c}}}}}{{Cb{{f{Hd}}}}}Bl}{{{f{{ADb{c}}}}Fh}{{f{c}}}Bl}{{{f{{ADb{c}}}}Fh}{}Bl}1{{{f{{ADb{c}}}}}{{f{{ADn{{Fn{c}}}}}}}Bl}{{{f{{ADb{c}}}}}{}Bl}{{{f{{ADb{c}}}}}{{Ff{c}}}Bl}{ce{}{}}{{{f{{ADb{c}}}}{Cb{Hd}}}{{Ch{Cf}}}Bl}{{{ADb{c}}{Cb{Hd}}}{{ADb{c}}}Bl}0`{{{f{Cn{AE`{c}}}}}bBl}0{{{f{Cn{AE`{c}}}}{Cb{c}}}bBl}{{{f{Cn{AE`{c}}}}c}bBl}{{{f{Cn{AE`{c}}}}{f{ADf}}}bBl}{{{f{Cn{AE`{c}}}}{f{ADf}}}{{Bd{bBb}}}Bl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}{{AE`{c}}}Bl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{AE`{c}}}{{l{{Bh{c}}}}}Bl}{cc{}}{{}Fh}{ce{}{}}{{{f{Aj}}Fh}{{AE`{c}}}Bl}{{{f{Cn{AE`{c}}}}}B`Bl}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{CnAEb}}}b}{{{f{CnAEb}}{Cb{{f{ADf}}}}}b}{{{f{CnAEb}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`?>={{{f{AEd}}{f{CnGj}}}{{Bd{bGl}}}}<{{{f{Aj}}Fh}{{Ch{AEb}}}}{{}{{ADn{Dh}}}}{{}ADd}>={{}d}`{{{Ch{Dh}}{ADn{Dh}}ADd}b}{{{f{CnAEb}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{An{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{{f{AEl}}Ej}{{l{El}}}}{{{f{AEl}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AFb}}}AFb}{{{f{c}}{f{Cne}}}b{}{}}00{{}Ej}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AFb}}{f{AFb}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFf}}}{{Bd{B`Bb}}}}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}Dd}`{{{f{Ej}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AFb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{F`}}}Ej}1{{{f{Ej}}}F`}2`{{{f{Aj}}cFh}AFl{}}{{{f{Aj}}Fh}AFn}`{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}??{{{f{Ej}}{f{Cnc}}}bAGb}{{{f{F`}}{f{Cnc}}}bAGb}{{{f{AFb}}{f{Cnc}}}bAGb}{{}Fh}00{ce{}{}}00{{{f{AGd}}}{{Bd{{l{Af}}Bb}}}}{{{f{AGf}}}{{Bd{{l{Af}}Bb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0``{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AGh}}}{{Cb{Lb}}}}{{{f{AGj}}}{{Cb{c}}}{}}2{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}``{{{f{AEn}}}{{Bd{FhBb}}}}{{}Ej}{{}F`}{{{f{AGl}}FhFh}{{l{c}}}Dd}88``{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{AGj}}LbMn}{{Bd{{Cb{c}}Bb}}}{}}{{{f{AGn}}}B`}0{{{f{AH`}}}AH`}{{{f{AHb}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lf}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lf}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}`{{{f{AHd}}{f{{l{Af}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{{f{AHj}}FhFh}AHj}0`{{{f{AEl}}d}{{l{c}}}Dd}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{AHl}}Al}{{Cb{Lb}}}}{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{AIb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00{{{f{AEn}}}{{Bd{AEnBb}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}101010{{F`c}F`{{Gh{}{{Cd{d}}}}}}{EjEj}{F`F`}`{{{f{AId}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Aj}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Aj}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Aj}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}Fhn}0{{IhIh}Ih}{{{f{{l{El}}}}Lf}{{Bd{bBb}}}}{{{f{{AJ`{Lf}}}}Lf}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{AJb{f{c}}d}LfAIh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{AJb}}}AJb}{{{f{c}}{f{Cne}}}b{}{}}{{}AJb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{AJb}}{f{AJb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AJb}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4`{{Fh{f{Cn{Fn{d}}}}}b}```{{{f{AHj}}FhFh}AHj}0{{Fh{f{{An{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{AJfBb}}}}{{{f{Aj}}{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Aj}}{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AJfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````77`{AJhGb}00{{{f{Aj}}}{{Bd{EhBb}}}}{{{f{Aj}}}{{Bd{AJjBb}}}}{{{f{AJl}}}Gb}333````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AJn}}c}AJn{{E`{{f{B`}}}{{Df{B`}}}}}}{{{f{AK`}}}d}{{{f{Id}}}{{`{{Cj{}{{Cd{Id}}}}}}}}{{{f{Id}}{f{Cn{Fn{Id}}}}}b}{{AK`d}AK`}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{Id}}{f{Id}}}Id}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Bj}}}B`}{{{f{CnAKb}}{Cb{{f{Aj}}}}}b}{{{f{CnAK`}}{f{AK`}}}{{Bd{bBb}}}}{{{f{CnAKb}}}b}{{{f{CnAKb}}{f{Aj}}}b}{{{f{AK`}}Ej}{{l{El}}}}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{L`}}}Id}{{{f{Id}}}Id}{{{f{{Jb{J`In}}}}}{{`{Ib}}}}{{{f{{Jb{JhJd}}}}}{{`{Ib}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{N`}}}{{f{Ef}}}}{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{Jb{KbJd}}}}}{{`{Ib}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}000000000000000000000000000000000000000000{Ef{{Ch{Ef}}}}{{{ALd{Aj}}}ALf}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JhJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{J`In}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JlJj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JnJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{KbJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AK`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{Id}}{f{Ef}}}Id}{{{f{{Jb{JhJd}}}}Jf}{{Jb{JhJd}}}}{{{f{{Jb{JnJd}}}}Jf}{{Jb{JnJd}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ed}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{{Jb{ce}}}}}{{Jb{ce}}}DdDd}{{{f{ALl}}}ALl}{{{f{ALf}}}ALf}{{{f{AK`}}}AK`}{{{f{AJn}}}AJn}{{{f{L`}}}L`}{{{f{ALn}}}ALn}{{{f{Id}}}Id}{{{f{AM`}}}AM`}{{{f{Ef}}}Ef}{{{f{N`}}}N`}{{{f{Jf}}}Jf}{{{f{Mh}}}Mh}{{{f{Md}}}Md}{{{f{El}}}El}{{{f{Ld}}}Ld}{{{f{Ln}}}Ln}{{{f{Lj}}}Lj}{{{f{In}}}In}{{{f{Jd}}}Jd}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{J`}}}J`}{{{f{Kb}}}Kb}{{{f{A`}}}A`}{{{f{Ah}}}Ah}{{{f{En}}}En}{{{f{Af}}}Af}{{{f{Jl}}}Jl}{{{f{Jh}}}Jh}{{{f{Jn}}}Jn}{{{f{AMb}}}AMb}{{{f{ADd}}}ADd}{{{f{AMd}}}AMd}{{{f{c}}{f{Cne}}}b{}{}}000000000000000000000000000000000{{{f{CnN`}}Ef}b}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{f{Ef}}}d}00{{{ALd{Aj}}}Ef}{{{f{N`}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}AMh}{{}ALl}{{}ALf}{{}Id}{{}AM`}{{}Ef}{{}ADd}{Fh{{f{c}}}{}}0{{{f{{Jb{ce}}}}}fDdDd}11111111111111111111111111111111111111111{Fh{{f{Cnc}}}{}}00{{{f{Cn{Jb{ce}}}}}{{f{Cn}}}DdDd}1111111111111111111111111111111111111111{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AKbc}AK`{{Gh{}{{Cd{{Cb{{f{Aj}}}}}}}}}}{Fhb}0000000000000{{{f{CnAJn}}}b}11111111111111111111111111111{{{f{ALj}}}{{f{Ef}}}}{{{f{{Jb{JlJj}}}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{f{Ef}}}}{{{f{{Jb{JhJd}}}}}{{f{Ef}}}}{{{f{{Jb{KbJd}}}}}{{f{Ef}}}}{{{f{{Jb{J`In}}}}}{{f{Ef}}}}{{{f{AK`}}}{{f{Ef}}}}{{{f{AJn}}}{{f{Ef}}}}{{{f{L`}}}{{f{Ef}}}}{{{f{Id}}}Ef}`{{{f{ALl}}{f{ALl}}}d}{{{f{Id}}{f{Id}}}d}{{{f{AM`}}{f{AM`}}}d}{{{f{Ef}}{f{ADd}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{N`}}{f{N`}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Id}}{f{Id}}d}d}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{Aj}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}3210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jb{ce}}}}}N`DdDd}{{{f{AJn}}{f{Aj}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{An{B`}}}}}}{{{f{CnAJn}}}{{f{Cn{Fn{B`}}}}}}{{{f{ALf}}{f{Aj}}}{{Cb{Lf}}}}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AKbAK`}{AMh{{ADn{ALf}}}}{{{f{ALl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Id}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{AM`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ef}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{N`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Jf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{ADd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMd}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{In}}}{{Jb{J`In}}}}1{{{l{Jd}}}{{Jb{KbJd}}}}2222222222222{cIdAMj}3{{{f{{An{Al}}}}}Id}{dId}{{{Cb{c}}}Id{{AMl{Id}}}}{{{f{Aj}}}Id}7{IdEf}{{{f{ADd}}}Ef}9{{{f{Id}}}Ef}{{{f{Id}}}N`}{{{f{AMn}}}N`}<<{{{f{AMd}}}Jf}===================={AN`ADd}>{ANbADd}?{{{f{ADd}}d}Ef}{{{l{El}}{ADn{ALf}}dALl}AK`}{{{f{Aj}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{ANd}}}}}}{{{f{Aj}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{{Cb{ANd}}}}}}}}{{{l{El}}ALl}AK`}{{{f{Aj}}c}{{Jb{J`In}}}{{Gh{}{{Cd{ANf}}}}}}{{{f{Aj}}c}{{Jb{J`In}}}{{Gh{}{{Cd{{Cb{ANf}}}}}}}}{{{f{Aj}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{AJh}}}}}}{{{f{Aj}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{{Cb{AJh}}}}}}}}{{{f{Aj}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{AJl}}}}}}{{{f{Aj}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{{Cb{AJl}}}}}}}}{{{ANj{ANh}}Ef}N`}{{{f{{l{A`}}}}{f{{ALd{Aj}}}}ALl}{{Bd{AK`Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{Aj}}dFhALl}AK`}{{{f{Aj}}Fh}AJn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALf}}Lf}{{f{Aj}}}}{{{f{{Jb{JnJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{KbJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JhJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JlJj}}}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AK`}}Fh}{{Bd{IdBb}}}}{{{f{AJn}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}Id}{{{f{{Jb{JlJj}}}}Fh}Id}{{{f{{Jb{KbJd}}}}Fh}Id}{{{f{{Jb{JhJd}}}}Fh}Id}{{{f{{Jb{JnJd}}}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{AK`}}Fh}Id}{{{f{AJn}}Fh}Id}{{{f{ALf}}}{{f{{ALd{Aj}}}}}}{{}Ef}000000000000000000000000{{{f{ALf}}Lf}{{Cb{{f{Aj}}}}}}{{{f{AK`}}}{{f{{ADn{ALf}}}}}}{{{f{Id}}}{{Cb{{f{Aj}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{Aj}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}1230{{{f{Id}}{f{Cnc}}}bAGb}{{{f{AM`}}{f{Cnc}}}bAGb}{{{f{Ef}}{f{Cnc}}}bAGb}{{{f{N`}}{f{Cnc}}}bAGb}{{{f{Jf}}{f{Cnc}}}bAGb}{{{f{ADd}}{f{Cnc}}}bAGb}{{{f{AMd}}{f{Cnc}}}bAGb}{{{f{Id}}{f{Cnc}}d}bAGb}{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}Fh}000000000000000000000000000000000000000000{{{f{Ef}}}{{Cb{{f{Ef}}}}}}{{{f{ADd}}}{{Cb{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AJn}}}}{{{Jb{KbJd}}}B`}{{{Jb{J`In}}}B`}{{{Jb{JlJj}}}B`}{{{Jb{JhJd}}}B`}{{{Jb{JnJd}}}B`}{AK`B`}{AJnB`}{{L`{f{Aj}}}B`}{Id{{Bd{IdBb}}}}{{{f{Ef}}}d}00{{{f{Id}}}d}11{{{f{AK`}}}d}{{{f{AJn}}}d}1323{{{f{ALf}}}d}34440443434344443444434{{{f{ADd}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AJn}}}ACn}{{{f{AK`}}}ANn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALf}}}Fh}{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{AK`}}{f{Aj}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}3210{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{dBb}}}}{{{f{AK`}}}L`}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnAMh}}{f{{ADn{ALf}}}}}{{Bd{bBb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}03{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}1{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}01{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AK`}}}{{Bd{FhBb}}}}{{{f{AK`}}}{{f{Aj}}}}{{{f{AJn}}}{{f{{ANj{ANh}}}}}}{{{f{N`}}}{{f{{ANj{ANh}}}}}}`{{{f{{Jb{KbJd}}}}}{{l{In}}}}:{{}c{}}0{{{f{Aj}}FhALl}AKb}{{{f{Aj}}c}{{Jb{J`In}}}{{Hf{{An{ANf}}}}}}{{{f{Aj}}c}{{Jb{JnJd}}}{{Hf{{An{ANd}}}}}}{{{f{Aj}}c}{{Jb{KbJd}}}{{Hf{{An{AJl}}}}}}{{{f{Aj}}c}{{Jb{KbJd}}}{{Hf{{An{{Cb{AJl}}}}}}}}{{{f{Aj}}c}{{Jb{JnJd}}}{{Hf{{An{{Cb{ANd}}}}}}}}{{{f{Aj}}c}{{Jb{J`In}}}{{Hf{{An{{Cb{ANf}}}}}}}}{{{f{Aj}}c}{{Jb{JhJd}}}{{Hf{{An{AJh}}}}}}{{{f{Aj}}c}{{Jb{JhJd}}}{{Hf{{An{{Cb{AJh}}}}}}}}{{{ADn{ALf}}}AMh}{{{f{Aj}}{f{{An{B`}}}}}{{Bd{AJnBb}}}}{{EfId}L`}{{{f{Aj}}Ef}N`}{{{f{CnANn}}}Cb}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{Aj}}}}{{{f{AK`}}{f{{l{A`}}}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}2130{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{KbJd}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{J`In}}}}{{{f{Id}}{f{Id}}}{{Cb{AO`}}}}{{{f{Jf}}{f{Jf}}}{{Cb{AO`}}}}{{{f{AK`}}}{{f{{l{El}}}}}}{{{f{{Jb{JlJj}}}}}{{Cb{Fh}}}}{{{f{CnAJn}}}b}{{{f{AJn}}}{{f{N`}}}}{{{f{CnAKb}}{f{Aj}}}{{Gf{Lfd}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{CnAJn}}{f{Aj}}}b}{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{AJn}}}{{Bd{{l{En}}Bb}}}}{{{f{ALf}}{f{ALf}}}d}{{{f{{Jb{JlJj}}}}}Fh}{{{f{{Jb{KbJd}}}}}{{l{Ln}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{{f{CnN`}}{ANj{ANh}}}b}{{{f{Cn{Jb{JnJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Eh}{{Bd{bBb}}}}{{{f{ANn}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AK`}}d}AK`}{{{f{AK`}}Ej}AK`}{{{f{{Jb{J`In}}}}{f{Aj}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Aj}}}{{Bd{{l{A`}}Bb}}}}{{{f{{Jb{KbJd}}}}{f{Aj}}}{{l{A`}}}}{{{f{Id}}{f{Ef}}}{{Cb{Id}}}}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jb{JnJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}{{f{{Cb{Eh}}}}}}{{{f{AK`}}dd}{{Ch{Cf}}}}{{{f{Ef}}d}ADd}{{{f{N`}}d}AMn}{JfAMd}{{{f{Ef}}{f{Aj}}d}AMn}{Jf{{f{Aj}}}}{{{f{AK`}}{f{{ALd{Aj}}}}AOd}AK`}{{{f{AK`}}}{{Bd{AK`Bb}}}}{{{f{AK`}}}AK`}{{{f{ADd}}}{{f{ADd}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{ADd}}}AOf}{{{f{{Jb{KbJd}}}}{f{Aj}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Aj}}}{{Bd{{l{A`}}Bb}}}}{{{f{{Jb{J`In}}}}{f{Aj}}}{{l{A`}}}}{{{f{c}}}Eh{}}00{{{f{Id}}{f{Id}}}d}{{{f{AJn}}}Fh}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Aj}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Aj}}}{{Bd{{Jb{JhJd}}Bb}}}}{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{Id}}}{{Bd{cBb}}}Kn}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Id}}{f{Ef}}}{{Bd{IdBb}}}}{{{f{Ef}}d}{{Bd{ADdBb}}}}{{{f{c}}}Ol{}}000000000000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{AK`}}}{{Bd{AK`Bb}}}}{AJnAOh}{{{f{CnL`}}Id}b}{{{f{AK`}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{L`}}}{{f{Id}}}}{{{f{AK`}}}{{Bd{AOhBb}}}}2{{{f{Ef}}Id}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{Ef}}}Id}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}AOj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{{}b}{Fhb}{{{f{CnAOj}}}b}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{}d}3``````````````````````{{{f{AOl}}}{{f{Aj}}}}>>>===`{{BbAOl}Bb}{BbBb}=={{{f{AOl}}}f}>===;;;`{{{f{AOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{CnGj}}}{{Bd{bGl}}}}0<{cAOl{{AMl{{Dl{Aj}}}}}}=={B@`Bb}{B@bBb}{B@dBb}{B@fBb}{B@hBb}{B@jBb}{{}{{Fj{{f{Aj}}AOn}{{Df{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAIl}````{{{Fj{{f{Aj}}AOn}{{Df{b}}}}}b}{cBbB@l}{{{f{c}}}Eh{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{CnAOh}}{Fn{B`}}{f{B@n}}}{{Bd{bBb}}}}{{{f{AOh}}{f{Dh}}}{{Fn{B`}}}}0{{{f{AOh}}{f{{l{Af}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{An{{ANj{ANh}}}}}}}{{Bd{AOhBb}}}}0{{{f{AOh}}GbFh}AOh}{{{f{CnAOh}}}{{f{CnAOh}}}}{{{f{CnAOh}}{f{Aj}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000{{{f{AOh}}}AOh}{{{f{BAb}}}BAb}{{{f{BAd}}}BAd}2{{{f{c}}{f{Cne}}}b{}{}}00{{{f{AOh}}{f{Aj}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOh}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{}BAd}{{}AOh}{Fh{{f{c}}}{}}0000{Fh{{f{Cnc}}}{}}0000{Fhb}0000{{{f{AOh}}{f{Aj}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{Aj}}}{{Bd{B`Bb}}}}{{{f{AOh}}{f{{An{c}}}}}AOh{{Hf{Aj}}}}{{{f{AOh}}{f{{BAf{{f{Aj}}Nl}}}}}AOh}{{{f{AOh}}{Cb{{f{{An{c}}}}}}}{{Bd{AOhBb}}}{{Hf{Aj}}}}{{{f{AOh}}}{{Fn{Ef}}}}9{{{f{BAd}}{f{BAd}}}d}{{{f{AOh}}{f{AOh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOh}}}Fh}`{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}}{{Fn{N`}}}}{{{f{AOh}}AFb}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{Af}}}}}{{Bd{AOhBb}}}}{{{f{BAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOh}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}000{{{f{BAh}}}AOh}{{{f{B@n}}}AOh}2{AJnAOh}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cAOh{{Gh{}{{Cd{B`}}}}}}{{{f{{An{BAj}}}}}{{Bd{AOhBb}}}}{{{f{{An{BAj}}}}{f{B@n}}}{{Bd{AOhBb}}}}{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{f{BAj}}}}}}}}{{{f{AOh}}Fh}{{Cb{{Fn{Id}}}}}}{{{f{AOh}}{f{Aj}}}{{Cb{Fh}}}}{{{f{AOh}}}{{Fn{{f{Aj}}}}}}{{{f{AOh}}}{{Fn{{ANj{ANh}}}}}}{{{f{AOh}}}{{f{{An{B`}}}}}}{{{f{CnAOh}}}{{f{Cn{Fn{B`}}}}}}{{{f{AOh}}Fh}{{Bd{BAjBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}{{Bd{bBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}b}{{{f{AOh}}}{{Cb{{Bd{EfBb}}}}}}`{{{f{AOh}}e}{{Bd{BAlBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}1{{{f{AOh}}{Fn{B`}}dd}{{Bd{BAlBb}}}}{{{f{BAd}}{f{Cnc}}}bAGb}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}}Fh}{{{f{AOh}}{f{{An{B`}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{{An{B`}}}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{{An{B`}}}}}{{f{CnAOh}}}}{{{f{AOh}}{BB`{Fh}}}f}{{{f{AOh}}{Lh{Fh}}}f}{{{f{AOh}}{f{Aj}}}f}{{{f{AOh}}BBb}f}{{{f{AOh}}{BBd{Fh}}}f}{{{f{AOh}}{BBf{Fh}}}f}{{{f{AOh}}Fh}f}{{{f{AOh}}{BBh{Fh}}}f}{{}Fh}0000{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}{ce{}{}}000000{{AOh{f{Aj}}}AJn}{{{f{AOh}}}{{Bd{{l{Af}}Bb}}}}{{{f{AOh}}}d}1{{{f{AOh}}}{{Ff{B`}}}}{{{f{AOh}}d}BBj}{{{f{AOh}}}BBl}{AOhBBn}{{{f{AOh}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}ce}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}BCb}{{Bd{AOhBb}}}}3{{{f{AOh}}}Fh}{{{Fn{c}}}{{Bd{AOhBb}}}BA`}{{{Fn{B`}}}AOh}{{{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnBBj}}}Cb}{{{f{CnBBl}}}Cb}{{{f{AOh}}}AOh}{{AOhe}{{Bd{cBb}}}{}{{Dh{AOh}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}e}{{Bd{cBb}}}{}{{Dh{{f{CnAOh}}}{{Df{{Bd{cBb}}}}}}}}{{AOhgc}{{Bd{eBb}}}{}{}{{Dh{AOhc}{{Df{{Bd{eBb}}}}}}}}{{{f{CnAOh}}}{{Cb{B`}}}}{{{f{AOh}}{f{AOh}}}d}{{{f{CnAOh}}{f{Aj}}{f{Aj}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{Aj}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}18{{{f{AOh}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}`{{{f{AOh}}{f{B`}}dd{Cb{Il}}}{{Bd{AOhBb}}}}0{{{f{AOh}}Fhdd{Cb{Il}}}{{Bd{AOhBb}}}}{{{f{AOh}}}B@n}{{{f{AOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}Fh}{{Cb{{f{B`}}}}}}{{{f{AOh}}c}{{Bd{AOhBb}}}{{BCf{Fh}}}}2{{{f{AOh}}c}{{Bd{{Fn{B`}}Bb}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}e{f{{ADn{B@n}}}}}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}e{f{B@n}}}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnAOh}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hf{Aj}}}}{{{f{AOh}}}{{Gf{FhFh}}}}{{{f{AOh}}Gb}AOh}{{{f{AOh}}}d}{{{f{CnAOh}}}b}{{{f{BBj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BBl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AOh}}GbFh}AOh}0{{{f{AOh}}cF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}cF`}{{Bd{{f{CnAOh}}Bb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}}{{`{{Cj{}{{Cd{AOh}}}}}}}}{{AOhFhd}{{Fn{AOh}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}{f{{l{El}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{El}}}}}AOh}{{{f{AOh}}{f{{l{El}}}}d}AOh}{{{f{AOh}}}{{f{AOh}}}}{{{f{AOh}}BCh}{{Bd{{Of{O`{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{AOh}}FhcF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}{Cb{{f{Aj}}}}{Cb{{Oj{Eh{Fn{Eh}}}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{Aj}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BCj{{Bd{AOhBb}}}}{{{Gf{{BCl{{Ch{Cf}}}}{f{{An{AMn}}}}}}}{{Bd{AOhBb}}}}{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{Bd{{f{BAj}}Bb}}}}}}}}{{{f{AOh}}{f{Aj}}}{{Bd{FhBb}}}}44444{{{f{c}}}Ol{}}0000{{{f{AOh}}{Cb{{f{{An{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}d{Cb{{f{{An{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}1{{{f{AOh}}c}{{Bd{AOhBb}}}{{BC`{Eh}}}}{{{f{AOh}}c{f{Aj}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{f{AOh}}{f{AOh}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{{f{CnAOh}}Bb}}}}{ce{}{}}0000{{{f{AOh}}}Fh}{{{f{CnAOh}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}c{f{B@n}}}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}B`}{{f{CnAOh}}}}{{{f{AOh}}{f{Aj}}{Cb{Lf}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{Aj}}{Cb{Lf}}}{{f{CnAOh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{BCb}}}BCb}{{{f{c}}{f{Cne}}}b{}{}}{{}BCb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{BCb}}{f{BCb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BCb}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BAl}}}{{Bd{AOhBb}}}}`{{{f{BCn}}}{{f{{An{{BD`{Lf}}}}}}}}{{{f{BAl}}c}{{Bd{AOhBb}}}{{E`{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{{f{Bj}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000{{{f{BCn}}}BCn}{{{f{Bj}}}Bj}{{{f{BAl}}}BAl}{{{f{BDb}}}BDb}{{{f{c}}{f{Cne}}}b{}{}}000:{{}BCn}{{}Bj}{Fh{{f{c}}}{}}00{{{f{BDd}}}f}11111{Fh{{f{Cnc}}}{}}0000000`{{BDfc}{}BDh}{Fhb}000{{{f{CnBCn}}}b}1111{{{f{BCn}}{f{BCn}}}d}{{{f{Bj}}{f{Bj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDj}}}Lf}{{{f{BCn}}}{{f{{An{Lf}}}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBCn}}}{{f{Cn{Fn{Lf}}}}}}{{{f{BCn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Bj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Aj}}BDb}Eh}{cc{}}000{{{Fn{{Gf{Lf{BD`{Lf}}}}}}}BCn}1{{{Fn{{Fn{{Gf{Lf{BD`{Lf}}}}}}}}}BCn}{{{Fn{{Gf{{Fn{Lf}}{Fn{{BD`{Lf}}}}}}}}}BCn}{BCnBj}44{BDlBDb}5{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cBCn{{Gh{}{{Cd{{Gf{Lf{BD`{Lf}}}}}}}}}}{cBCn{{I`{}{{Cd{{Gf{Lf{BD`{Lf}}}}}}}}}}{{{f{Bj}}Fh}BDj}{{{f{BAl}}}{{f{Bj}}}}{{{f{CnBAl}}}{{f{CnBj}}}}{{{f{Bj}}}{{l{El}}}}{{{f{BDn}}dd}{{Bd{BjBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBj}}}{{f{CnBCn}}}}{{}Fh}0000000{ce{}{}}0000000{BjBCn}1{{{f{BCn}}}}{BCn}301{{{f{BDj}}}d}{{{f{Bj}}}d}{{{f{BCn}}}d}{{{f{BCn}}}{{BEb{{BE`{{Ff{Lf}}}}{Ff{{BD`{Lf}}}}}}}}{{{f{Bj}}}BEd}{{{f{BAl}}}{{Fn{B`}}}}{{{f{BAl}}{Cb{{Gf{GbFh}}}}}{{Fn{B`}}}}={{{f{BDj}}}Fh}{{{f{Bj}}}Fh}?????{{{Fn{Lf}}{Fn{{BD`{Lf}}}}d}BCn}{{{f{AOh}}{Fn{B`}}Bj{Cb{{Fn{Eh}}}}}BAl}{{{f{CnBEd}}}Cb}{{{f{CnBEd}}Fh}Cb}{{{f{BAl}}c}{{Bd{AOhBb}}}{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{{f{c}}}{}{}}{{{f{Bj}}}BDf}{{{f{BAl}}LbMn}{{Bd{AOhBb}}}}{{BAle}BAl{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{Bj}}GbFh}BDd}{{{f{CnBCn}}}b}{{{f{CnBj}}}b}{{{f{BAl}}Al}{{Bd{AOhBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{Bj{{Fn{Lf}}}}0{BAlBj}{{{f{CnBAl}}}Bj}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}Ol{}}0000000{BjBj}{{{f{Bj}}}{{f{BCn}}}}{{{f{Bj}}}{{f{{Fn{{Ob{Lf}}}}}}}};{ce{}{}}0000000`````{{{f{BCn}}c}B`{{Dh{{Gf{Lf{f{{BD`{Lf}}}}}}}{{Df{Cb}}}}HjHl}}{{{f{BCn}}c}B`{{Dh{{Gf{Lf{f{{BD`{Lf}}}}}}}{{Df{}}}}HjHl}}{{{f{{An{{Ob{Lf}}}}}}c}B`{{Dh{{Ob{Lf}}}{{Df{Cb}}}}HjHl}}{{{f{{An{{Ob{Lf}}}}}}c}B`{{Dh{{Ob{Lf}}}{{Df{}}}}HjHl}}{{{f{{An{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LfLf}}}}}}Ib}}{{{f{{An{c}}}}{f{Hd}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LfLf}}}}}}Ib}}{{{f{{l{c}}}}LfLf}{{l{c}}}Dd}{{{f{{Fn{{Ob{Lf}}}}}}{f{{An{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bj}}}B`}{{BElBEl}BEl}0`{{{f{BEn}}{f{AOh}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{Aj}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{CnBF`}}Id}{{Cb{b}}}}{{{f{CnBFb}}{f{Id}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BF`}}}BF`}{{{f{BFb}}}BFb}{{{f{BAj}}}BAj}{{{f{c}}{f{Cne}}}b{}{}}00{{{f{{An{c}}}}}Ef{{Hh{Ef}}}}{{}BAj}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{Fhb}00{{{f{BAj}}{f{BAj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAj}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{Gf{{f{Ef}}Fh}}}BF`}{{{Gf{{f{Ef}}Fh}}}BFb}22{{eFh}B@n{{AMl{Ef}}}{{Cj{}{{Cd{{Fn{{Gf{Ehc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BF`B`}{BFbB`}{{{f{Ef}}Fh}BF`}{{{f{Ef}}Fh}BFb}{{{Fn{Id}}}BAj}{{{f{CnBF`}}Fh}B`}{{{f{CnBFb}}Fh}B`}{{{f{{An{BAj}}}}{Cb{Fh}}}{{Bd{B@nBb}}}}0{{{f{{An{BAj}}}}{Cb{Fh}}}{{Bd{{Fn{Ef}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00<<<{{{f{{An{AOh}}}}}{{Bd{AOhBb}}}}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOh{f{{An{{f{Aj}}}}}}{f{{An{{f{Aj}}}}}}{Cb{{f{Aj}}}}{f{AOh}}}AOh}{{BBnc}{{Bd{AOhBb}}}{{Dh{BFd{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Df{{Bd{bBb}}}}}}}}{{{f{BFl}}{f{{An{Lf}}}}dd}AOh}{{{f{BFl}}{Gf{{Oj{{Fn{Lf}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}{f{AOh}}BFn}{{Bd{AOhBb}}}}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFn}{{Bd{AOhBb}}}}{{{f{Aj}}{f{Aj}}}Eh}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFnd{Cb{{f{{An{{f{Aj}}}}}}}}}{{Bd{AOhBb}}}}{{{f{BG`}}{f{{An{Nh}}}}Ih}AOh}0{{{f{BG`}}{f{{An{Nh}}}}}AOh}0{{{f{BGb}}{Cb{{Fn{{f{Aj}}}}}}{Cb{{f{Aj}}}}d}{{Bd{AOhBb}}}}{{BBnd}BBn}{{{BGd{c}}{Cb{{ADn{BGf}}}}}{{BGd{c}}}BGh}{{{f{B`}}}{{Bd{B`Bb}}}}{BGjBGj}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BH`c}BBn{{Hf{{An{BGj}}}}}}5`{{BGj{f{Aj}}}BGj}{{}BGj}{{BGjd}BGj}{c{{Bd{BGjBb}}}{{Hf{{An{BGj}}}}}}{{{f{{ADn{ce}}}}}{{f{e}}}{}BHb}{{BHdd}BHd}`{{{f{BHf}}}d}{{{f{BHh}}}d}11`{{BGjc}BGj{{AMl{BGj}}}}{{{ADn{BHf}}BHj}{{Bd{BBnBb}}}}76{{BGjcd}BGj{{AMl{BGj}}}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAd}}c}b{}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{BH`c{ADn{B@n}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{BGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGjBGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{{f{BGj}}{f{Cnc}}f}{{Bd{BI`Bb}}}{{E`{{f{BGj}}f}{{Df{{Bd{BI`Bb}}}}}}}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{BGjc{f{{An{BGj}}}}{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGjBIb{f{{An{BGj}}}}dd}BGj}{{ce{BHn{{ADn{BHl}}}}d}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}{{Hf{{An{BGj}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{An{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{BGjBGjGbEf}BGj}{BCj{{ADn{Cf}}}}{{{f{BId}}}{{Cb{Fh}}}}{BIfBGj}{BIhBGj}{BGjBGj}3210{{{f{AEl}}Ej}{{l{El}}}}{{BGjEj}BGj}{{{f{BIj}}Ej}{{l{El}}}}{{cF`}BGj{{Hf{{An{BGj}}}}}}{{{f{AEl}}{f{{An{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}6{{{f{BIj}}}{{Bd{{l{El}}Bb}}}}{cBGj{{AMl{BGj}}}}{{{f{BIl}}}{{f{{An{N`}}}}}}``{BGjBIf}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0`{{{f{Cn{BIn{c}}}}}{{Bd{BAhBb}}}BJ`}{{{f{BHf}}}{{f{ADf}}}}{{{f{BIj}}}{{f{ADf}}}}{{{f{BJb}}}{{f{ADf}}}}{{{f{BHh}}}{{f{ADf}}}}{{{f{BCj}}}{{f{ADf}}}}{{{f{CnBIj}}}{{f{CnADf}}}}{{{f{CnBCj}}}{{f{CnADf}}}}{{{f{BJd}}}{{f{{l{Ah}}}}}}{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{ADn{c}}}}}BJh{BJjNf}}{{{f{BJl}}}{{f{{l{j}}}}}}{{{f{{ADn{ce}}}}}{}NfBHb}{{{f{{ADn{c}}}}}MbBJn}{{{f{BK`}}}{{f{BGj}}}}{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}{{{f{AKh}}}{{f{Ef}}}}{{{f{BKb}}}{{f{B`}}}}{{{f{CnBIj}}}{{Bd{FhBb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BKd}}}{{f{{l{A`}}}}}}{{{Fn{BGj}}}BGj}{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{ADn{{BKf{c}}e}}}{{ADn{ce}}}{}BHb}{{{ADn{{An{{BKf{c}}}}e}}}{{ADn{{An{c}}e}}}{}BHb}{{{f{Aj}}}BGj}{{BGj{Cb{Lf}}}BGj}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{{{BGd{{Ch{BGh}}}}{Cb{{ADn{B@n}}}}}{{Bd{BKjBb}}}}{{{BKl{c}}{f{B@n}}}{{Bd{{BKn{c}}Bb}}}BL`}{{{BLb{c}}{f{B@n}}}{{Bd{{BLd{c}}Bb}}}BL`}{{{BLf{c}}Fh}{{Bd{BLhBb}}}BGh}{{{BLj{c}}{f{B@n}}}{{Bd{{BLl{c}}Bb}}}BL`}{{{f{Cn{BGd{c}}}}}{{Bd{BLnBb}}}BGh}`{BGjBM`}{{BGjBMbBGj}BGj}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}11111111111111{{{f{Cnc}}}{{f{Cne}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BBnLfcF`}BBn{{Hf{{An{BGj}}}}}}{BCj{{Ch{Cf}}}}`{BBnBBn}```{{{f{BMd}}{f{Aj}}}{{Bd{EhBb}}}}{{BMf{Fn{BGj}}}{{Bd{BGjBb}}}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{BJb}}{f{Cn{An{B`}}}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{BMh}}B`B`}{{Bd{B`Bb}}}}{{BMf{Fn{BGj}}}BGj}{{{f{BMj}}}b}{{BGjEf}BGj}{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{Ef}}}{{Bd{B`Bb}}}}{{BBn{BMl{{f{Aj}}EfNl}}d}BBn}4{{BBnEfd}BBn}4`{BGjBMn}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{BGjBGj}{{{f{BN`}}}{{Bd{B`Bb}}}}1`{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{BAh}}{f{BAh}}{Cb{{f{{An{Eh}}}}}}{f{Aj}}}{{Bd{bBb}}}}{{{f{B@n}}{f{B@n}}{Cb{{f{{An{Eh}}}}}}{f{Aj}}}{{Bd{bBb}}}}0``{{{f{BNd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNd}}c}{{Bd{B`Bb}}}Ad}{{{f{BIj}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}``{{{f{BIj}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBIj}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGj}BGj}10{{{f{BNf}}}BNf}{{{f{BAn}}}BAn}{{{f{BMj}}}BMj}{{{f{BBn}}}BBn}{{{f{BCd}}}BCd}{{{f{BH`}}}BH`}{{{f{BNh}}}BNh}{{{f{BHj}}}BHj}{{{f{AOb}}}AOb}{{{f{BNj}}}BNj}{{{f{BNl}}}BNl}{{{f{BNn}}}BNn}{{{f{BHh}}}BHh}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{{f{BOf}}}BOf}{{{f{On}}}On}{{{f{Nh}}}Nh}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{BFn}}}BFn}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{BK`}}}BK`}{{{f{BGj}}}BGj}{{{f{CCj}}}CCj}{{{f{BMb}}}BMb}{{{f{{BHn{c}}}}}{{BHn{c}}}ABf}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{BIb}}}BIb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{BMf}}}BMf}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{{ADn{ce}}}}}{{ADn{ce}}}Nf{BHbABf}}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{Nb}}}Nb}{{{f{BCh}}}BCh}{{{f{B@n}}}B@n}{{{f{BCj}}}BCj}{{{f{AMn}}}AMn}{{{f{BAh}}}BAh}{{{f{Mn}}}Mn}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{BIj}}}{{ADn{BIj}}}}{{{f{c}}{f{Cne}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFb}}}{{Cb{{f{CFd}}}}}}````{{{f{AOb}}{f{AOb}}}AO`}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}AO`{CFfNf}BHb}{{{f{{An{BGj}}}}}BGj}{{BHdCAd}BHd}{{{f{CAd}}{f{CAh}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Aj}}}BGj}{BBn{{Bd{AOhBb}}}}{c{{Bd{{Fn{AOh}}Bb}}}{{I`{}{{Cd{BBn}}}}}}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{ABl{f{Aj}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{Aj}}Ef}{{l{c}}}Dd}0{BBn{{Bd{BMjBb}}}}{cBGj{{BC`{Eh}}}}{{{f{CEj}}Fh}CFh}``{{{f{BGb}}{Fn{{f{Aj}}}}{Cb{{f{Aj}}}}d}{{Bd{AOhBb}}}}`{{{f{c}}{f{e}}}AO`{}{}}0``{{{f{CC`}}}{{Bd{{ADn{B@n}}Bb}}}}{{cCEh}{{Bd{BBnBb}}}{{Hf{{An{BBn}}}}}}{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}{{ed}{{Bd{BGjBb}}}{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{{f{CFb}}{Fn{BBn}}}{{Bd{BBnBb}}}}{{{f{BNj}}{Fn{BBn}}}{{Bd{BBnBb}}}}44{e{{Bd{BGjBb}}}{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{c{f{Aj}}d}BGj{{Hf{{An{BGj}}}}}}{{BIfc}BGj{{AMl{BGj}}}}{{{f{CFj}}{f{{An{Al}}}}}{{l{Af}}}}{{{f{BKh}}{f{Aj}}d}{{Bd{{l{Af}}Bb}}}}{{BIhc}BGj{{AMl{BGj}}}}{{{f{B@n}}{f{Aj}}}d}{{{f{CFj}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{Af}}Bb}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{Af}}Bb}}}}{{{f{Cf}}{f{ADd}}}{{Ch{Cf}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BBnBBn}{BGjBGj}{{{f{BKh}}{f{Aj}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CFl}}Al{Cb{Al}}{Cb{{f{BOn}}}}Ald}{{Bd{FhBb}}}}{{{ALd{Aj}}}Ef}{{{f{BFl}}{f{{An{Nh}}}}d}AOh}{{{f{CFn}}c}{{Ch{CG`}}}BL`}{{{f{CGb}}c}{{Ch{CG`}}}BL`}`{{BBnBBn}BBn}{{{f{CGd}}{f{AOh}}{Cb{{f{Aj}}}}{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{{f{CGd}}{f{AOh}}{Cb{{Gf{GbFh}}}}d}{{Bd{{Gf{AOhAOh}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGjd}BGj}{{BGjced}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hf{{An{BGj}}}}}}212121{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hf{{An{BGj}}}}}}32{{CGfBGjFhd}BGj}`{{{f{BCj}}}{{f{ADd}}}}{{{f{AMn}}}{{f{ADd}}}}```{{BGjBGjAObBNn{Cb{Jf}}{Cb{Eh}}}BGj}`{CDdBGj}`11{AJhGb}00{{{f{CGh}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CGl}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}```{{}b}{cbBHb}{{}CFn}{{}CGb}{{}BAn}{{}BBn}{{}BCd}{{}BHj}{{}BNl}{{}BO`}{{}BOd}{{}BOh}{{}BOj}{{}BOl}{{}C@b}{{}C@d}{{}C@f}{{}C@j}{{}C@l}{{}C@n}{{}BFn}{{}CAb}{{}CAd}{{}CAf}{{}CAj}{{}CAl}{{}CB`}{{}CBd}{{}CBj}{{}CBn}{{}CC`}{{}BGj}{{}{{BHn{{ADn{BMh}}}}}}{{}{{BHn{{ADn{CGn}}}}}}{{}{{BHn{{ADn{BHl}}}}}}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CDn}{{}CE`}{{}CEb}{{}CEf}{{}{{ADn{c}}}CH`}{{}CEh}{{}Nb}{{}BCh}{{}B@n}{{}AMn}{{}BAh}{{}Mn}`{{}{{Oj{{Fn{On}}{Fn{Nh}}}}}}{Fh{{f{c}}}{}}0{{{f{{AJd{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BHn{c}}}}}f{}}222222222222222222{{{f{{ADn{ce}}}}}{{f{c}}}NfBHb}33333333333333{Fh{{f{Cnc}}}{}}0{{{f{Cn{AJd{c}}}}}{{f{Cn}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CC`}}}{{Bd{EhBb}}}}{{{f{BBn}}}{{Bd{EhBb}}}}0001{{{f{{ADn{c}}}}}{{f{Aj}}}{AIlNf}}{{{f{AMn}}{f{CHb}}}{{Bd{CHdBb}}}}```{{{f{B`}}GbCHf}{{Bd{B`Bb}}}}{{BIhGbCHf}BGj}{{BGjGbCHf}BGj}{{{f{CC`}}}{{Bd{{`{B@l}}Bb}}}}`{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{ADn{ADfc}}}{{Bd{{ADn{ec}}{ADn{ADfc}}}}}BHb{ADfHjHl}}{{{ADn{ADfc}}}{{ADn{ec}}}BHb{ADfHjHl}}{{{f{{ADn{ce}}}}}{{CHh{ce}}}Nf{ABfBHb}}{Fhb}000000000000000000000{{{f{CnBMj}}}b}11{{BBne}BBn{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cn{ADn{ce}}}}}bNfBHb}33333333333333{BGjBGj}{{BBn{Cb{{Fn{BGj}}}}}BBn}1{{{f{BIj}}}B`}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{BGjCHj}{{{f{ALj}}}{{f{Ef}}}}{{{f{BIj}}}{{f{Ef}}}}`{{{f{Ef}}}BGj}{cBGj{{Hf{{An{Ef}}}}}}`{CDfBGj}``{{{f{c}}}e{}{{CHn{CHl}}}}0`{{{f{CFj}}{f{{An{Al}}}}}{{l{Af}}}}{{{f{CFj}}{f{{l{Ah}}}}}{{l{Af}}}}{{AOb{f{Ef}}{f{Aj}}}{{Bd{bBb}}}}{{AOb{Cb{{f{Aj}}}}{f{Aj}}}{{Bd{bBb}}}}`{{{f{BNf}}{f{BNf}}}d}{{{f{BAn}}{f{BAn}}}d}{{{f{BCd}}{f{BCd}}}d}{{{f{AOb}}{f{AOb}}}d}{{{f{BNn}}{f{BNn}}}d}{{{f{BOb}}{f{BOb}}}d}{{{f{BOd}}{f{BOd}}}d}{{{f{On}}{f{On}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{BK`}}{f{BK`}}}d}{{{f{BGj}}{f{BGj}}}d}{{BGjc}BGj{{AMl{BGj}}}}{{{f{CCj}}{f{CCj}}}d}{{{f{BMb}}{f{BMb}}}d}{{{f{{BHn{{ADn{c}}}}}}{f{{BHn{{ADn{c}}}}}}}dNf}{{{f{{BHn{B`}}}}{f{{BHn{B`}}}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{BIb}}{f{BIb}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CI`Nf}BHb}{{{f{{ADn{CIb}}}}{f{CIb}}}d}{{{f{{ADn{Cf}}}}{f{Cf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BCh}}{f{BCh}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{BCj}}{f{BCj}}}d}{{{f{BCj}}{f{{f{Cf}}}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{BAh}}{f{BAh}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{CF`}}{f{CF`}}}d}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIdBGjd}BGj}``{{BGjc}BGj{{BC`{Eh}}}}{{BGjc}BGj{{Hf{{An{Ef}}}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@j}}}{}CIf{}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{BBne}BBn{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{{f{AFf}}}{{Bd{B`Bb}}}}{BGjBGj}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{BGjBGjBGj}BGj}{{{f{CFn}}}CFl}{{{f{CGb}}}CFl}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{Nh{{Gf{LfLf}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{Aj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AAb}}}d}``{{{f{BMj}}}{{Cb{{Bd{AOhBb}}}}}}{{BBnFh}{{Bd{AOhBb}}}}{{{f{BMj}}}{{Bd{AOhBb}}}}{{{f{AAb}}}{{f{N`}}}}{{{f{BIj}}}{{Dl{N`}}}}{{CIhGb}BGj}{{CIh{f{Aj}}}BGj}{{CIh{f{{An{c}}}}}BGj{{Hf{Aj}}}}{{{f{BCj}}}{{f{{An{AMn}}}}}}```{{BBnc}BBn{{AMl{BGj}}}}{{BGjc}BGj{{AMl{BGj}}}}`10{{BGjAFb}BGj}{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{BIj}}{f{{l{Af}}}}}{{Bd{B`Bb}}}}{{BBnBGj}BBn}5{{BAhc}BAh{{Dh{Fh{f{AMn}}}{{Df{d}}}}}}{{{f{BKh}}{f{Aj}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{El}}Bb}}}}{CIj{{Bd{AOhBb}}}}{{{f{CnCG`}}{f{CnAOh}}}{{Bd{bBb}}}}{AAd{{l{c}}}Dd}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BHdBBn}{{{BGd{c}}}{{Bd{AOhBb}}}BGh}{{{f{Cn{BKl{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{CIl{c}}}{{Bd{AOhBb}}}BGh}{{{BIn{c}}}{{Bd{AOhBb}}}BJ`}{{{f{Cn{CIn{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{CFb{{Bd{BBnBb}}}}{{{f{Cn{BLb{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{f{Cn{CJ`{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BL`}{{{CJb{c}}}{{Bd{AOhBb}}}BGh}{BNj{{Bd{BBnBb}}}}{{{CJd{c}}}{{Bd{AOhBb}}}BGh}{{{BLf{c}}}{{Bd{AOhBb}}}BGh}{{{BLj{c}}{f{CnAOh}}}{{Bd{IlBb}}}BL`}{{{f{CnAAb}}}{{l{j}}}}84{BHh{{Bd{BBnBb}}}}{{{CIl{c}}{Cb{{ADn{BGf}}}}d}{{Bd{AOhBb}}}BGh}{{{f{BLh}}Fh}d}{{}BGj}{BBnBBn}{BIhBGj}{BGjBGj}`0``{{}{{BHn{{ADn{BHl}}}}}}{{{f{BN`}}}{{Bd{B`Bb}}}}2{{BGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cn{ADn{CJf}}}}}{{Bd{bB@j}}}}{{{f{BJb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BNn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{On}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@d}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BHf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CJh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BFn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BGj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CCj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{{BHn{c}}}}{f{CnGj}}}{{Bd{bGl}}}{}}{{{f{CCl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CCn}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CD`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BIb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CE`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{B@lNf}BHb}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhNf}BHb}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}NfBHb}{{{f{CEh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CHd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Mn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CF`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Aj}}BDb}Eh}```{{BGjce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hf{{An{BGj}}}}}}{{BHdd}BHd}``{{{f{Aj}}c}{{Bd{BGjBb}}}{{Hf{{An{BGj}}}}}}{{BGj{Cb{Lf}}}BGj}{cc{}}0000000000000000000000{BH`BBn}1{CC`BBn}222222222222222222{LfOn}3333333{{{f{Aj}}}BOn}444444444444{CAhBFn}55555555555555555555555{LlBGj}{IlBGj}{MfBGj}{M`BGj}{dBGj}{GbBGj}{BK`BGj}{LbBGj}{{{f{Aj}}}BGj}{MbBGj}{AlBGj}{IjBGj}{LfBGj}{cc{}}0{CDb{{BHn{{ADn{BJb}}}}}}{CCn{{BHn{{ADn{BJb}}}}}}{CJj{{BHn{{ADn{BJb}}}}}}{CCl{{BHn{{ADn{BJb}}}}}}{CJl{{BHn{{ADn{BJb}}}}}}{CJn{{BHn{{ADn{BJb}}}}}}{CK`{{BHn{{ADn{BJb}}}}}}{BIb{{BHn{{ADn{BJb}}}}}}{CKb{{BHn{{ADn{BJb}}}}}}9{CKd{{BHn{{ADn{BJb}}}}}}::::{CDbBIb}{CClBIb}<{CJlBIb}{CCnBIb}>>>>>>{CE`CDn}??????{CKf{{ADn{CKh}}}}{CKjc{}}{{{Ch{ce}}}{{ADn{ce}}}NfBHb}{{{f{Aj}}}{{ADn{Aj}}}}{Eh{{ADn{Aj}}}}{{{f{CKl}}}{{ADn{CKl}}}}{CFl{{ADn{CKn}}}}{{{Ob{c}}}{{ADn{{An{c}}}}}{}}{CL`{{ADn{CKl}}}}{{{f{CKn}}}{{ADn{CKn}}}}{{{f{{An{c}}}}}{{ADn{{An{c}}}}}ABf}{{{Fn{ce}}}{{ADn{{An{c}}e}}}{}{BHbABf}}{{{f{CKh}}}{{ADn{CKh}}}}{c{{ADn{c}}}{}}{{{ADn{Aj}}}{{ADn{{An{Al}}}}}}{{{Dl{c}}}{{ADn{c}}}{CLbNf}}{cc{}}0{CLdCHd}1111{BAhB@n}{{{ADn{BAh}}}B@n}{{{f{BAh}}}B@n}{{{f{{An{B`}}}}}B@n}{{{f{{ADn{BAh}}}}}B@n}{{{f{BAj}}}B@n}7{CLfBCj}{CLhBCj}99{{{Fn{AMn}}}BAh}:::::{{c{Cb{Hd}}}CLj{}}{{{CLl{Gb}}{CLl{Al}}{Cb{Hd}}}CLn}{{{CLl{Gb}}{CLl{Al}}{Cb{Hd}}}CM`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}00{c{{AJd{{l{Af}}}}}{{Gh{}{{Cd{d}}}}}}{c{{AJd{{l{e}}}}}{{Gh{}{{Cd{}}}}}n}{e{{ADn{{An{c}}}}}{}{{Gh{}{{Cd{c}}}}}}{eB@n{{AMl{N`}}}{{Gh{}{{Cd{c}}}}}}{{gFh}{{CMb{Gb}}}Hf{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}0{e{{CMb{Gb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{Aj}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{gADd}{{CMb{Gb}}}BEh{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}673{{{f{Aj}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{c{{AJd{{l{e}}}}}{{I`{}{{Cd{}}}}}n}{e{{ADn{{An{c}}}}}Hj{{I`{}{{Cd{c}}}}}}`{c{{Bd{{CJd{CJf}}Bb}}}{{AMl{CFl}}}}{{}{{ADn{c}}}Nf}{c{{ADn{ec}}}BHbNf}{{{f{Aj}}{f{{An{c}}}}}ABj{}}{{{f{Aj}}{f{{An{{Cb{c}}}}}}}ABj{}}{{{f{Aj}}}{{Bd{CMd}}}}{c{{AJd{{l{e}}}}}{{Ib{}{{Cd{}}}}}n}{c{{AJd{{l{Af}}}}}{{Ib{}{{Cd{d}}}}}}{Ef{{BHn{{ADn{BHl}}}}}}{{{f{Aj}}c}CMf{}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}`{{{f{Aj}}cFh}AFl{}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMh}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{Aj}}Fh}AFn}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}``{{BGjc{BHn{{ADn{BHl}}}}CMj}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}`{{BGjc}BGj{{AMl{BGj}}}}{{BGjFhFh}BGj}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMlNf}BHb}{{{f{BIj}}Fh}{{Bd{IdBb}}}}{{BIfBGjd}BGj}{{BIhBGjd}BGj}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}6{{{f{B@n}}{f{Aj}}}{{Cb{{f{Ef}}}}}}{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{B@n}}Fh}{{Cb{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{f{Cn{ANj{ANh}}}}{f{CnEf}}}}}}}}{BMnBGj}{{{f{BBn}}}CEb}{{{f{CEd}}}Ef}{{}Ef}{{{f{BOf}}GbBNn{Cb{{f{AJj}}}}}{{Bd{BNhBb}}}}00{{{f{CGn}}{f{B@n}}CMn{f{N`}}{f{N`}}}{{Cb{N`}}}}{{{f{BHl}}{f{B@n}}CMn{f{{An{N`}}}}}N`}{{{f{B@n}}{f{Aj}}}{{Cb{N`}}}}{{{f{ADd}}}{{f{{An{AMn}}}}}}{{{f{BIl}}}Fh}{{{f{B@n}}{f{Aj}}}{{Cb{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{Cn{BLf{c}}}}}{{Bd{{f{{ADn{CEj}}}}Bb}}}BGh}{{{f{Cn{ADn{ce}}}}}{{Cb{{f{Cnc}}}}}NfBHb}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}NfBHb}{{{f{CN`}}}{{Fn{{f{Aj}}}}}}{{{f{B@n}}}{{Fn{{f{Aj}}}}}}{{{f{BAh}}}{{Fn{{f{Aj}}}}}}{{{f{BIj}}Fh}{{Cb{{f{If}}}}}}{{{f{BIj}}FhFh}{{Cb{{f{If}}}}}}{{{f{BJb}}}{{Cb{{BHn{{ADn{BHl}}}}}}}}{{{f{BOf}}BNhBNnJf{Cb{{f{AJj}}}}BOd}{{Bd{CNbBb}}}}{{{f{BOh}}}{{ADn{BOj}}}}{{{f{Cnc}}}{{Bd{CNdBb}}}{BJ`BGhNf}}{{{f{CJh}}{f{B@n}}}{{Bd{{ADn{B@n}}Bb}}}}{{cFh}{{Fn{{Gf{FhFh}}}}}{{Cj{}{{Cd{Fh}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BIj}}Fh}Id}{{{f{CFb}}}d}{{{f{BNj}}}d}`{{BBne}BH`{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{{f{CNf}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}{{BBnBGjcBAn}BH`{{Hf{{An{BGj}}}}}}2{{AObAOb{f{{An{Gb}}}}BNnJf{Cb{AJj}}}{{Bd{{Fn{{Ob{Lf}}}}Bb}}}}{{BOf{f{{An{Gb}}}}BNnJf{f{{Cb{Eh}}}}ddBOd}{{Gf{{Fn{{Ob{Lf}}}}{Fn{Gb}}{Fn{Gb}}}}}}{{{f{BDn}}dd}{{Bd{BjBb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMlNf}BHb}21`{{{f{BIj}}}d}{{{f{CNh}}}d}{{{f{BAn}}{f{Cnc}}}bAGb}{{{f{BCd}}{f{Cnc}}}bAGb}{{{f{AOb}}{f{Cnc}}}bAGb}{{{f{BNn}}{f{Cnc}}}bAGb}{{{f{BOb}}{f{Cnc}}}bAGb}{{{f{BOd}}{f{Cnc}}}bAGb}{{{f{BOh}}{f{Cnc}}}bAGb}{{{f{BOj}}{f{Cnc}}}bAGb}{{{f{BOl}}{f{Cnc}}}bAGb}{{{f{BOn}}{f{Cnc}}}bAGb}{{{f{C@`}}{f{Cnc}}}bAGb}{{{f{C@b}}{f{Cnc}}}bAGb}{{{f{C@d}}{f{Cnc}}}bAGb}{{{f{C@f}}{f{Cnc}}}bAGb}{{{f{C@h}}{f{Cnc}}}bAGb}{{{f{C@j}}{f{Cnc}}}bAGb}{{{f{C@l}}{f{Cnc}}}bAGb}{{{f{C@n}}{f{Cnc}}}bAGb}{{{f{CA`}}{f{Cnc}}}bAGb}{{{f{BFn}}{f{Cnc}}}bAGb}{{{f{CAb}}{f{Cnc}}}bAGb}{{{f{CAd}}{f{Cnc}}}bAGb}{{{f{CAf}}{f{Cnc}}}bAGb}{{{f{CAh}}{f{Cnc}}}bAGb}{{{f{CAj}}{f{Cnc}}}bAGb}{{{f{CAl}}{f{Cnc}}}bAGb}{{{f{CAn}}{f{Cnc}}}bAGb}{{{f{CB`}}{f{Cnc}}}bAGb}{{{f{CBb}}{f{Cnc}}}bAGb}{{{f{CBd}}{f{Cnc}}}bAGb}{{{f{CBf}}{f{Cnc}}}bAGb}{{{f{CBh}}{f{Cnc}}}bAGb}{{{f{CBj}}{f{Cnc}}}bAGb}{{{f{CBl}}{f{Cnc}}}bAGb}{{{f{CBn}}{f{Cnc}}}bAGb}{{{f{BK`}}{f{Cnc}}}bAGb}{{{f{BGj}}{f{Cnc}}}bAGb}{{{f{CCj}}{f{Cnc}}}bAGb}{{{f{BMb}}{f{Cnc}}}bAGb}{{{f{CCl}}{f{Cnc}}}bAGb}{{{f{CCn}}{f{Cnc}}}bAGb}{{{f{CD`}}{f{Cnc}}}bAGb}{{{f{CDb}}{f{Cnc}}}bAGb}{{{f{BIb}}{f{Cnc}}}bAGb}{{{f{CDh}}{f{Cnc}}}bAGb}{{{f{CDj}}{f{Cnc}}}bAGb}{{{f{CDl}}{f{Cnc}}}bAGb}{{{f{CDn}}{f{Cnc}}}bAGb}{{{f{CE`}}{f{Cnc}}}bAGb}{{{f{CEd}}{f{Cnc}}}bAGb}{{{f{CEf}}{f{Cnc}}}bAGb}{{{f{{ADn{ce}}}}{f{Cng}}}b{CNjNf}BHbAGb}{{{f{CEh}}{f{Cnc}}}bAGb}{{{f{BCh}}{f{Cnc}}}bAGb}{{{f{B@n}}{f{Cnc}}}bAGb}{{{f{AMn}}{f{Cnc}}}bAGb}{{{f{Mn}}{f{Cnc}}}bAGb}{{{f{CF`}}{f{Cnc}}}bAGb}{{{f{CNl}}{f{B`}}CAld}{{Bd{{Gf{{Gf{{Fn{Lf}}{Fn{Lf}}}}d}}Bb}}}}{{{f{CNl}}{f{B`}}CAld}{{Bd{{Gf{{AJ`{Lf}}{AJ`{Lf}}}}Bb}}}}{{BH`{Cb{Fh}}}BBn}{{BIhBGj}BGj}{{BGj{Cb{Fh}}}BGj}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}`{{{f{{An{{f{{l{A`}}}}}}}}{f{Aj}}d}{{Bd{{l{A`}}Bb}}}}{{{f{CNn}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CGl}}}{{l{Jd}}}}`{{BHdCAh}BHd}``{{{f{On}}}Lf}`{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}CF`{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Aj}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{BGjBGj}{{{f{AJh}}}d}{{{BKl{c}}d}{{BKl{c}}}BL`}``0`{{}b}{cb{ABfBHb}}{cBGj{{Hf{{An{Gb}}}}}}``{{{f{CN`}}{f{Aj}}}{{Cb{Fh}}}}{{{f{B@n}}{f{Aj}}}{{Cb{Fh}}}}{{{f{BAh}}{f{Aj}}}{{Cb{Fh}}}}{{{f{{An{Lf}}}}}{{`{{Cj{}{{Cd{Fh}}}}}}}}{{{f{CNd}}Al{Cb{Fh}}d{Cb{{f{B@n}}}}FhFh{Cb{{f{BOn}}}}{Cb{Al}}Al{Cb{{f{C@`}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@nFhFh}}Bb}}}}{{{CJb{c}}{Cb{Fh}}}{{CJb{c}}}BGh}{{{CJd{c}}{Cb{Fh}}}{{CJd{c}}}BGh}``{{}Fh}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{CnAAb}}}{{Ch{Cf}}}}{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMh}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnNh}}}{{f{CnIl}}}}`{{{f{CnB@n}}Fh{ANj{ANh}}Ef}{{Bd{{Cb{Ef}}Bb}}}}{{BGjBGjGbEf}BGj}{{BGjBGjBGj}BGj}``{{{f{B`}}CBh}B`}{{BGjCBh}BGj}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BGjBGj}BGj}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCj{{Gf{{Fn{AMn}}{Fn{{Ch{Cf}}}}{Cb{Hd}}}}}}{{{AJd{c}}}c{}}{{{ADn{ce}}}{{Cb{c}}}{}BHb}33{{{f{BGj}}}}{B@n}{{{f{BCj}}}}{CO`BIh}{BIhBIh}{{{ADn{ce}}}{}NfBHb}{{BOhc}{{BGd{c}}}BGh}{BA`B`}{{{ADn{BIj}}}B`}{CEjCOb}{BC`{{Fn{c}}}{}}{c{{Fn{Eh}}}{}}{c{{Fn{{ANj{ANh}}}}}{}}{{{f{CAh}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBj}{{Bd{{l{Af}}Bb}}}}{{BGjccCBj}BGj{{AMl{BGj}}}}{cd{{Hf{CKn}}}}{{{f{{An{Al}}}}}d}{{{f{AOb}}{Cb{{f{Aj}}}}}d}{{{f{BIj}}}d}{{{f{B@n}}}d}{{{f{BAh}}}d}{{{f{BLh}}}d}{BGjBGj}{{{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{AGd}}}{{Bd{{l{Af}}Bb}}}}2{{{f{AOb}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}54{{{f{AGf}}}{{Bd{{l{Af}}Bb}}}}6{{{f{CGh}}}{{l{Af}}}}{{{f{CGj}}}{{l{Af}}}}{{{f{BNb}}}{{Bd{{l{Af}}Bb}}}}999{{{f{BIj}}}{{l{Af}}}}::0{{{f{Nh}}}d};{{{f{On}}}d}`{{{f{B`}}}d}{{{f{{ADn{CJf}}}}}d}{{}d}{{{f{COd}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CAl}}{f{CAh}}}{{Bd{bBb}}}}4?{{{f{CGh}}}{{l{In}}}}{{{f{CGj}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{B@n}}}{{`{{Cj{}{{Cd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}}}}}{{{f{BCj}}}{{ADl{{Fn{{Ch{CIb}}}}COfADj}}}}{{{f{B@n}}}{{`{K`}}}}{{{f{CnB@n}}}{{`{K`}}}}11{{{f{CFb}}}{{Bd{{Cb{{Ch{Cj}}}}Bb}}}}{{BIfBGjd}BGj}{{BBnBBnccBFn}BBn{{Hf{{An{BGj}}}}}}{{BIhBGjd}BGj}{{{f{CMh}}{f{AOh}}eeBFn}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{f{COh}}{f{AOh}}{f{Aj}}{f{Aj}}CBd{Cb{Id}}{Cb{Eh}}}{{Bd{AOhBb}}}}{{{f{COj}}{f{AOh}}{f{Aj}}{f{Aj}}eeCBd{Cb{Id}}}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{BBnBHd}{{{f{COl}}{f{Aj}}d}{{Bd{{l{A`}}Bb}}}}{{{f{COl}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{BHdd}BHd}`{CIhBGj}{COnBGj}{{{f{CEj}}}{{f{{Cb{{Fn{D@`}}}}}}}}``{{}BGj}{BBnBBn}{BIhBGj}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{BGjBGj}{D@bBBn}4{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMlNf}BHb}`{{BBnBBncc}BBn{{AMl{BGj}}}}{{{f{CMh}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{BHdc}BHd{{Hf{{An{BGj}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}<{{{f{BIj}}}Fh};9{{{f{B@n}}}Fh}{{{f{BCj}}}Fh}{{{f{BAh}}}Fh}{{BBnLf}BBn}{{{f{BIj}}Fh}B`}{{{f{BLh}}}d}`{BGjBIh}{cBGjD@d}{D@dBGj}{D@fBGj}{CEdBGj}{{BGjc}BGj{{AMl{BGj}}}}0``{{BHhd}BHh}{{{CJd{c}}d}{{CJd{c}}}BGh}```{BGjBGj}{{{f{COl}}}{{l{El}}}}0{{{f{COl}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{COl}}GbCHf}{{Bd{{l{j}}Bb}}}}{{{f{COl}}Gbd}{{Bd{B`Bb}}}}{{{f{COl}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}4{{{f{COl}}}{{Bd{B`Bb}}}}{{{f{COl}}}B`}01{{{f{COl}}}{{Bd{{l{El}}Bb}}}}{{{f{COl}}}{{l{j}}}}{{{f{COl}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{COl}}GbFh}{{l{j}}}}{{{f{COl}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{COl}}Al}B`}7{{{f{COl}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CMlNf}BHb}21``````{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}ABf{BHbABf}}{{BBncCEb{Cb{{ADn{CJh}}}}{Cb{{f{Aj}}}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{COnc}BGj{{Dh{{f{Aj}}}{{Df{{Bd{EhBb}}}}}}HjHl}}{{BGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGjBGjc{BHn{{ADn{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGj{f{Cnc}}{f{Cn}}}{{Bd{BGjBb}}}{{E`{BGj{f{Cn}}}{{Df{{Bd{BGjBb}}}}}}}}{{{f{BIl}}{Cb{{f{Eh}}}}}{{Bd{N`Bb}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{Ef}}}{{Df{Ef}}}}}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{Ef}}}{{Df{Ef}}}}HjHl}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{{An{{f{Ef}}}}}}}{{Df{Ef}}}}HjHl}}{{BGjc}BGj{{E`{BGj}{{Df{BGj}}}}}}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{N`}}}{{Df{N`}}}}HjHl}}{{COn{ADn{Dh}}}BGj}{c{{BHn{{ADn{BHl}}}}}{{Dh{{f{{An{N`}}}}}{{Df{N`}}}}HjHl}}:{{ce{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}{{Hf{{An{BGj}}}}}}{{BGjc{f{{An{BGj}}}}{BHn{{ADn{BHl}}}}}BGj{{Dh{{f{Cn{An{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGjBIb{f{{An{BGj}}}}dd}BGj}2{{{f{BIl}}}{{Bd{N`Bb}}}}{{BOhc}BOh{{Dh{BOj}{{Df{BOj}}}}}}1111{CEdCEd}{{{Cb{{f{{An{Fh}}}}}}{f{BAh}}{Cb{{f{{An{B`}}}}}}{Cb{{f{D@h}}}}}AOh}{{{Cb{{f{{An{Eh}}}}}}{f{B@n}}{Cb{{f{{An{B`}}}}}}d}{{Cb{{Fn{Fh}}}}}}{{{f{Aj}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{D@j}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}`754{{{f{AGh}}}{{Cb{Lb}}}}3{{{f{BIj}}}{{Cb{Lb}}}}9876{{{f{AGj}}}{{Cb{c}}}{}}51{{{f{D@l}}}L`}4{{BBnBCb}BBn}``{{{CIl{c}}{Cb{CFl}}}{{CIl{c}}}BGh}{{{f{CnB@n}}B@n}b}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnB@n}}{f{B@n}}}b}````{{{f{CGl}}}{{l{Jd}}}}`{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}1`{{{f{Aj}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}```{{{f{D@j}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}`{{{f{CNn}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}`=```6{{{f{CGh}}}{{l{Ln}}}}21`{{{f{D@n}}{Cb{{f{AJj}}}}}{{Bd{D@nBb}}}}{{{f{DA`}}{Cb{{f{AJj}}}}}{{Bd{DA`Bb}}}}{{{f{AOb}}}Gb}{{{f{AOb}}}d}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{AObGb}AOb}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BIj}}}Fh}{{{f{CFb}}}{{Cb{Fh}}}}{{{f{BNj}}}{{Cb{Fh}}}}{{{f{BHh}}}{{Cb{Fh}}}}`````{{{BKl{c}}Fh}{{BKl{c}}}BL`}`{BIfBGj}{BIhBGj}{{{f{AEn}}}{{Bd{FhBb}}}}{BGjBGj}{{{f{BIj}}}{{Bd{FhBb}}}}{{{f{BIj}}}{{f{Aj}}}}{BGjCOn}````33`{{{f{CNn}}}{{l{In}}}}{{{f{CGj}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{CGl}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CI`Nf}BHb}{{{f{CAl}}}d}{BGj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AOb}}}d}{{DAbFh}{{Cb{Fh}}}}{{BGjc}BGj{{AMl{BGj}}}}0{{{f{BIl}}}{{Bd{N`Bb}}}}{{}c{}}{cCIjBJ`}{cCG`BL`}2{{{f{Aj}}c}DAd{}}{c{{AJd{c}}}{}}{BBnBHd}{c{{BGd{c}}}BGh}{c{{BKl{c}}}BL`}{{{f{{An{N`}}}}}BIl}{c{{CIl{c}}}BGh}{c{{BIn{c}}}BJ`}{c{{CIn{c}}}BL`}{{}CFn}{c{{BLb{c}}}BL`}{{}CGb}{c{{CJ`{c}}}BL`}{c{{CJb{c}}}BGh}{GbAOb}{cBNj{{Hf{CKn}}}}{cBHh{{Hf{CKn}}}}{{AObAObAOb}BOf}{c{{CJd{c}}}BGh}{{DAf{ADn{CEj}}{ADn{BAh}}Fh{Cb{{Fn{Fh}}}}{Cb{{ADn{BGf}}}}{Cb{D@h}}Fhd{Cb{{Fn{B`}}}}CAb}{{Bd{BLhBb}}}}{c{{BLf{c}}}BGh}{c{{BLj{c}}}{BL`BL`}}{CAhBFn}{c{{BHn{c}}}{}}{{BGjBGjBGj}CDd}{{}CDf}{{{f{Aj}}{Fn{N`}}{BHn{{ADn{BHl}}}}c}BMfBJb}{c{{ADn{c}}}{}}{{}B@n}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hd}}}BCj}{{cADdd}AMn{{AMl{Eh}}}}{e{{ADn{c}}}{}{{A@`{{f{{CHh{c}}}}}{{Df{c}}}}}}{ADdBCj}{{{f{AGl}}FhFh}{{l{c}}}Dd}{{{f{BIj}}FhFh}B`}{{{f{Aj}}}BOn}{{ce}{{ADn{ce}}}{}BHb}{{{f{B@n}}Fh{ANj{ANh}}Ef}{{Bd{B@nBb}}}}{{Gb{f{Aj}}}{{Bd{B`Bb}}}}{EhBOn}{{ADdFh}BCj}{{{ADn{{An{CFl}}}}}BNj}{{{ADn{{An{CFl}}}}}BHh}{AlBOn}{{}{{ADn{{BKf{c}}}}}{}}{c{{ADn{{BKf{e}}c}}}BHb{}}{Fh{{ADn{{An{{BKf{c}}}}}}}{}}{{Fhc}{{ADn{{An{{BKf{e}}}}c}}}BHb{}}3210{{{f{CnDAh}}}Cb}{{{f{CnCNb}}}Cb}{{{f{CnBLn}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBKj}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBLh}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{BGj}}{f{Cn{BD`{{f{BGj}}}}}}}b}{{BGj{f{Cn{BD`{BGj}}}}}b}{BGjBGj}0{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{GbBGj}`{{}On}{{}Nh}`{{{f{BIj}}}Fh}{BBnBBn}6````{{{f{Cn{BLf{c}}}}}{{Bd{FhBb}}}BGh}````{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{BHdc}BHd{{Hf{{An{BGj}}}}}}{{BBn{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Bd{BFdBb}}}}`{{BGjc}BGj{{AMl{BGj}}}}{{{f{CGh}}}{{l{Lj}}}}{{{f{CGj}}}{{l{Lj}}}}{{{f{BNb}}}{{Bd{{l{Lj}}Bb}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{CCdc}BGj{{AMl{BGj}}}}{{CChc}BGj{{AMl{BGj}}}}`{{BGje}BGj{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{BGjeCE`}BGj{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}```{{{f{Aj}}}AOb}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{J`In}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{KbJd}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}Jf}{{Jb{JhJd}}}}``{{{f{AOb}}{f{AOb}}}{{Cb{AO`}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}{{Cb{AO`}}}{CMlNf}BHb}{{{f{CFb}}}{{f{CKn}}}}{{{f{BNj}}}{{f{CKn}}}}{{{f{BHh}}}{{f{CKn}}}}`{{{f{CFb}}}{{f{{An{CFl}}}}}}{{{f{BNj}}}{{f{{An{CFl}}}}}}{{{f{BHh}}}{{f{{An{CFl}}}}}}``{{}BGj}{c{{DAj{{ADn{c}}}}}{}}{{ce}{{DAj{{ADn{ce}}}}}{}BHb}````{{BGjc}BGj{{AMl{BGj}}}}```{{COn{f{Aj}}}BGj}0{{{f{AOh}}{f{AOh}}d}{{Bd{{Gf{{Oj{{Fn{Lf}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}Bb}}}}`{{{f{D@j}}}L`}{BGjBGj}{BBn{{Bd{{Gf{AOhAOh}}Bb}}}}```{{{f{{ADn{c}}}}{f{CnDAl}}}b{AIlNf}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}dNfBHb}{{{f{Aj}}BGjMn}BGj}{{BBnBGjMn}BBn}{{{f{AGj}}LbMn}{{Bd{{Cb{c}}Bb}}}{}}{{BGjBGjMn}BGj}{{{f{D@l}}LbMn}{{Bd{L`Bb}}}}{{{f{BIj}}LbMn}{{Bd{L`Bb}}}}{{{f{CGh}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@j}}}{}CIf{}}````{{{f{DAn}}CBn{Cb{Il}}}B`}{{BGjCBn{Cb{Il}}}BGj}{{{f{Cn{ADn{CJf}}}}{f{Cn{An{Al}}}}}{{Bd{FhB@j}}}}{{{f{Cn{ADn{CJf}}}}DB`}{{Bd{bB@j}}}}{{{BLf{c}}CAb}{{BLf{c}}}BGh}{{{f{Cn{ADn{CJf}}}}{f{Cn{Fn{Al}}}}}{{Bd{FhB@j}}}}{{{f{Cn{ADn{CJf}}}}{f{CnEh}}}{{Bd{FhB@j}}}}{{{f{Cnc}}}{{Bd{eB@j}}}{}DBb}{{{f{Cn{ADn{CJf}}}}{f{Cn{An{DBd}}}}}{{Bd{FhB@j}}}}{{{f{CFb}}}d}{{{f{BIj}}}B`}{{{f{BNj}}}d}{{{f{BHh}}}d}````{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hf{{An{BGj}}}}}}{{{f{AGn}}}B`}0{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB@n}}{f{Aj}}}{{Cb{Ef}}}}{{{f{CnBIj}}{f{Aj}}}b}{{BBnei}BBn{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}{{Hf{Aj}}}{{Gh{}{{Cd{g}}}}}}{{{f{CnB@n}}{f{Aj}}{ANj{ANh}}}{{Cb{{ANj{ANh}}}}}}{{CIh{Fn{Eh}}}BGj}{{cBGj}BGj{{AMl{BGj}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{Cb{Ef}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{Aj}}{f{Aj}}}{{Bd{{l{A`}}Bb}}}}{{BGjcc{Cb{c}}{Cb{Ef}}}BGj{{AMl{BGj}}}}1{{{f{BIl}}{Cb{Ef}}}{{Bd{N`Bb}}}}{{{f{BKh}}{f{Aj}}{f{Aj}}Fh}{{Bd{{l{A`}}Bb}}}}3{{{f{{Jb{JhJd}}}}{Cb{{f{Aj}}}}{f{{l{A`}}}}CF`}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{CnB@n}}Fh}b}{{BGj{f{{An{Gb}}}}}BGj}{{{f{CKn}}}CFl}`{{{f{AH`}}}AH`}{{{f{BIj}}}B`}{BIfBGj}{BBnBBn}{BIhBGj}{BGjBGj}`{{BHdc}BHd{{Hf{{An{BGj}}}}}}{{{f{CNf}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}{{BBnBGjcBCd}BH`{{Hf{{An{BGj}}}}}}{{BGjBCd}BGj}{{{f{AHb}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{BGj{ADn{Dh}}{BHn{{ADn{BHl}}}}Nb}BGj}{{{f{BIj}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{BGjFhc}BGj{{E`{{f{Cn{l{Ed}}}}}{{Df{{Cb{Lb}}}}}}HjHlDj}}{{{f{DBf}}Nb}{{Bd{B`Bb}}}}{{BGjNb}BGj}{{{f{DBf}}{f{B`}}BNf}{{Bd{B`Bb}}}}{{BGjBGjBNf}BGj}32102032103{{BGjMnLbNb}BGj}2{{BGjBGjMnLbBNf}BGj}543254325432{{{f{DBh}}{f{{l{A`}}}}AOb{Cb{{f{AJj}}}}}{{Bd{DBhBb}}}}{{{f{BN`}}Lf}{{Bd{B`Bb}}}}{{BGjLf}BGj}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BN`}}Mb}{{Bd{B`Bb}}}}{{BGjMb}BGj}2````{{{f{CFb}}}{{Cb{{f{D@h}}}}}}{{{f{BNj}}}{{Cb{{f{D@h}}}}}}{{{f{BHh}}}{{Cb{{f{D@h}}}}}}``````{{{f{COl}}{l{j}}}{{l{j}}}}{{}{{BHn{{ADn{BHl}}}}}}{{BGjBGjdd{Cb{Il}}}BGj}0`{{{f{BHf}}DBj}{{Bd{AOhBb}}}}{{{f{BHh}}DBj}{{Bd{AOhBb}}}}{{cBNl}{{Bd{BBnBb}}}{{Hf{CKn}}}}{{{ADn{{An{CFl}}}}BNl}{{Bd{BBnBb}}}}{{cBO`}{{Bd{BBnBb}}}{{Hf{CKn}}}}{{{ADn{{An{CFl}}}}BO`}{{Bd{BBnBb}}}}{{DBl{f{{An{Lf}}}}e}{{Bd{B`Bb}}}Dj{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lf}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lf}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}{{{f{Cn{CIl{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGh}{{{f{Cn{BIn{c}}}}}{{Bd{B@nBb}}}BJ`}{{{f{BBn}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BHh}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BLh}}}{{f{{ADn{BAh}}}}}}{{{f{Cn{BLf{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGh}{{{f{BHf}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{CEj}}}{{f{DBn}}}}```````{{{f{CNn}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}`{{{f{CGl}}}{{l{Jd}}}}`{{{f{Cn{ADn{CJf}}}}DC`}{{Bd{IlB@j}}}}{{BBnc}BBn{{Hf{{An{BGj}}}}}}0````{{{f{AHd}}{f{{l{Af}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{CnB@n}}{f{Aj}}Ef}{{Cb{Ef}}}}{{{f{CnB@n}}FhEf}{{Cb{Ef}}}}{{{BLf{c}}d}{{BLf{c}}}BGh}{{{BLj{c}}d}{{BLj{c}}}BL`}{{{CIl{c}}d}{{CIl{c}}}BGh}{{{BIn{c}}d}{{BIn{c}}}BJ`}{{{CJb{c}}d}{{CJb{c}}}BGh}4{{CIjd}CIj}{{BGjIh}BGj}{{{f{CnBCj}}{Cb{Hd}}}b}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{BIj}}Gb}B`}{{BIfBGj}BGj}{{BBnc}BBn{{AMl{BGj}}}}{{BIhBGj}BGj}{{BGjBGj}BGj}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{BBnce}BBn{{AMl{BGj}}}{{AMl{BGj}}}}{{BGjce}BGj{{AMl{BGj}}}{{AMl{BGj}}}}{{{f{CnB@n}}{f{Aj}}}{{Cb{Ef}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{ANj{ANh}}Ef}}}}}}{BGjBGj}{{{f{CnAAd}}}b}{{{f{CnBIj}}}b}{{BGj{Cb{Il}}}BGj}``{{BBnCFlC@b}{{Bd{bBb}}}}{{BBnCFlC@j}{{Bd{bBb}}}}{{BBnCFlC@n}{{Bd{bBb}}}}{{BBnCFlCAf}{{Bd{bBb}}}}`````{{{f{BIj}}GbFh}B`}{{BBnGbLf}BBn}{{BIhBGjBGj}BGj}={{{f{CnBCj}}FhFh}b}0```{{{f{AHj}}FhFh}AHj}{{{f{c}}FhFh}e{}{}}1022{{BCjFhFh}BCj}0`{{{f{AEl}}d}{{l{c}}}Dd}{{BIfEj}BGj}{{BBncF`}BBn{{BC`{{ANj{ANh}}}}}}{{BIhEj}BGj}{{BGjEj}BGj}{{BGjeF`}BGj{{AMl{BGj}}ABf}{{Hf{{An{c}}}}}}{{BBncF`}BBn{{Hf{{An{BGj}}}}}}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{BIj}}Ej}{{Bd{B`Bb}}}}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{{{f{BKh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Aj}}}}}}}{{Dh{{f{Aj}}{f{Aj}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{Aj}}}}}}}{{Dh{{f{Aj}}{f{Aj}}}{{Df{c}}}}}}2{BGjBGj}`{{{f{CFj}}{f{{An{Al}}}}}{{l{Af}}}}{{{f{CFj}}{f{{l{Ah}}}}}{{l{Af}}}}`{{BIfAl}BGj}{{BBnAl}BBn}{{BIhAl}BGj}{{{f{AHl}}Al}{{Cb{Lb}}}}{{BGjAl}BGj}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{DCb}}Al}L`}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{{LfLf}Nh}{BGjDCd}{{{f{{l{A`}}}}{f{Aj}}d}{{l{A`}}}}{{{f{BKh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{El}}}}0{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}3````{{{f{BNb}}{f{Aj}}}{{Bd{B`Bb}}}}`{{BGjEf}BGj}`{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}606060{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{{ADn{ce}}}}}FhNfBHb}{BGjCIh}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BHdc}BHd{{Hf{Aj}}}}{{COn{f{Aj}}}BGj}{{{f{BFn}}}{{f{Aj}}}}`1{{{f{Aj}}}BGj}{BIfBGj}{BBnBBn}{BIhBGj}{{{f{AGh}}}{{Cb{c}}}{}}{BGjBGj}{{{f{D@j}}}L`}{{{f{BIj}}}{{Bd{L`Bb}}}}{{}{{BHn{{ADn{BHl}}}}}}{{{f{Cnc}}i}{{Bd{gB@j}}}{}{}{}{{A@`{{f{Cne}}}{{Df{g}}}}}}{{BBnLf}BBn}{{BH`{Cb{Fh}}}BBn}{{BIhBGj}BGj}{{BGj{Cb{Fh}}}BGj}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{BIj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DCf}}{f{{An{Nh}}}}Ih}DCf}{{{f{DCf}}{f{{An{Nh}}}}}DCf}{{{f{BIj}}{f{{An{Lf}}}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{An{Lf}}}}}B`}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{BIj}}{f{{l{El}}}}}B`}{{{f{CnBCj}}}{{Cb{Hd}}}}{{BGjBGjBGj}BGj}{{CCbc}CCd{{AMl{BGj}}}}{{CCfc}CCh{{AMl{BGj}}}}`{{BGjBGjAObBNn}BGj}```{{{f{BNb}}Jf}{{Bd{{l{Jd}}Bb}}}}{BBn{{Bd{DChBb}}}}{CC`{{Bd{DChBb}}}}1{{{f{CEd}}}{{Cb{Id}}}}{{BIhFh}BGj}{{{f{B@n}}d}BAh}{{{f{BCj}}}{{Ch{Cf}}}}{{{f{AIb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{{f{DCj}}{Cb{{f{Aj}}}}d}{{Bd{AOhBb}}}}{{{f{BGb}}{Cb{{f{Aj}}}}d}{{Bd{AOhBb}}}}{{{f{BGj}}{f{B@n}}CMn}{{Bd{N`Bb}}}}{{{f{BKh}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}{BIfBGj}{{{f{BKh}}}{{l{A`}}}}{COnBGj}{{{f{On}}}{{Cb{Lf}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGjBGj}{{{f{BIl}}}{{Bd{N`Bb}}}}{{{f{BNb}}{f{Aj}}}{{Bd{B`Bb}}}}{{{f{c}}}Eh{}}0000000000{{{f{CnB@n}}{f{B@n}}}{{Bd{dBb}}}}`887``{{BBnLfcF`}BBn{{Hf{{An{BGj}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{f{DCl}}{Cb{{f{AJj}}}}{f{{l{A`}}}}{f{Aj}}}{{Bd{DClBb}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}ceg}{{Bd{GbBb}}}{{Dh{Gb}{{Df{Gb}}}}}{{Dh{Gb}{{Df{AJh}}}}}{{Dh{AJh}{{Df{Gb}}}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}00010`10{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{ABl{f{Aj}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{Aj}}Ef}{{Bd{{l{c}}e}}}Dd{}}0{c{{Bd{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Id{{Bd{CEdBb}}}}11{{{ADn{{An{c}}e}}}{{Bd{{ADn{{Ob{c}}e}}}}}{}BHb}22222222222222{COb{{Bd{CEjB@d}}}}{{{f{B@n}}{f{Aj}}}{{Bd{{f{Ef}}Bb}}}}{{{f{B@n}}Fh}{{Bd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{B@n}}{f{Aj}}}{{Bd{N`Bb}}}}{{{f{B@n}}{f{Aj}}}{{Bd{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{CnB@n}}{f{Aj}}}{{Bd{{f{CnEf}}Bb}}}}{{{f{CN`}}{f{Aj}}}{{Bd{FhBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOh{Cb{CFl}}}{{Bd{{BGd{CJf}}Bb}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{Ef}}}{{Df{{Bd{EfBb}}}}}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{{An{{f{Ef}}}}}}}{{Df{{Bd{EfBb}}}}}}}}{{BGjc}{{Bd{BGjBb}}}{{E`{BGj}{{Df{{Bd{BGjBb}}}}}}}}{{{f{BIl}}c}{{Bd{N`Bb}}}{{A@`{{f{N`}}}{{Df{{Bd{N`Bb}}}}}}}}{{DAbFh}{{Bd{FhBb}}}}{Al{{Bd{CAnBb}}}}{Lf{{Bd{CBbBb}}}}{Mb{{Bd{CBfBb}}}}{c{{Bd{{ADn{c}}DCn}}}{}}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hd}}}{{Bd{BCjBb}}}}{{ce}{{Bd{{ADn{ce}}DCn}}}{}BHb}{{}{{Bd{{ADn{{BKf{c}}}}DCn}}}{}}{c{{Bd{{ADn{{BKf{e}}c}}DCn}}}BHb{}}10`{c{{Bd{{DAj{{ADn{c}}}}DCn}}}{}}{{ce}{{Bd{{DAj{{ADn{ce}}}}DCn}}}{}BHb}{{{f{BJb}}{f{Cn{Fn{Al}}}}}{{Bd{bBb}}}}{{{ADn{ce}}}{{Bd{c{ADn{ce}}}}}{}BHb}``{{{f{c}}}Ol{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Aj}}}}`{{{f{AEn}}}{{Bd{AEnBb}}}}{BIfBGj}{{BBn{Cb{{Fn{Eh}}}}BAd}BBn}{BIhBGj}{BGjBGj}{{{f{BIj}}}{{Bd{B`Bb}}}}4321{{BBne}BBn{{Hf{Aj}}}{{Gh{}{{Cd{c}}}}}}{{{ADn{{DD`{c}}}}}{{Bd{cb}}}Hj}{{{ADn{ce}}}cABfBHb}{{{f{CnBOh}}{f{DDb}}}b}5{{{f{DDd}}c{f{Aj}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{BLf{c}}d}{{BLf{c}}}BGh}```{{BHdCAl}BHd}`{{{f{BCj}}}{{Cb{{f{Hd}}}}}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{COd}}ddEh}{{Bd{AOhBb}}}}{{BGjddEh}BGj}`2`{{{f{BCj}}}{{f{{An{{Ch{Cf}}}}}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BCj}}}COf}{{BIfAl}BGj}{{BBnAl}BBn}{{BIhAl}BGj}{{{f{AHl}}Al}{{Cb{Lb}}}}{{BGjAl}BGj}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{DCb}}Al}L`}{{{f{BIj}}Al}{{Bd{L`Bb}}}}`{{{f{DDf}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{DDf}}Nl{f{Cn{An{Il}}}}}{{Bd{bBb}}}}`{{{f{{ADn{{DD`{c}}}}}}g}{{Bd{eb}}}Hj{}{{A@`{{f{c}}}{{Df{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADn{ce}}}}}FhNfBHb}{{{f{CGh}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}210{{{f{BOd}}}{{Cb{Lf}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}`{cCCb{{AMl{BGj}}}}{{CCdc}CCf{{AMl{BGj}}}}{{CChc}CCf{{AMl{BGj}}}}```{{BHdBBn}BHd}{{CDdBGj}CDd}{{{BKl{c}}{DDh{Fh}}}{{BKl{c}}}BL`}{{{CJb{c}}{DDh{Fh}}}{{CJb{c}}}BGh}{{BHh{Cb{{DDh{Fh}}}}}BHh}{{BNjd}BNj}{Fhc{}}0{FhB@n}{{{CJd{c}}{Cb{{DDh{Fh}}}}}{{CJd{c}}}BGh}{{BOhFh}BOh}{{BBnd}BBn}{{BFnCAd}BFn}{{BBnBGj}BBn}{{{f{CnB@n}}{ANj{ANh}}Ef}{{Cb{Ef}}}}{{{CIl{c}}{Cb{{Fn{Eh}}}}}{{CIl{c}}}BGh}{{{BIn{c}}{Cb{{Fn{Eh}}}}}{{BIn{c}}}BJ`}{{BBnc}BBn{{Hf{{An{BGj}}}}}}{{{BLf{c}}{Cb{{Fn{Eh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{{Fn{Eh}}}}}}}BOh}`2{{BNj{Cb{{f{Aj}}}}}BNj}{{BOj{Cb{c}}}BOj{{AMl{BOn}}}}{{{CIn{c}}{Cb{C@l}}}{{CIn{c}}}{}}{{CFn{Cb{C@l}}}CFn}{{{BLb{c}}{Cb{C@l}}}{{BLb{c}}}BL`}{{CGb{Cb{C@l}}}CGb}{{{BLj{c}}CAj}{{BLj{c}}}BL`}{{BBnc}BBn{{Hf{{An{BBn}}}}}}{{{BLj{c}}{Cb{Fh}}}{{BLj{c}}}BL`}{{{BKl{c}}{Cb{Eh}}}{{BKl{c}}}BL`}0{{CDdBGj}CDd}{{CDfBGj}CDf}{{BNjd}BNj}{{BOjd}BOj}{{{f{BIl}}Ef}{{Bd{N`Bb}}}}{{BNj{Cb{{ADn{B@n}}}}}BNj}{{BOh{Cb{{ADn{{Fn{Ef}}}}}}}BOh}{{BNjBOl}BNj}{{BOjBOl}BOj}{{BNjAl}BNj}{{BOjAl}BOj}{{CFnCFl}CFn}{{CGbCFl}CGb}{{CIh{Fn{BGj}}}BGj}{{{BKl{c}}{Cb{Fh}}}{{BKl{c}}}BL`}{{CDfBGjBGjBGj}CDf}=={{BOhd}BOh}{{{BLf{c}}{Cb{{Fn{B`}}}}}{{BLf{c}}}BGh}{{CDdBGjBGjBGj}CDd}3{{CDdBGj}CDd}{{CDfBGj}CDf}{{{CJb{c}}d}{{CJb{c}}}BGh}{{BNjd}BNj}{{BHhd}BHh}{{{CJd{c}}d}{{CJd{c}}}BGh}8{{BNj{Cb{Fh}}}BNj}{{BHh{Cb{Fh}}}BHh}{{BOh{Cb{Fh}}}BOh}{{{CJ`{c}}DDj}{{CJ`{c}}}BL`}{{{CJb{c}}DDj}{{CJb{c}}}BGh}{{{BKl{c}}Eh}{{BKl{c}}}BL`}8>{{AMn{DDl{EhEh}}}AMn}{{BAh{DDl{EhEh}}}BAh}=<<=<:{{BOjd}BOj}>{{CFbc}CFb{{AMl{{Cb{Fh}}}}}}{{{CIl{c}}{Cb{Fh}}}{{CIl{c}}}BGh}{{{BIn{c}}{Cb{Fh}}}{{BIn{c}}}BJ`};{{BNjc}BNj{{AMl{{Cb{Fh}}}}}}{{BHhc}BHh{{AMl{{Cb{Fh}}}}}}<{{{CJd{c}}{Cb{Fh}}}{{CJd{c}}}BGh}{{{BLf{c}}{Cb{Fh}}}{{BLf{c}}}BGh}=1={{CDfBGj}CDf};{{BNj{Cb{C@`}}}BNj}{{BOj{Cb{C@`}}}BOj}{{BBnCEb}BBn}{{BOhBOj}BOh}{{CFbCFl}CFb}{{BNjCFl}BNj}{{BHhCFl}BHh}{{{CJd{c}}{Cb{e}}}{{CJd{c}}}BGh{{AMl{CFl}}}}{{BOh{Cb{c}}}BOh{{AMl{CFl}}}}{{CFb{ADn{{An{CFl}}}}}CFb}{{BNj{ADn{{An{CFl}}}}}BNj}{{BHh{ADn{{An{CFl}}}}}BHh}{{{CIn{c}}d}{{CIn{c}}}{}}{{{BLb{c}}d}{{BLb{c}}}BL`}{{{BLf{c}}{Cb{{ADn{BGf}}}}}{{BLf{c}}}BGh}{{BBnd}BBn}{{{CIl{c}}{Cb{{Fn{Fh}}}}}{{CIl{c}}}BGh}{{{BIn{c}}{Cb{{Fn{Fh}}}}}{{BIn{c}}}BJ`}{{{CJb{c}}{Cb{{Fn{Eh}}}}}{{CJb{c}}}BGh}{{{BLf{c}}{Cb{{Fn{Fh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{{Fn{Fh}}}}}}}BOh}5{{{BKl{c}}Al}{{BKl{c}}}BL`}{{BNj{Cb{Al}}}BNj}{{BOj{Cb{Al}}}BOj}{{{BKl{c}}C@f}{{BKl{c}}}BL`}{{BNjd}BNj}{{BOhd}BOh}{{CFbd}CFb}2{{BHhd}BHh}{{{CJd{c}}d}{{CJd{c}}}BGh}3>{{{BLj{c}}{Cb{Fh}}}{{BLj{c}}}BL`}{{CFbc}CFb{{AMl{{Cb{D@h}}}}}}{{{CIl{c}}{Cb{D@h}}}{{CIl{c}}}BGh}{{{BIn{c}}{Cb{D@h}}}{{BIn{c}}}BJ`}{{BBn{f{Aj}}{Cb{Lf}}}BBn}{{BNj{Cb{D@h}}}BNj}{{BNjc}BNj{{AMl{{Cb{D@h}}}}}}{{BHhc}BHh{{AMl{{Cb{D@h}}}}}}{{BHh{Cb{D@h}}}BHh}{{{BLf{c}}{Cb{D@h}}}{{BLf{c}}}BGh}{{BOh{Cb{D@h}}}BOh}{{{f{BIl}}}{{Bd{N`Bb}}}}{{BOhFh}BOh}{{{CJb{c}}{ADn{B@n}}}{{CJb{c}}}BGh}{{BNj{Cb{{ADn{B@n}}}}}BNj}{{BHh{Cb{{ADn{B@n}}}}}BHh}{{{CJd{c}}{ADn{B@n}}}{{CJd{c}}}BGh}{{{BLf{c}}{Cb{{ADn{BAh}}}}}{{BLf{c}}}BGh}{{BOh{Cb{{ADn{B@n}}}}}BOh}{{BNjc}{{Bd{BNjBb}}}{{Dh{B@n}{{Df{{Bd{B@nBb}}}}}}}}{{{CJb{c}}{f{B@n}}}{{CJb{c}}}BGh}{{{CJd{c}}{f{B@n}}}{{CJd{c}}}BGh}3{{CDdBGj}CDd}{{CDfBGj}CDf}{{{BKl{c}}Al}{{BKl{c}}}BL`}{{BNjAl}BNj}{{BOjAl}BOj}{{BBnd}BBn}{{BNjFh}BNj}{{BOhFh}BOh}102{{{BLj{c}}d}{{BLj{c}}}BL`}3{{{BKl{c}}{Cb{Eh}}}{{BKl{c}}}BL`}{{CDdJf}CDd}{{CDd{Cb{Eh}}}CDd}{{BNjd}BNj}{{BOjd}BOj}108{{BCj{Cb{Hd}}}BCj}{{{f{BCj}}{Cb{Hd}}}{{Ch{Cf}}}}{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}?{{CDdBGj}CDd}{BBnBBn}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}10{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}210213210210{{{f{Cn{ADn{CJf}}}}{f{{An{Al}}}}}{{Bd{FhB@j}}}}{{{f{Cnc}}e}{{Bd{FhB@j}}}{}DBb}{{{f{Cn{ADn{CJf}}}}{f{{An{DDn}}}}}{{Bd{FhB@j}}}}{{BGjc}BGj{{AMl{BGj}}}}{{{f{CGh}}}{{l{In}}}}{{{f{CGj}}}{{l{In}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}``{{{f{AId}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BCn}}c}B`{{Dh{{Gf{Lf{f{{BD`{Lf}}}}}}}{{Df{Cb}}}}HjHl}}{{{f{BCn}}c}B`{{Dh{{Gf{Lf{f{{BD`{Lf}}}}}}}{{Df{}}}}HjHl}}{{{f{{An{{Ob{Lf}}}}}}c}B`{{Dh{{Ob{Lf}}}{{Df{Cb}}}}HjHl}}{{{f{{An{{Ob{Lf}}}}}}c}B`{{Dh{{Ob{Lf}}}{{Df{}}}}HjHl}}{{{f{{An{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LfLf}}}}}}Ib}}{{{f{{An{c}}}}{f{Hd}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LfLf}}}}}}Ib}}{{{f{{l{c}}}}LfLf}{{l{c}}}Dd}{{{f{{Fn{{Ob{Lf}}}}}}{f{{An{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bj}}}B`}{{BElBEl}BEl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Aj}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Aj}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Aj}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0``{{{f{DE`}}}{{l{El}}}}0{{{f{DE`}}{f{{l{Jd}}}}d}{{Bd{B`Bb}}}}{{{f{DE`}}{f{{l{A`}}}}d}{{Bd{B`Bb}}}}{{{f{DE`}}}B`}{{{f{DE`}}}{{Bd{B`Bb}}}}1{{{f{DE`}}}{{Bd{{l{El}}Bb}}}}{{{f{DE`}}}{{l{Bn}}}}{{{f{DE`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DE`}}Ej}{{Bd{{l{Bn}}Bb}}}}{{{f{DE`}}Al}{{Bd{B`Bb}}}}5{{{f{DE`}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEb}}}{{f{{l{Bn}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{BM`BGj}BGj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}2````````{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}`{{{f{CGh}}}{{l{Ln}}}}{{{f{CGj}}}{{l{Ln}}}}{{{f{CGl}}}{{l{Jd}}}}`{{{f{CNn}}}{{l{Ln}}}}21{{{f{CGh}}}{{l{Af}}}}{{{f{CGj}}}{{l{Af}}}}{{{f{CGh}}}{{l{In}}}}{{{f{CGj}}}{{l{In}}}}55`46576{{{f{CNn}}}{{l{In}}}}16{{{f{CGh}}}{{l{Lj}}}}{{{f{CGj}}}{{l{Lj}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{J`In}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}}{{Jb{KbJd}}}}{{{f{Aj}}{f{{An{{f{Aj}}}}}}{f{Aj}}Jf}{{Jb{JhJd}}}}=<{{{f{DBf}}Nb}{{Bd{B`Bb}}}}{{{f{DBf}}{f{B`}}BNf}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}{Cb{{f{Aj}}}}Jfd{Cb{{f{Eh}}}}{f{{l{A`}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{DEd}}}{{f{{l{A`}}}}}}{{{f{BJf}}{Cb{{f{Aj}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DEf}}}DEf}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DEf}}{f{DEf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DEf}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DEf}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}{{{f{DEf}}{f{Aj}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{{DEh{c}}}}}{{DEh{c}}}{ABfn}}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}?{{{f{Aj}}}{{Cb{DEf}}}}>=`{{{f{Cn{DEh{c}}}}{f{Aj}}}Cbn}{{{f{CnDEj}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{c}}}{}}{{{f{Cn{DEh{Jd}}}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{Gb}}}}{{{f{Cn{DEh{In}}}}{f{{An{Al}}}}{Cb{Jf}}}{{Cb{Mb}}}}`?>{{c{Cb{Jf}}}{{Bd{{DEn{}{{DEl{e}}}}Bb}}}{}{}}{{DEf{Cb{Jf}}}{{Bd{{DEh{Jd}}Bb}}}}{{DEf{Cb{Jf}}}{{Bd{{DEh{In}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}Ol{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Cnc}}}{{f{Cne}}}{}{}}0{{{f{CFd}}}CFd}{{{f{c}}{f{Cne}}}b{}{}}{{}CFd}{Fh{{f{c}}}{}}0{Fh{{f{Cnc}}}{}}0{Fhb}0{{{f{CFd}}{f{CFd}}}d}{{{f{DF`}}{f{DF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFd}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{Aj}}}{{Bd{DF`}}}}{{{f{Aj}}g}{{Bd{CFdBb}}}{{Hf{Aj}}}{{AMl{Eh}}}{{Gh{}{{Cd{{Gf{ce}}}}}}}}{{{f{CFd}}{f{Cnc}}}bAGb}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}Ol{}}033````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{An{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}`{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{ALd{Aj}}}Ef}{{{f{ALj}}}{{f{Ef}}}}`{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}Id}{{}Ef}{{{f{ANl}}Fh}Id}4{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}`{{}c{}}0{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jb{JhJd}}}}{f{{l{A`}}}}CF`{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Aj}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Aj}}}}{f{{l{A`}}}}CF`}{{Bd{{Jb{JhJd}}Bb}}}}```{{c{Cb{Hd}}}CLj{}}{{{CLl{Gb}}{CLl{Al}}{Cb{Hd}}}CLn}{{{CLl{Gb}}{CLl{Al}}{Cb{Hd}}}CM`}`{CHjBGj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{CHjJf}BGj}3{{CHjBGjJf}BGj}{{CHjEh}BGj}555{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CHj{Cb{Eh}}BGjCF`}BGj}{{CHjBGjc}BGj{{Hf{Aj}}}}={{CHj{f{Aj}}}BGj}>;0>>>>>>>{{CHjBGjEh}BGj}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6{CHjBGj}0?0`{{{f{BEn}}{f{AOh}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{Aj}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}DFb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{DFb{Cb{{f{ADd}}}}}{{Bd{ACjBb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFb}}}d}{{FhFh}DFb}{{{f{CnDFb}}{Ch{Cf}}}b}{{{f{CnDFb}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6`{{{f{{l{c}}}}}Fhn}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFd}}}DFd}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFd}}{f{DFd}}}d}{{{f{DFd}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFd}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFf}}{f{DFf}}}d}{{{f{DFf}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFf}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4{{IhIh}Ih}{{{f{{l{El}}}}Lf}{{Bd{bBb}}}}{{{f{{AJ`{Lf}}}}Lf}{{Bd{bBb}}}}```{{{f{B`}}CBh}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bj}}}B`}0{{{f{B`}}{f{Aj}}}B`}0`{{{f{c}}h}b{}}{{{f{DFh}}}{{f{ADf}}}}{{{f{CnDFh}}}{{Ch{Cf}}}}{{{f{CnDFh}}}{{f{CnADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFh}}}DFh}{{{f{c}}{f{Cne}}}b{}{}}{{{f{DFh}}}{{f{ADd}}}}{{}DFh}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CnDFh}}Fh}b}{{{f{DFh}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFh}}}Fh}{FhDFh}{{{f{CnDFh}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{DFh}}}{{Cb{{f{DFj}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DDb}}}DDb}{{{f{c}}{f{Cne}}}b{}{}}{{}DDb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DDb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DDb}}}Fh}{{{f{DDb}}}{{ADn{B@n}}}}{{{f{CNd}}Al{Cb{Fh}}d{Cb{{f{B@n}}}}FhFh{Cb{{f{BOn}}}}{Cb{Al}}Al{Cb{{f{C@`}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@nFhFh}}Bb}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{CNd}}{f{BOh}}}{{Bd{DDbBb}}}}1{{{f{c}}}Ol{}}4{{DDb{ADn{B@n}}}DDb}````{{AJb{f{c}}d}LfAIh}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}``{{{f{DFl}}}{{f{B`}}}}{{{f{BNb}}}{{Bd{{l{In}}Bb}}}}{{{f{BNb}}}{{Bd{{l{Ln}}Bb}}}}0{{{f{BNb}}}{{Bd{{l{Af}}Bb}}}}22112{{{f{BNb}}}{{Bd{{l{Lj}}Bb}}}}322{{{f{BNb}}{f{Aj}}}{{Bd{B`Bb}}}}{{{f{BNb}}Jf}{{Bd{{l{Jd}}Bb}}}}1445`{{{f{AHj}}FhFh}AHj}0`{{Fh{f{Cn{Fn{d}}}}}b}```11{{Fh{f{{An{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{AJfBb}}}}{{{f{Aj}}{f{{An{B`}}}}{f{{An{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Aj}}{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AJfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````88```{{{f{BKd}}}{{f{{l{A`}}}}}}{{{f{BKh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{BKh}}{f{Aj}}d}{{Bd{{l{Af}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{Af}}Bb}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{Af}}Bb}}}}{{{f{BKh}}{f{Aj}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKh}}{f{Aj}}{f{Ef}}}{{Bd{B`Bb}}}}5{{{f{BKh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKh}}{f{Aj}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{An{{f{{l{A`}}}}}}}}{f{Aj}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}{f{Aj}}{f{Aj}}}{{Bd{{l{A`}}Bb}}}}0{{{f{BKh}}{f{Aj}}{f{Aj}}Fh}{{Bd{{l{A`}}Bb}}}}1{{{f{BKh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BKh}}{f{{l{A`}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Aj}}}}}}}{{Dh{{f{Aj}}{f{Aj}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{Aj}}}}}}}{{Dh{{f{Aj}}{f{Aj}}}{{Df{c}}}}}}2{{{f{{l{A`}}}}{f{Aj}}d}{{l{A`}}}}{{{f{BKh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{BKh}}}{{l{El}}}}0{{{f{BKh}}}{{l{A`}}}}{{{f{BKh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}3{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}404040{{{f{BKh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{BKh}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}444````````{{eFhFh}{{DFn{Gb}}}{{Hf{Aj}}}{{Cj{}{{Cd{c}}}}}}{{eFhFh}{{DG`{Gb}}}{{Hf{{An{Al}}}}}{{Cj{}{{Cd{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Aj}}{Fn{{Ch{Cf}}}}{f{ADd}}}{{Bd{B`Bb}}}}{{{f{Aj}}{Fn{{Ch{Cf}}}}{f{ADd}}{Cb{{f{{DDl{EhEh}}}}}}}{{Bd{B`Bb}}}}{{B`B`}}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AbKn}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}}{{Cb{Fh}}}}0{{{f{BIj}}Ej}{{l{El}}}}{{{f{BIj}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bn}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Ch{Cf}}}}}}{{{f{BIj}}}{{f{ADf}}}}{{{f{CnBIj}}}{{f{CnADf}}}}{{{f{B`}}}{{l{j}}}}{{{f{CnBIj}}}{{f{Cn{l{c}}}}}Dd}{{{f{BIj}}}{{f{{l{c}}}}}Dd}{{{f{B`}}}{{f{BIj}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{CnBIj}}}{{Bd{FhBb}}}}{{{f{CnB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ah}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{En}}}}Bb}}}}{{{f{BIj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Af}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BIj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AK`}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ad}{{{f{BIj}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}{{{f{BIj}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBIj}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{CnB`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}}B`}{{{f{Ih}}}Ih}1{{{f{BIj}}}{{ADn{BIj}}}}{{{f{c}}{f{Cne}}}b{}{}}0{{{f{CnB`}}}b}{{{f{B`}}}{{Bd{{f{{Jb{J`In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JhJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JlJj}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}0{{{f{B`}}}f}1{Fh{{f{Cnc}}}{}}00{{B`c}{}{AbKn}}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{{B`B`}}{Fhb}00{{{f{BIj}}}B`}{{{f{BIj}}}{{f{Ef}}}}{{{f{B`}}}{{Bd{{f{{Jb{JnJd}}}}Bb}}}}{{{f{Ih}}{f{Ih}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{Aj}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMj}3{{{f{B`}}{f{Aj}}}}{{{f{B`}}c}{}AMj}366{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}IdFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ed}}}}Bb}}}}{{{f{BIj}}}{{Dl{N`}}}}{{{f{B`}}AFb}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{l{Af}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{Af}}}}d}{{Bd{B`Bb}}}}{{{f{Ih}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Eh}{cc{}}00{{{l{c}}}B`Dd}{{{Jb{J`In}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{JhJd}}}B`}{{{Jb{KbJd}}}B`}{{{f{Aj}}{f{{An{Id}}}}d}{{Bd{B`Bb}}}}{{{f{Aj}}{f{{An{Id}}}}{f{Ef}}d}{{Bd{B`Bb}}}}{{{f{Aj}}{Ch{Cf}}}{{Bd{B`Bb}}}}{{{f{Aj}}{Fn{{Ch{Cf}}}}{f{Ef}}}B`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cB`{{Gh{}{{Cd{Eh}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Al}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ll}}}}}}}}{cB`{{Gh{}{{Cd{{f{Ll}}}}}}}}{cB`{{Gh{}{{Cd{{f{Gb}}}}}}}}{cB`{{Gh{}{{Cd{Lb}}}}}}{cB`{{Gh{}{{Cd{{f{Il}}}}}}}}{cB`{{Gh{}{{Cd{{f{M`}}}}}}}}{cB`{{Gh{}{{Cd{{f{Mb}}}}}}}}{cB`{{Gh{}{{Cd{Ll}}}}}}{cB`{{Gh{}{{Cd{{Cb{M`}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lf}}}}}}}}{cB`{{Gh{}{{Cd{Mf}}}}}}{cB`{{Gh{}{{Cd{Il}}}}}}{cB`{{Gh{}{{Cd{{Cb{Il}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Mb}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Al}}}}}}}}{cB`{{Gh{}{{Cd{Ij}}}}}}{cB`{{Gh{}{{Cd{{f{Lb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Lf}}}}}}}}{cB`{{Gh{}{{Cd{Al}}}}}}{cB`{{Gh{}{{Cd{Lf}}}}}}{cB`{{Gh{}{{Cd{{f{Mf}}}}}}}}{cB`{{Gh{}{{Cd{M`}}}}}}{cB`{{Gh{}{{Cd{{Cb{d}}}}}}}}{cB`{{Gh{}{{Cd{{f{Aj}}}}}}}}{cB`{{Gh{}{{Cd{d}}}}}}{cB`{{Gh{}{{Cd{{f{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Mf}}}}}}}}{cB`{{Gh{}{{Cd{Gb}}}}}}{cB`{{Gh{}{{Cd{Mb}}}}}}{cB`{{Gh{}{{Cd{{f{d}}}}}}}}{{{f{Aj}}{Fn{Ij}}}B`}{{{f{Aj}}{Fn{Gb}}}B`}{{{f{Aj}}{Fn{Lf}}}B`}{{{f{Aj}}{Fn{Al}}}B`}{{{f{Aj}}{Fn{Mb}}}B`}{{{f{Aj}}{Fn{Ll}}}B`}{{{f{Aj}}{Fn{Il}}}B`}{{{f{Aj}}{Fn{Lb}}}B`}{{{f{Aj}}{Fn{Mf}}}B`}{{{f{Aj}}{Fn{M`}}}B`}{{{f{Aj}}Fh{f{Ef}}}B`}{{{f{B`}}FhFh}B`}{{{f{BIj}}Fh}{{Bd{IdBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}C`}{{{f{BIj}}Fh}{{Cb{{f{If}}}}}}{{{f{BIj}}FhFh}{{Cb{{f{If}}}}}}{{{f{BIj}}Fh}Id}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{Aj}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMj}3{{{f{B`}}{f{Aj}}}}12{{{f{BIj}}}d}{{{f{Ih}}{f{Cnc}}}bAGb}{{{f{B`}}{Cb{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Lj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Fh}00{ce{}{}}00{B`AOh}1{BA`B`}{B`B`}={{{f{B`}}}{{Bd{{l{Af}}Bb}}}}000{{{f{BIj}}}{{l{Af}}}}0{{}d}0{{{f{B`}}}Ih}{{{f{B`}}}DGb}{{{f{BIj}}}Fh}{{{f{BIj}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGj}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMj}{{{f{B`}}{f{Aj}}}}3021{{{f{B`}}}{{Bd{{Cb{c}}Bb}}}Kn}{{{f{BIj}}}{{Bd{L`Bb}}}}{{{f{BIj}}}{{Cb{Lb}}}}{{{f{B`}}}L`}1232{{{f{B`}}c}{}{AbKn}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AbKn}}?{{{f{BIj}}}{{Bd{FhBb}}}}{{{f{BIj}}}{{f{Aj}}}}{{{f{Aj}}c}B`{{Hf{{An{{f{{An{Al}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Eh}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{AJl}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{ANf}}}}}}}}{{{f{Aj}}{Lh{Gb}}}B`}{{{f{Aj}}c}B`{{Hf{{An{{Cb{M`}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Al}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Mb}}}}}}{{{f{Aj}}{Lh{Mb}}}B`}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Ll}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Dl{{An{Al}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{AJh}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{M`}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Dl{Aj}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{B`}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{{Dl{Aj}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Lb}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{ANd}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Mb}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{d}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Lf}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{{f{{An{Al}}}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{ANd}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{{Fn{Al}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{ANf}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{{f{Aj}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Lf}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Gb}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Il}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Eh}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Ll}}}}}}{{{f{Aj}}{f{B`}}}B`}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Al}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Fn{Al}}}}}}}}{{{f{Aj}}c}B`BA`}{{{f{Aj}}c}B`{{Hf{{An{Mf}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Ij}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Ij}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{{Dl{{An{Al}}}}}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Gb}}}}}}}}{{{f{Aj}}{Lh{Lf}}}B`}{{{f{Aj}}c}B`{{Hf{{An{{f{Aj}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{d}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{AJh}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Il}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{B`}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{{Cb{Mf}}}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Lb}}}}}}{{{f{Aj}}c}B`{{Hf{{An{Id}}}}}}{{{f{Aj}}c}B`{{Hf{{An{AJl}}}}}}{{{f{Aj}}{Lh{Il}}}B`}{{{f{Aj}}{f{Ef}}}B`}{{{f{BIj}}FhFh}B`}{{{f{Aj}}Fh}B`}{{{f{CnDGb}}}Cb}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMj}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}{f{Aj}}}{{Bd{{l{Af}}Bb}}}}3{{{f{B`}}{f{Aj}}}}2{{{f{B`}}c}{}AMj}{{{f{B`}}}{{Bd{{f{ABh}}Bb}}}}{{{f{BIj}}}Fh}`{{{f{B`}}}{{Ch{K`}}}}{{{f{B`}}}{{Bd{L`Bb}}}}{{{f{BIj}}LbMn}{{Bd{L`Bb}}}}{{{f{BIj}}}B`}{{B`c}{}{AbKn}}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{{{f{CnBIj}}{f{Aj}}}b}{{{f{CnB`}}{f{Aj}}}{{f{CnB`}}}}{{{f{B`}}{f{{An{Gb}}}}}{{Bd{B`Bb}}}}6{IhIh}{{{f{BIj}}{f{Dh}}Nb}{{Bd{B`Bb}}}}{{{f{B`}}Lbdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{CnB`}}Ih}b}{{{f{BIj}}Gb}B`}{{{f{CnBIj}}}b}{{{f{CnB`}}}b}{{{f{B`}}{Cb{Il}}}B`}{{{f{DGb}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BIj}}GbFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BIj}}Ej}{{Bd{B`Bb}}}}{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dl{Aj}}Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AJn}}Bb}}}}{{B`c}{}{AbKn}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}}{{Bd{cBb}}}Kn}{{{f{BIj}}}{{Bd{L`Bb}}}}{{{f{B`}}}{{Bd{L`Bb}}}}{{{f{B`}}{Cb{Fh}}}B`}{{{f{BIj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nh}}}}Ih}B`}{{{f{B`}}{f{{An{Nh}}}}}B`}{{{f{BIj}}{f{{An{Lf}}}}}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{An{Lf}}}}}B`}{{{f{B`}}{f{{An{Lf}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BIj}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{An{Lf}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jb{KbJd}}}}Bb}}}}{{{f{B`}}Fhd}{{Ch{Cf}}}}{{{f{B`}}{Cb{{f{Aj}}}}d}{{Bd{AOhBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dl{B`}}}}{{{f{c}}}Eh{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}00{{{Gf{{f{Aj}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AMn}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AMn}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{Aj}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}444{{{f{c}}}Ol{}}00{{{f{B`}}}{{Bd{{f{{l{Md}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ld}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{BIj}}}{{Bd{B`Bb}}}}?{{{f{BIj}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}`{{{f{BIj}}Al}{{Cb{Lb}}}}{{{f{BIj}}Al}{{Bd{L`Bb}}}}{ce{}{}}00{{B`{f{Aj}}}B`}{{{f{B`}}c}B`{AbKn}}{{{f{B`}}{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{E`{{f{B`}}{f{B`}}}{{Df{B`}}}}}}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNd}}c}{{Bd{B`Bb}}}Ad}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Ad}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{CHf}}}CHf}{{{f{c}}{f{Cne}}}b{}{}}{{}CHf}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CHf}}{f{CHf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHf}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CHf}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}3``{{{f{c}}h}b{}}{{{f{CnDn}}}{{f{CnB`}}}}{{{f{Dn}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{Dn}}}Dn}{{{f{c}}{f{Cne}}}b{}{}}{{{f{Dn}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{f{CnB`}}}Dn}{{{f{CnDn}}{f{Cn{Ch{Cf}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}5{{{f{CnDn}}{f{Cn{Ch{Cf}}}}e}c{}{{Dh{{f{Dn}}}{{Df{c}}}}}}","D":"AEJbLb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10397],[5,"ListType",1688,10398],[5,"ChunkedArray",17,10399],[10,"PolarsNumericType",1688,10398],[5,"StringType",1688,10398],[10,"Num",10400],[10,"ToPrimitive",10401],[5,"BooleanType",1688,10398],[5,"BinaryType",1688,10398],[1,"str"],[1,"u8"],[1,"slice"],[5,"Series",9919,10402],[6,"PolarsError",3100,10403],[6,"Result",10404],[10,"NumOpsDispatchInner",10320,10405],[5,"ObjectType",1688,10398],[6,"GroupsProxy",3473,10406],[10,"PolarsObject",1261,10407],[5,"FixedSizeListType",1688,10398],[5,"Settings",17,10399],[6,"Option",10408],[17,"Item"],[10,"Array",10409],[5,"Box",10410],[10,"Iterator",10411],[5,"AmortizedListIter",10412],[0,"mut"],[17,"IsNested"],[5,"FalseT",1688,10398],[10,"PolarsDataType",1688,10398],[17,"Output"],[10,"Fn",10413],[10,"Copy",10414],[6,"Cow",10415],[5,"UnstableSeries",10373,10416],[10,"FnMut",10413],[5,"Float32Type",1688,10398],[5,"Float64Type",1688,10398],[6,"DataType",1688,10417],[5,"String",10418],[5,"SortOptions",1383,10419],[5,"UInt32Type",1688,10398],[5,"BinaryOffsetType",1688,10398],[5,"SortMultipleOptions",1383,10419],[10,"PolarsIntegerType",1688,10398],[10,"NumOpsDispatchCheckedInner",10341,10420],[5,"Iter",10421],[1,"usize"],[1,"fn"],[5,"Map",10422],[5,"Vec",10423],[10,"DoubleEndedIterator",10424],[1,"i64"],[5,"OffsetsBuffer",10425],[1,"tuple"],[10,"IntoIterator",10426],[5,"Formatter",10427],[5,"Error",10427],[17,"Array"],[10,"FallibleIterator",10428],[10,"PolarsAsRef",10429],[5,"Bitmap",10430],[10,"AsRef",10431],[10,"Borrow",10432],[10,"Send",10414],[10,"Sync",10414],[10,"NoOption",10433],[10,"IntoParallelIterator",10434],[10,"TrustedLen",10435],[6,"AnyValue",1688,10436],[10,"PolarsObjectSafe",1261,10407],[6,"IsSorted",9919,10437],[1,"f32"],[1,"u64"],[5,"Int32Type",1688,10398],[5,"DateType",1688,10398],[5,"Logical",1688,10438],[5,"Int64Type",1688,10398],[6,"TimeUnit",1688,10439],[5,"DatetimeType",1688,10398],[5,"Int128Type",1688,10398],[5,"DecimalType",1688,10398],[5,"DurationType",1688,10398],[10,"ExactSizeIterator",10440],[5,"TimeType",1688,10398],[10,"PolarsFloatType",1688,10398],[10,"PolarsIterator",1189,10441],[5,"Iter",10442],[5,"IterNames",10442],[6,"ChunkedArrayLayout",17,10399],[10,"NumCast",10401],[5,"Scalar",1688,10436],[1,"f64"],[5,"UInt64Type",1688,10398],[1,"u32"],[5,"Range",10443],[5,"Int16Type",1688,10398],[1,"i16"],[5,"Int8Type",1688,10398],[1,"i8"],[1,"i32"],[5,"UInt16Type",1688,10398],[1,"u16"],[5,"UInt8Type",1688,10398],[10,"ParallelIterator",10434],[10,"IndexedParallelIterator",10434],[6,"QuantileInterpolOptions",3836,10444],[5,"Field",1688,10445],[5,"RollingOptionsFixedWindow",3836,10446],[10,"PolarsOpsNumericType",10447],[10,"Sized",10414],[5,"ChunkId",3836,10448],[17,"HasViews"],[5,"RandomState",10449],[5,"BytesHash",10450],[5,"OwnedRepr",10451],[1,"array"],[5,"Dim",10452],[5,"ArrayBase",10453],[5,"ViewRepr",10453],[6,"Either",10454],[5,"TypeId",10455],[5,"NullableIdxSize",3836,10448],[10,"FnOnce",10413],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",867,10456],[5,"AnonymousListBuilder",895,10457],[5,"AnonymousOwnedListBuilder",895,10457],[5,"ListBooleanChunkedBuilder",895,10458],[5,"ListPrimitiveChunkedBuilder",895,10459],[10,"ListBuilderTrait",895,10460],[10,"ChunkedBuilder",895,10461],[5,"ListStringChunkedBuilder",895,10462],[5,"ListBinaryChunkedBuilder",895,10462],[5,"ListNullChunkedBuilder",895,10463],[5,"BinViewChunkedBuilder",895,10464],[10,"ViewType",10465],[5,"BooleanChunkedBuilder",895,10466],[5,"NullChunkedBuilder",895,10467],[5,"PrimitiveChunkedBuilder",895,10468],[10,"Clone",10469],[5,"NullChunked",10470],[10,"NewChunkedArray",895,10461],[10,"ChunkedCollectInferIterExt",1169,10471],[10,"ChunkedCollectIterExt",1169,10471],[10,"Canonical",1183,10472],[10,"ChunkedCollectParIterExt",1185,10473],[10,"FromParIterWithDtype",1185,10473],[5,"BooleanArray",10474],[5,"BoolIterNoNull",1189,10441],[5,"FixedSizeListArray",10475],[5,"FixedSizeListIterNoNull",1189,10441],[5,"StructIter",1189,10441],[5,"SomeIterator",1189,10441],[5,"ObjectArray",1261,10407],[6,"ArrowDataType",1688,10476],[10,"Any",10455],[10,"Debug",10427],[5,"BitmapIter",10477],[6,"ZipValidity",10478],[5,"Arc",3836,10479],[5,"ObjectChunkedBuilder",1332,10480],[10,"AnonymousObjectBuilder",1355,10481],[5,"ObjectRegistry",1355,10481],[17,"FuncRet"],[10,"ChunkApply",1383,10482],[10,"ChunkApplyKernel",1383,10482],[10,"ChunkSort",1383,10482],[10,"ChunkUnique",1383,10482],[10,"ChunkCast",1383,10482],[6,"FillNullStrategy",1383,10482],[10,"ChunkCompare",9919,10482],[10,"ChunkExplode",1383,10482],[10,"ChunkFillNullValue",1383,10482],[10,"ChunkFilter",1383,10482],[10,"ChunkFull",1383,10482],[10,"ChunkFullNull",1383,10482],[10,"ChunkAnyValue",1383,10482],[10,"Hasher",10483],[10,"IsFirstDistinct",1383,10482],[10,"IsLastDistinct",1383,10482],[10,"ChunkAgg",1383,10482],[10,"ChunkQuantile",1383,10482],[10,"ChunkExpandAtIndex",1383,10482],[10,"Reinterpret",1383,10482],[10,"ChunkReverse",1383,10482],[10,"ChunkRollApply",1383,10482],[10,"ChunkSet",1383,10482],[10,"ChunkShift",1383,10482],[10,"ChunkShiftFill",1383,10482],[10,"SlicedArray",1383,10484],[10,"ChunkVar",1383,10482],[10,"ChunkTake",1383,10482],[10,"ChunkTakeUnchecked",1383,10482],[10,"ChunkBytes",1383,10482],[10,"ChunkZip",1383,10482],[10,"BinaryFnMut",1581,10485],[10,"StaticArray",1688,10486],[10,"TernaryFnMut",1581,10485],[10,"Error",10487],[10,"UnaryFnMut",1581,10485],[5,"PrimitiveArray",10488],[6,"SearchSortedSide",1621,10489],[5,"NoNull",3836,10490],[5,"RowsEncoded",10491],[5,"NaiveDateTime",10492],[6,"Tz",10493],[5,"NaiveTime",10494],[5,"StructChunked",1688,10495],[5,"CategoricalChunked",1688,10496],[5,"CategoricalChunkedBuilder",1688,10497],[10,"ArrayFromIter",1688,10498],[10,"ArrayFromIterDtype",1688,10498],[10,"AsRefDataType",1688,10417],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10499],[10,"From",10431],[5,"BinaryViewArrayGeneric",10465],[6,"RevMapping",1688,10500],[10,"CategoricalMergeOperation",1688,10501],[10,"LogicalType",1688,10438],[6,"CategoricalOrdering",1688,10500],[5,"OwnedObject",1688,10436],[6,"UnknownKind",1688,10417],[5,"CategoricalType",1688,10398],[6,"ArrowTimeUnit",1688],[10,"ArrayCollectIterExt",1688,10498],[5,"GlobalRevMapMerger",1688,10501],[10,"NumericNative",1688,10398],[10,"Into",10431],[5,"ArrowField",3836],[6,"IntegerType",10502],[6,"PrimitiveType",10503],[5,"TimeDelta",10504],[5,"NaiveDate",10505],[5,"LazyCompact",10506],[5,"SmartString",10507],[10,"GetAnyValue",1688,10436],[5,"CatIter",1688,10496],[6,"Ordering",10508],[5,"Duration",3836,10509],[1,"u128"],[6,"PhysicalType",10502],[5,"DataFrame",3191,10510],[5,"StringCacheHolder",3079,10511],[5,"ErrString",3100,10403],[6,"PolarsWarning",3100,10512],[6,"Error",10513],[5,"Utf8Error",10514],[6,"Error",10515],[5,"Error",10516],[5,"TryReserveError",10517],[5,"Error",10518],[10,"Display",10427],[5,"Schema",3836,10519],[10,"IntoSeries",9919,10520],[6,"NullStrategy",3191,10510],[6,"UniqueKeepStrategy",3191,10510],[5,"HashSet",10521],[5,"ArrowSchema",3836,10522],[5,"Row",3727,10523],[5,"GroupBy",3473,10524],[5,"DynamicGroupOptions",3836,10525],[5,"RangeFrom",10443],[5,"RangeFull",10443],[5,"RangeInclusive",10443],[5,"RangeTo",10443],[5,"RangeToInclusive",10443],[5,"RecordBatchIter",3191,10510],[5,"PhysRecordBatchIter",3191,10510],[5,"LazyFrame",3836,10526],[10,"IntoVec",3836,10490],[5,"MeltArgs",3444,10527],[5,"RollingGroupOptions",3836,10525],[10,"RangeBounds",10443],[6,"IndexOrder",3836,10528],[5,"StructArray",3836,10529],[5,"RecordBatchT",10530],[5,"GroupsIdx",3473,10406],[5,"UnitVec",10531],[6,"GroupByMethod",3473,10524],[5,"SlicedGroups",3473,10406],[5,"GroupsProxyParIter",3473,10406],[10,"UnindexedConsumer",10532],[6,"GroupsIndicator",3473,10406],[6,"IRAggExpr",10533],[10,"IntoGroupsProxy",3473,10534],[5,"Copied",10535],[5,"Zip",10536],[5,"GroupsProxyIter",3473,10406],[10,"IsFloat",10537],[10,"NativeType",10538],[10,"AggList",3711,10539],[10,"TakeExtremum",3711,10540],[10,"PhysicalAggExpr",3724,10541],[6,"AnyValueBuffer",3727,10542],[6,"AnyValueBufferTrusted",3727,10542],[5,"Node",10543],[6,"IR",10544],[5,"Arena",10543],[6,"AExpr",10533],[10,"JoinDispatch",3836,10545],[5,"JoinArgs",3836,10546],[10,"DfTake",3836,10547],[10,"DataFrameOps",3836,10548],[5,"CsvReader",3836,10549],[10,"PhysicalIoExpr",10550],[10,"MmapBytesReader",10551],[6,"Expr",3836,10552],[10,"LhsNumOps",10320,10405],[10,"NumOpsDispatch",10320,10405],[5,"LazyGroupBy",3836,10526],[10,"Allocator",10553],[5,"JoinBuilder",3836,10526],[10,"AnonymousScan",3836,10554],[5,"LazyJsonLineReader",3836,10555],[5,"ScanArgsAnonymous",3836,10556],[10,"FunctionOutputField",3836,10557],[5,"SpecialEq",3836,10557],[6,"VisitRecursion",10558],[6,"FunctionExpr",3836,10559],[10,"ArgAgg",3836,10560],[5,"ArrayNameSpace",3836,10561],[5,"ListNameSpace",3836,10562],[10,"SeriesTrait",9919,10437],[5,"FieldsMapper",3836,10563],[5,"IpcStreamReader",3836,10564],[10,"Read",10565],[10,"SeriesUdf",3836,10557],[10,"AsBinary",3836,10566],[10,"StringMethods",8936,10567],[5,"BorrowedFd",10568],[10,"AsFd",10568],[10,"AsList",3836,10569],[10,"AsRawFd",10570],[6,"AggExpr",3836,10552],[10,"SeriesSealed",3836,10571],[10,"AsString",3836,10572],[20,"MaybeUninit",10573],[10,"StringNameSpaceImpl",3836,10574],[5,"OwnedBatchedCsvReader",3836,10575],[5,"CsvWriter",3836,10576],[5,"BatchedWriter",10576],[10,"Write",10565],[5,"IpcWriter",3836,10577],[5,"BatchedWriter",10577],[5,"ParquetReader",3836,10578],[5,"BatchedParquetReader",3836,10579],[5,"ParquetWriter",3836,10580],[5,"BatchedWriter",10581],[5,"BatchedCsvReader",3836,10575],[5,"BinaryNameSpace",8919,10582],[6,"Operator",3836,10552],[10,"RenameAliasFn",3836,10557],[5,"UserDefinedFunction",3836,10583],[10,"SeriesBinaryUdf",3836,10557],[5,"InProcessQuery",3836,10584],[5,"HashMap",10585],[5,"CategoricalNameSpace",3836,10586],[10,"RoundSeries",3836,10587],[10,"TemporalMethods",9802,10588],[10,"NumOpsDispatchChecked",10341,10420],[5,"RollingOptionsDynamicWindow",3836,10589],[5,"Bounds",3836,10590],[5,"LazyCsvReader",3836,10591],[5,"ScanArgsIpc",3836,10592],[6,"ClosedWindow",3836,10593],[5,"ScanArgsParquet",3836,10594],[6,"Label",3836,10593],[6,"StartBy",3836,10593],[5,"Window",3836,10595],[5,"CsvReadOptions",3836,10596],[5,"CsvParseOptions",3836,10596],[6,"CsvEncoding",3836,10596],[6,"CommentPrefix",3836,10596],[6,"NullValues",3836,10596],[5,"CsvWriterOptions",3836,10597],[5,"SerializeOptions",3836,10597],[6,"QuoteStyle",3836,10597],[5,"IpcScanOptions",3836,10598],[5,"IpcWriterOptions",3836,10577],[6,"IpcCompression",3836,10577],[5,"JsonWriterOptions",3836,10599],[5,"ParquetOptions",3836,10600],[6,"ParallelStrategy",3836,10600],[6,"JoinCoalesce",3836,10546],[5,"ParquetWriteOptions",3836,10601],[6,"JoinType",3836,10546],[6,"ParquetCompression",3836,10601],[6,"JoinValidation",3836,10546],[5,"GzipLevel",3836,10601],[5,"AsOfOptions",3836,10602],[5,"BrotliLevel",3836,10601],[6,"AsofStrategy",3836,10602],[5,"ZstdLevel",3836,10601],[6,"InterpolationMethod",3836,10603],[6,"ClosedInterval",3836,10604],[6,"RankMethod",3836,10605],[5,"RankOptions",3836,10605],[6,"DslPlan",3836,10606],[5,"When",3836,10607],[5,"Then",3836,10607],[5,"ChainedWhen",3836,10607],[5,"ChainedThen",3836,10607],[6,"Excluded",3836,10552],[6,"BooleanFunction",3836,10608],[6,"CategoricalFunction",3836,10609],[6,"PowFunction",3836,10610],[6,"StringFunction",3836,10611],[5,"DatetimeArgs",3836,10612],[5,"DurationArgs",3836,10612],[5,"RollingCovOptions",3836,10613],[5,"StrptimeOptions",3836,10613],[5,"JoinOptions",3836,10613],[6,"WindowType",3836,10613],[6,"WindowMapping",3836,10613],[5,"OptState",3836,10614],[6,"LiteralValue",3836,10615],[5,"AnonymousScanOptions",3836,10616],[5,"UnionArgs",3836,10616],[5,"FileMetaData",3836,10617],[5,"RollingVarParams",3836,10618],[5,"RollingQuantileParams",3836,10618],[6,"NonExistent",3836,10619],[10,"LazyFileListReader",3836,10620],[5,"CloudOptions",9071,10621],[10,"Ord",10508],[6,"ColumnOrder",10622],[10,"BinaryNameSpaceImpl",3836,10623],[5,"PathBuf",10624],[5,"IpcStreamWriterOption",3836,10564],[10,"SerWriter",3836,10625],[5,"IpcWriterOption",3836,10577],[10,"CrossJoin",3836,10626],[10,"ExprEvalExtension",3836,10627],[10,"DateMethods",8936,10628],[10,"DatetimeMethods",8936,10629],[10,"DurationMethods",8936,10630],[10,"BinaryUdfOutputField",3836,10557],[10,"Default",10631],[5,"RowGroupMetaData",10632],[5,"ParquetStatistics",3836],[6,"NullBehavior",10347,10633],[5,"Weak",10479],[5,"DateLikeNameSpace",9427,10634],[1,"char"],[10,"FromIterator",10426],[10,"PartialEq",10508],[10,"Scalar",10635],[10,"ListNameSpaceExtension",3836,10636],[10,"Command",10637],[5,"StructNameSpace",3836,10638],[10,"SerReader",3836,10625],[5,"IpcReader",3836,10598],[5,"IpcStreamWriter",3836,10564],[5,"JsonWriter",3836,10599],[5,"JsonReader",3836,10599],[5,"JsonLineReader",3836,10639],[5,"File",10640],[10,"UdfSchema",3836,10641],[6,"ArrayFunction",10642],[6,"BinaryFunction",10643],[6,"ListFunction",10644],[6,"StructFunction",10645],[6,"RangeFunction",10646],[6,"TemporalFunction",10647],[5,"CString",10648],[5,"CStr",10649],[1,"never"],[5,"OsStr",10650],[5,"Path",10624],[5,"OsString",10650],[10,"ToOwned",10415],[5,"MutableStatistics",10651],[5,"MutableStructArray",10652],[5,"GrowableStruct",10653],[10,"FromData",9421,10654],[5,"Buffer",10655],[10,"FromDataUtf8",9421,10654],[10,"FromDataBinary",9421,10654],[5,"ListArray",10656],[6,"Ambiguous",3836,10619],[10,"NamedFromOwned",3836,10657],[10,"DataFrameJoinOps",3836,10658],[5,"FunctionOptions",10616],[10,"PartialOrd",10508],[6,"Context",10606],[10,"IndexOfSchema",3836,10519],[5,"BoundsIter",3836,10595],[6,"ReaderBytes",10551],[10,"PolarsTemporalGroupby",3836,10525],[10,"PolarsArray",3836,10659],[10,"Hash",10483],[10,"SeriesJoin",3836,10660],[10,"TimeMethods",8936,10661],[10,"IntoListNameSpace",3836,10636],[5,"FileMetaData",10662],[10,"SeriesMethods",3836,10663],[5,"StructValueIter",10664],[10,"AsofJoin",3836,10602],[10,"AsofJoinBy",3836,10665],[10,"ListNameSpaceImpl",3836,10666],[5,"ExprNameNameSpace",3836,10667],[5,"KeyValue",10662],[10,"IntoLazy",3836,10526],[10,"Literal",3836,10615],[5,"Null",3836,10615],[5,"RowIndex",10668],[10,"ChunkAggSeries",3836,10669],[10,"QuantileAggSeries",3836,10670],[10,"PolarsMonthEnd",3836,10671],[10,"PolarsMonthStart",3836,10672],[10,"IndexToUsize",3836,10673],[10,"NamedFrom",3836,10657],[6,"RowGroupFetcher",10579],[5,"SplitNChars",3836,10674],[5,"Pin",10675],[5,"Request",10487],[10,"SeriesRank",3836,10605],[5,"BorrowedCursor",10676],[10,"VarInt",10677],[5,"IoSliceMut",10565],[10,"SeriesOpsTime",8936,10678],[10,"PolarsRound",3836,10679],[5,"AnonymousScanArgs",3836,10554],[10,"ChunkedSet",3836,10447],[5,"SchemaDescriptor",10680],[6,"SeekFrom",10565],[10,"VarAggSeries",3836,10681],[5,"StringNameSpace",10682],[10,"TakeChunked",3836,10547],[5,"IRPlan",10544],[10,"ToDummies",3836,10683],[10,"PolarsTruncate",3836,10684],[5,"AllocError",10553],[5,"RwLock",10685],[5,"SchemaInferenceResult",9772,10686],[10,"PolarsUpsample",3836,10687],[10,"VecHash",3836,10688],[5,"NonZero",10689],[6,"JsonFormat",3836,10599],[5,"BTreeMap",10690],[5,"IoSlice",10565],[10,"ArrayNameSpace",8900,10691],[10,"AsArray",8900,10692],[10,"AsString",9003,10567],[6,"Pattern",9003,10693],[5,"DatetimeInfer",9041,10694],[10,"StrpTimeParser",9041,10694],[17,"Error"],[10,"TryFromWithUnit",9041,10694],[6,"CloudType",9071,10621],[5,"AnonymousBuilder",9482,10695],[6,"RollingFunction",9671,10696],[6,"RollingFunctionBy",9700,10697],[5,"MutableNullArray",9742,10698],[5,"MutableBitmap",10699],[10,"AsSeries",9802,10588],[5,"Utf8Array",10700],[5,"BinaryArray",10701],[5,"SeriesIter",9919,10702],[10,"InitHashMaps",1688],[10,"InitHashMaps2",1688],[5,"TrueT",1688],[15,"IO",8834],[15,"Context",8834],[15,"Count",8828],[15,"Slice",8829],[8,"AllowedOptimizations",3836],[10,"ListFromIter",3836],[15,"Quantile",8712],[15,"Min",8712],[15,"Max",8712],[15,"IsBetween",9627],[15,"Any",9627],[15,"All",9627],[15,"GroupBy",8722],[15,"Union",8722],[15,"Sort",8722],[15,"Cache",8722],[15,"ExtContext",8722],[15,"DataFrameScan",8722],[15,"Select",8722],[15,"HStack",8722],[15,"Scan",8722],[15,"MapFunction",8722],[15,"Filter",8722],[15,"Distinct",8722],[15,"Slice",8722],[15,"Sink",8722],[15,"Join",8722],[15,"HConcat",8722],[15,"SortBy",8773],[15,"Filter",8773],[15,"Cast",8773],[15,"Sort",8773],[15,"Gather",8773],[15,"RenameAlias",8773],[15,"Ternary",8773],[15,"Function",8773],[15,"Window",8773],[15,"AnonymousFunction",8773],[15,"Slice",8773],[15,"BinaryExpr",8773],[15,"Round",9630],[15,"RoundSF",9630],[15,"Clip",9630],[15,"BackwardFill",9630],[15,"ForwardFill",9630],[15,"Random",9630],[15,"GatherEvery",9630],[15,"ValueCounts",9630],[15,"Rank",9630],[15,"Replace",9630],[15,"CumCount",9630],[15,"CumSum",9630],[15,"CumProd",9630],[15,"CumMin",9630],[15,"CumMax",9630],[15,"Range",8831],[15,"ConcatHorizontal",9651],[15,"ConcatVertical",9651],[15,"ExtractGroups",9651],[15,"SplitExact",9651],[15,"Contains",9651],[15,"Find",9651],[15,"Replace",9651],[10,"Utf8FromIter",9915],[10,"BinaryFromIter",9915]],"r":[[1,10703],[2,10703],[3,10703],[4,10703],[6,10511],[7,10703],[8,10703],[9,10703],[13,10703],[14,10703],[16,10511],[17,10399],[18,10399],[19,10399],[25,10399],[118,10399],[151,10399],[152,10399],[178,10399],[179,10399],[240,10399],[305,10399],[454,10399],[594,10399],[598,10399],[736,10399],[867,10456],[895,10457],[896,10457],[897,10464],[898,10464],[899,10466],[900,10461],[901,10462],[902,10458],[903,10460],[904,10463],[905,10459],[906,10462],[907,10461],[908,10467],[909,10468],[910,10464],[1043,10461],[1059,10460],[1087,10461],[1152,10457],[1153,10457],[1154,10462],[1155,10458],[1156,10460],[1157,10463],[1158,10459],[1159,10462],[1167,10460],[1169,10471],[1170,10471],[1183,10472],[1185,10473],[1186,10473],[1189,10441],[1190,10441],[1191,10441],[1192,10441],[1193,10441],[1239,10441],[1259,10704],[1260,10704],[1261,10407],[1262,10407],[1263,10407],[1264,10407],[1275,10407],[1303,10407],[1332,10480],[1355,10481],[1356,10481],[1357,10481],[1358,10481],[1370,10481],[1371,10481],[1372,10481],[1375,10481],[1377,10481],[1384,10482],[1385,10482],[1386,10482],[1387,10482],[1388,10482],[1389,10482],[1390,10482],[1391,10482],[1392,10482],[1393,10482],[1394,10482],[1395,10482],[1396,10482],[1397,10482],[1398,10482],[1399,10482],[1400,10482],[1401,10482],[1402,10482],[1403,10482],[1404,10482],[1405,10482],[1406,10482],[1407,10482],[1408,10482],[1409,10482],[1410,10482],[1413,10482],[1414,10482],[1422,10482],[1423,10484],[1424,10419],[1425,10419],[1438,10482],[1479,10482],[1482,10482],[1491,10482],[1494,10482],[1537,10482],[1543,10482],[1579,10482],[1581,10485],[1585,10485],[1586,10485],[1587,10485],[1588,10485],[1589,10485],[1590,10485],[1591,10485],[1592,10485],[1593,10485],[1594,10485],[1595,10485],[1596,10485],[1597,10485],[1598,10485],[1599,10485],[1600,10485],[1601,10485],[1602,10485],[1603,10485],[1604,10485],[1605,10485],[1606,10485],[1607,10485],[1608,10485],[1609,10485],[1610,10485],[1611,10485],[1612,10485],[1613,10485],[1614,10485],[1615,10485],[1616,10705],[1617,10705],[1618,10706],[1619,10706],[1620,10706],[1624,10489],[1626,10489],[1644,10489],[1650,10484],[1651,10707],[1652,10707],[1653,10707],[1654,10707],[1657,10708],[1658,10709],[1659,10709],[1660,10709],[1661,10709],[1662,10709],[1663,10709],[1664,10709],[1665,10484],[1666,10419],[1667,10419],[1678,10710],[1679,10711],[1680,10711],[1681,10711],[1682,10710],[1683,10710],[1684,10712],[1685,10711],[1686,10711],[1687,10711],[1689,10436],[1693,10398],[1694,10498],[1695,10498],[1696,10498],[1697,10476],[1699,10417],[1703,10398],[1705,10398],[1706,10398],[1708,10398],[1713,10398],[1714,10398],[1715,10496],[1718,10496],[1719,10497],[1720,10501],[1721,10500],[1722,10398],[1723,10417],[1724,10417],[1725,10417],[1730,10713],[1731,10398],[1734,10714],[1735,10398],[1740,10715],[1741,10398],[1746,10716],[1747,10398],[1751,10398],[1752,10445],[1753,10445],[1756,10398],[1762,10398],[1763,10398],[1767,10398],[1768,10398],[1769,10436],[1771,10501],[1775,10717],[1776,10673],[1777,10717],[1778,10717],[1779,10718],[1780,10717],[1782,10398],[1783,10398],[1787,10398],[1788,10398],[1792,10398],[1793,10398],[1797,10398],[1798,10398],[1802,10398],[1803,10398],[1813,10398],[1814,10398],[1816,10438],[1817,10438],[1829,10398],[1832,10398],[1834,10398],[1835,10436],[1838,10718],[1839,10718],[1840,10717],[1841,10718],[1842,10718],[1843,10398],[1844,10398],[1845,10398],[1846,10398],[1848,10500],[1849,10436],[1851,10486],[1855,10398],[1857,10398],[1861,10495],[1867,10719],[1868,10398],[1869,10439],[1870,10417],[1873,10398],[1877,10398],[1878,10398],[1882,10398],[1883,10398],[1887,10398],[1888,10398],[1892,10398],[1893,10398],[1897,10417],[2066,10501],[2078,10438],[2167,10417],[2688,10501],[2689,10501],[2692,10417],[3056,10496],[3057,10496],[3058,10497],[3059,10501],[3060,10500],[3062,10501],[3066,10500],[3067,10501],[3069,10501],[3070,10501],[3071,10496],[3072,10496],[3073,10500],[3078,10500],[3079,10511],[3085,10511],[3088,10511],[3096,10511],[3105,10403],[3111,10403],[3112,10403],[3113,10512],[3127,10403],[3140,10403],[3156,10512],[3163,10403],[3164,10403],[3165,10403],[3166,10403],[3167,10403],[3168,10512],[3169,10403],[3188,10720],[3189,10720],[3190,10720],[3192,10510],[3197,10510],[3198,10510],[3200,10510],[3201,10510],[3268,10510],[3302,10510],[3365,10510],[3444,10527],[3473,10406],[3476,10524],[3477,10524],[3479,10406],[3480,10406],[3481,10406],[3482,10406],[3483,10406],[3484,10406],[3487,10406],[3489,10534],[3501,10406],[3510,10524],[3577,10524],[3587,10524],[3711,10539],[3712,10540],[3713,10540],[3714,10540],[3715,10540],[3716,10540],[3717,10540],[3718,10540],[3719,10540],[3720,10540],[3724,10541],[3729,10542],[3730,10542],[3750,10523],[3781,10523],[3802,10523],[3816,10523],[3817,10523],[3818,10523],[3834,10721],[3835,10721],[3838,10552],[3845,10614],[3847,10619],[3850,10554],[3851,10554],[3852,10616],[3858,10436],[3859,10479],[3860,10560],[3863,10456],[3867,10398],[3868,10498],[3870,10498],[3871,10498],[3872,10561],[3873,10409],[3874,10476],[3876,10522],[3878,10566],[3879,10569],[3881,10602],[3882,10417],[3883,10572],[3885,10602],[3886,10665],[3887,10602],[3890,10722],[3895,10575],[3896,10579],[3901,10398],[3902,10464],[3905,10623],[3907,10398],[3908,10398],[3910,10398],[3911,10557],[3918,10398],[3919,10466],[3920,10608],[3921,10398],[3922,10406],[3925,10590],[3926,10595],[3928,10601],[3932,10496],[3936,10496],[3937,10497],[3938,10609],[3939,10501],[3940,10586],[3941,10500],[3942,10398],[3945,10607],[3946,10607],[3947,10482],[3948,10669],[3949,10482],[3950,10482],[3951,10482],[3952,10482],[3953,10482],[3954,10482],[3955,10482],[3956,10482],[3957,10482],[3958,10482],[3959,10482],[3960,10482],[3961,10448],[3962,10546],[3963,10482],[3964,10482],[3965,10482],[3966,10482],[3967,10482],[3968,10482],[3969,10482],[3970,10482],[3971,10482],[3972,10482],[3973,10482],[3974,10482],[3975,10399],[3976,10461],[3977,10471],[3978,10471],[3979,10447],[3981,10604],[3982,10593],[3989,10596],[4000,10626],[4001,10596],[4002,10596],[4003,10596],[4004,10549],[4005,10576],[4006,10597],[4012,10417],[4013,10417],[4014,10510],[4015,10658],[4016,10548],[4020,10417],[4026,10713],[4027,10628],[4029,10398],[4032,10612],[4033,10714],[4034,10629],[4035,10398],[4040,10715],[4041,10398],[4043,10547],[4050,10606],[4054,10509],[4059,10612],[4060,10716],[4061,10630],[4062,10398],[4063,10618],[4064,10525],[4072,10552],[4076,10552],[4077,10627],[4078,10667],[4085,10722],[4086,10722],[4087,10398],[4088,10445],[4090,10445],[4091,10563],[4092,10667],[4093,10617],[4094,10723],[4096,10482],[4097,10482],[4107,10398],[4115,10398],[4116,10398],[4121,10398],[4122,10398],[4130,10654],[4131,10654],[4132,10654],[4136,10559],[4137,10557],[4141,10436],[4143,10557],[4145,10501],[4146,10524],[4148,10524],[4150,10406],[4151,10406],[4152,10406],[4153,10406],[4154,10406],[4155,10406],[4160,10601],[4169,10717],[4170,10722],[4174,10673],[4175,10717],[4176,10406],[4177,10448],[4178,10717],[4181,10584],[4183,10519],[4184,10528],[4185,10673],[4186,10718],[4187,10717],[4189,10546],[4192,10398],[4193,10398],[4198,10398],[4199,10398],[4204,10398],[4205,10398],[4210,10398],[4211,10398],[4216,10398],[4217,10398],[4220,10603],[4222,10534],[4223,10526],[4224,10636],[4225,10520],[4226,10490],[4228,10577],[4229,10598],[4230,10598],[4231,10564],[4232,10564],[4233,10564],[4234,10577],[4235,10577],[4236,10577],[4239,10482],[4243,10482],[4253,10546],[4254,10526],[4255,10546],[4256,10545],[4257,10613],[4259,10546],[4260,10546],[4262,10599],[4263,10639],[4265,10599],[4266,10599],[4267,10599],[4271,10593],[4273,10724],[4275,10724],[4276,10724],[4282,10591],[4283,10620],[4284,10526],[4285,10526],[4286,10555],[4292,10546],[4297,10405],[4303,10462],[4304,10458],[4305,10460],[4306,10398],[4308,10659],[4309,10562],[4310,10636],[4311,10666],[4312,10459],[4313,10462],[4314,10398],[4315,10615],[4317,10615],[4319,10438],[4322,10438],[4347,10527],[4365,10615],[4370,10657],[4371,10657],[4383,10461],[4385,10490],[4386,10619],[4396,10615],[4404,10596],[4405,10448],[4406,10448],[4407,10405],[4408,10420],[4409,10398],[4412,10398],[4414,10398],[4418,10552],[4419,10614],[4426,10575],[4427,10436],[4428,10600],[4429,10601],[4430,10600],[4431,10578],[4433,10601],[4434,10580],[4435,10620],[4438,10718],[4439,10718],[4440,10717],[4441,10718],[4442,10718],[4444,10659],[4445,10398],[4446,10403],[4447,10398],[4448,10398],[4449,10441],[4450,10671],[4451,10672],[4452,10398],[4453,10407],[4454,10403],[4455,10679],[4456,10525],[4457,10684],[4459,10687],[4461,10610],[4462,10468],[4465,10670],[4466,10444],[4467,10597],[4475,10605],[4476,10605],[4477,10482],[4479,10557],[4484,10500],[4492,10613],[4495,10525],[4496,10589],[4497,10446],[4498,10618],[4499,10725],[4500,10618],[4503,10587],[4504,10726],[4507,10436],[4510,10556],[4511,10592],[4512,10594],[4513,10519],[4516,10519],[4517,10489],[4521,10625],[4522,10625],[4523,10597],[4524,10402],[4526,10557],[4527,10660],[4528,10663],[4529,10678],[4530,10605],[4531,10571],[4532,10437],[4533,10557],[4546,10484],[4547,10406],[4552,10419],[4553,10419],[4554,10557],[4558,10674],[4560,10593],[4562,10486],[4570,10511],[4572,10398],[4573,10464],[4575,10611],[4576,10567],[4577,10574],[4579,10398],[4586,10613],[4590,10529],[4591,10495],[4594,10638],[4602,10547],[4604,10588],[4606,10607],[4613,10719],[4614,10661],[4615,10398],[4616,10439],[4617,10417],[4621,10683],[4627,10398],[4633,10398],[4634,10398],[4639,10398],[4640,10398],[4645,10398],[4646,10398],[4651,10398],[4652,10398],[4653,10641],[4657,10616],[4659,10510],[4662,10417],[4665,10583],[4674,10681],[4675,10688],[4677,10607],[4679,10595],[4682,10613],[4683,10613],[4690,10601],[4778,10727],[4783,10727],[4792,10728],[4802,10524],[4804,10729],[4806,10730],[4818,10730],[4829,10731],[4835,10732],[4838,10733],[4851,10734],[4856,10734],[4859,10482],[4865,10735],[4890,10736],[4894,10737],[4898,10738],[4906,10732],[4908,10607],[5158,10501],[5163,10737],[5171,10732],[5179,10722],[5180,10722],[5181,10722],[5189,10739],[5192,10740],[5194,10740],[5196,10740],[5376,10741],[5384,10730],[5388,10742],[5389,10729],[5391,10743],[5403,10729],[5414,10743],[5416,10744],[5419,10743],[5420,10743],[5421,10744],[5422,10744],[5431,10659],[5432,10745],[5437,10746],[5438,10417],[5446,10747],[5448,10730],[5449,10747],[5451,10747],[5453,10747],[5455,10730],[5456,10747],[5463,10703],[5465,10733],[5466,10735],[5467,10612],[5469,10733],[5470,10733],[5471,10711],[5472,10711],[5473,10711],[5536,10659],[5537,10545],[5788,10651],[5790,10703],[5792,10748],[5929,10749],[5930,10732],[5935,10729],[5936,10729],[5938,10612],[5946,10509],[5947,10509],[6195,10524],[6221,10482],[6258,10732],[6262,10659],[6265,10482],[6270,10750],[6362,10524],[6366,10730],[6370,10744],[6583,10482],[6591,10732],[6593,10482],[6633,10722],[6635,10722],[6646,10593],[6647,10593],[6723,10751],[6735,10752],[6736,10752],[6738,10753],[6746,10729],[6752,10673],[6753,10686],[6883,10733],[6884,10733],[6886,10754],[6887,10603],[6889,10754],[6890,10755],[7029,10604],[7031,10722],[7032,10756],[7039,10757],[7043,10758],[7046,10759],[7054,10737],[7057,10737],[7063,10745],[7099,10732],[7114,10732],[7126,10615],[7172,10501],[7173,10501],[7178,10731],[7189,10732],[7192,10732],[7200,10760],[7201,10722],[7202,10737],[7211,10737],[7217,10737],[7231,10417],[7242,10737],[7262,10735],[7302,10735],[7312,10761],[7313,10762],[7361,10763],[7382,10737],[7386,10732],[7387,10659],[7440,10403],[7441,10403],[7442,10403],[7443,10403],[7450,10658],[7460,10737],[7491,10730],[7502,10764],[7503,10765],[7505,10766],[7512,10752],[7515,10722],[7609,10767],[7611,10482],[7624,10739],[7662,10659],[7680,10482],[7694,10674],[7696,10674],[7713,10751],[7727,10735],[7728,10768],[7730,10768],[7732,10768],[7734,10768],[7736,10768],[7748,10737],[7771,10607],[7775,10733],[8322,10732],[8343,10659],[8500,10607],[8710,10482],[8852,10539],[8853,10540],[8854,10540],[8855,10540],[8856,10540],[8857,10540],[8858,10540],[8859,10540],[8860,10540],[8861,10540],[8865,10485],[8869,10485],[8870,10485],[8871,10485],[8872,10485],[8873,10485],[8874,10485],[8875,10485],[8876,10485],[8877,10485],[8878,10485],[8879,10485],[8880,10485],[8881,10485],[8882,10485],[8883,10485],[8884,10485],[8885,10485],[8886,10485],[8887,10485],[8888,10485],[8889,10485],[8890,10485],[8891,10485],[8892,10485],[8893,10485],[8894,10485],[8895,10485],[8896,10485],[8897,10485],[8898,10485],[8899,10485],[8900,10691],[8901,10692],[8919,10582],[8935,10586],[8936,10628],[8937,10629],[8938,10630],[8939,10589],[8940,10678],[8941,10567],[8942,10661],[8995,10769],[9003,10567],[9009,10693],[9010,10567],[9032,10567],[9041,10694],[9043,10694],[9044,10694],[9054,10694],[9073,10621],[9074,10621],[9108,10770],[9120,10621],[9121,10621],[9127,10436],[9131,10398],[9132,10498],[9133,10498],[9134,10498],[9135,10476],[9137,10417],[9141,10398],[9143,10398],[9144,10398],[9146,10398],[9151,10398],[9152,10398],[9153,10496],[9156,10496],[9157,10497],[9158,10501],[9159,10500],[9160,10398],[9161,10417],[9162,10417],[9163,10417],[9168,10713],[9169,10398],[9172,10714],[9173,10398],[9178,10715],[9179,10398],[9184,10716],[9185,10398],[9189,10398],[9190,10445],[9191,10445],[9194,10398],[9200,10398],[9201,10398],[9205,10398],[9206,10398],[9207,10436],[9209,10501],[9213,10717],[9214,10673],[9215,10717],[9216,10717],[9217,10718],[9218,10717],[9220,10398],[9221,10398],[9225,10398],[9226,10398],[9230,10398],[9231,10398],[9235,10398],[9236,10398],[9240,10398],[9241,10398],[9251,10398],[9252,10398],[9254,10438],[9255,10438],[9267,10398],[9270,10398],[9272,10398],[9273,10436],[9276,10718],[9277,10718],[9278,10717],[9279,10718],[9280,10718],[9281,10398],[9282,10398],[9283,10398],[9284,10398],[9286,10500],[9287,10436],[9289,10486],[9293,10398],[9295,10398],[9299,10495],[9305,10719],[9306,10398],[9307,10439],[9308,10417],[9311,10398],[9315,10398],[9316,10398],[9320,10398],[9321,10398],[9325,10398],[9326,10398],[9330,10398],[9331,10398],[9335,10417],[9348,10501],[9350,10438],[9355,10417],[9371,10501],[9372,10501],[9373,10417],[9391,10496],[9392,10496],[9393,10497],[9394,10501],[9395,10500],[9397,10501],[9401,10500],[9402,10501],[9404,10501],[9405,10501],[9406,10496],[9407,10496],[9408,10500],[9413,10500],[9414,10511],[9415,10511],[9416,10511],[9417,10511],[9418,10752],[9419,10752],[9420,10752],[9421,10654],[9422,10654],[9423,10654],[9427,10634],[9479,10541],[9482,10695],[9502,10705],[9503,10705],[9517,10608],[9519,10609],[9548,10559],[9579,10610],[9604,10611],[9623,10559],[9624,10559],[9625,10559],[9626,10559],[9665,10609],[9669,10610],[9675,10696],[9704,10697],[9729,10706],[9730,10706],[9731,10706],[9732,10603],[9735,10603],[9736,10755],[9737,10771],[9738,10772],[9739,10772],[9740,10772],[9741,10772],[9742,10698],[9772,10686],[9786,10686],[9799,10489],[9800,10489],[9801,10489],[9802,10588],[9803,10588],[9824,10484],[9827,10484],[9828,10707],[9829,10707],[9830,10707],[9831,10707],[9834,10708],[9835,10709],[9836,10709],[9837,10709],[9838,10709],[9839,10709],[9840,10709],[9841,10709],[9842,10484],[9843,10419],[9844,10419],[9855,10572],[9856,10674],[9857,10574],[9876,10751],[9884,10674],[9886,10674],[9888,10751],[9895,10768],[9897,10768],[9899,10768],[9901,10768],[9903,10768],[9909,10583],[9915,10773],[9916,10773],[9920,10482],[9922,10520],[9923,10437],[9926,10402],[9927,10702],[9928,10702],[9929,10437],[9943,10402],[10118,10402],[10233,10402],[10311,10402],[10320,10405],[10321,10405],[10322,10405],[10324,10405],[10328,10405],[10341,10420],[10342,10420],[10349,10633],[10373,10416],[10374,10416]],"b":[[31,"impl-Add-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[35,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[38,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[39,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[40,"impl-Add-for-ChunkedArray%3CT%3E"],[41,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[42,"impl-Add-for-ChunkedArray%3CStringType%3E"],[44,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[46,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[49,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[50,"impl-AggList-for-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CFixedSizeListType%3E"],[57,"impl-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[62,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[63,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[65,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[68,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFixedSizeListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[84,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkedArray%3CListType%3E"],[89,"impl-ChunkedArray%3CFixedSizeListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[91,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[95,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[98,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[101,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[103,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[104,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[111,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[120,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[121,"impl-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[138,"impl-Settings"],[139,"impl-Flags-for-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[193,"impl-Div-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[195,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[196,"impl-Div-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[207,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[212,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[213,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[214,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[217,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[220,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[222,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[228,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[229,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[231,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[232,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[233,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[234,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[236,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[237,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[238,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[241,"impl-Debug-for-ChunkedArray%3CT%3E"],[242,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[243,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[244,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[245,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[246,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-Debug-for-ChunkedArray%3CListType%3E"],[248,"impl-Octal-for-Settings"],[249,"impl-UpperHex-for-Settings"],[250,"impl-Debug-for-Settings"],[251,"impl-Binary-for-Settings"],[252,"impl-LowerHex-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[275,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[276,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[279,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[280,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[281,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[287,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[288,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[291,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[292,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[293,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[294,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[296,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[297,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[298,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[299,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[301,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[302,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[304,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[307,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[308,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[309,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[310,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[312,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[317,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[318,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[320,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[321,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[322,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[325,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[326,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[327,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[330,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[331,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[332,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[333,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[334,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[336,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[347,"impl-ChunkedArray%3CFixedSizeListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[370,"impl-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[378,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[386,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[388,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[394,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[396,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[397,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[398,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[399,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[400,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[401,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[404,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[405,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[412,"impl-ChunkedArray%3CFixedSizeListType%3E"],[413,"impl-ChunkedArray%3CListType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[432,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[436,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[472,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[473,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[475,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[476,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[477,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[482,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[484,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[485,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkedArray%3CBooleanType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkedArray%3CBooleanType%3E"],[495,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[497,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[499,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[500,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[502,"impl-ChunkedArray%3CBooleanType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[505,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[506,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[507,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[508,"impl-ChunkedArray%3CT%3E"],[509,"impl-ChunkedArray%3CBooleanType%3E"],[510,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[512,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[513,"impl-Mul-for-ChunkedArray%3CT%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[516,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[519,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[520,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[521,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[522,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[530,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[535,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[539,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[541,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[542,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[543,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[544,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[545,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[546,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[547,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[548,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[550,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[551,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[552,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[553,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[554,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[555,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[556,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[557,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[558,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[560,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[561,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[562,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[564,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[565,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[567,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[573,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[581,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[583,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[584,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[586,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[591,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[592,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[596,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[597,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[599,"impl-ChunkedArray%3CListType%3E"],[600,"impl-ChunkedArray%3CStringType%3E"],[601,"impl-ChunkedArray%3CStringType%3E"],[602,"impl-ChunkedArray%3CListType%3E"],[605,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[607,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[609,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[610,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[637,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[638,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[639,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[640,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[641,"impl-Rem-for-ChunkedArray%3CT%3E"],[642,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[652,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[653,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[660,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[661,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[662,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[671,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[672,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[679,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[680,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[681,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[682,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[683,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[686,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[687,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[688,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[689,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[690,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[691,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[692,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[694,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[697,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[698,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[699,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[700,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[701,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[702,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[703,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[705,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[706,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[710,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[711,"impl-Sub-for-ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[713,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[714,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[718,"impl-ChunkedArray%3CBooleanType%3E"],[719,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[722,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[723,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[734,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[735,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[742,"impl-ChunkedArray%3CListType%3E"],[743,"impl-ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[755,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[757,"impl-ChunkedArray%3CFixedSizeListType%3E"],[758,"impl-ChunkedArray%3CListType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[778,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[779,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[786,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[799,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[817,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[818,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[863,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1038,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1039,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1266,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1267,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1299,"impl-ObjectArray%3CT%3E"],[1300,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1312,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1313,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1323,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1324,"impl-ObjectArray%3CT%3E"],[1326,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1327,"impl-ObjectArray%3CT%3E"],[1329,"impl-Array-for-ObjectArray%3CT%3E"],[1330,"impl-ObjectArray%3CT%3E"],[1333,"impl-ObjectChunkedBuilder%3CT%3E"],[1334,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1336,"impl-ObjectChunkedBuilder%3CT%3E"],[1337,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2068,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2069,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2070,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2071,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2072,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2076,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2077,"impl-Logical%3CDurationType,+Int64Type%3E"],[2323,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2324,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2325,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2326,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2327,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2336,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2337,"impl-PartialEq-for-DataType"],[2343,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2344,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2345,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2347,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2348,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2349,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2383,"impl-Debug-for-AnyValue%3C\'a%3E"],[2384,"impl-Display-for-AnyValue%3C\'_%3E"],[2386,"impl-Display-for-DataType"],[2387,"impl-Debug-for-DataType"],[2389,"impl-Display-for-TimeUnit"],[2390,"impl-Debug-for-TimeUnit"],[2395,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2397,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2411,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2413,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2414,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2415,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2416,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2418,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2419,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2421,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2422,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2423,"impl-From%3C%26ArrowField%3E-for-Field"],[2447,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2449,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2472,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2473,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2474,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2475,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2476,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2480,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2481,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2482,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2483,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2484,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2519,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2520,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2521,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2523,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2524,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2525,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2627,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2628,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2629,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2630,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2631,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2680,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2681,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2682,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2699,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2700,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2701,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2702,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2725,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2726,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2727,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2728,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2729,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2730,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2731,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2732,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2738,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2739,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2740,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2742,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2743,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2744,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2748,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2749,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2769,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2770,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2777,"impl-Logical%3CDurationType,+Int64Type%3E"],[2778,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2783,"impl-Logical%3CDateType,+Int32Type%3E"],[2784,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2785,"impl-Logical%3CTimeType,+Int64Type%3E"],[2799,"impl-Logical%3CDurationType,+Int64Type%3E"],[2800,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2848,"impl-Logical%3CTimeType,+Int64Type%3E"],[2849,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2850,"impl-Logical%3CDateType,+Int32Type%3E"],[2856,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2857,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3142,"impl-Debug-for-ErrString"],[3143,"impl-Display-for-ErrString"],[3144,"impl-Debug-for-PolarsError"],[3145,"impl-Display-for-PolarsError"],[3150,"impl-From%3CError%3E-for-PolarsError"],[3151,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3152,"impl-From%3CError%3E-for-PolarsError"],[3153,"impl-From%3CError%3E-for-PolarsError"],[3154,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3155,"impl-From%3CError%3E-for-PolarsError"],[3277,"impl-Debug-for-DataFrame"],[3278,"impl-Display-for-DataFrame"],[3283,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3284,"impl-From%3C%26Schema%3E-for-DataFrame"],[3286,"impl-From%3CStructChunked%3E-for-DataFrame"],[3313,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3314,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3315,"impl-Index%3C%26str%3E-for-DataFrame"],[3316,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3317,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3318,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3319,"impl-Index%3Cusize%3E-for-DataFrame"],[3320,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3411,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3412,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3585,"impl-Display-for-GroupByMethod"],[3586,"impl-Debug-for-GroupByMethod"],[3592,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3594,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3595,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3629,"impl-IntoIterator-for-%26GroupsIdx"],[3630,"impl-IntoIterator-for-GroupsIdx"],[3632,"impl-IntoParallelIterator-for-GroupsIdx"],[3633,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4892,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4893,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5517,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5518,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5519,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5987,"impl-PartialEq-for-Expr"],[5988,"impl-Expr"],[5991,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5992,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6005,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6006,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6007,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6013,"impl-PartialEq-for-StructArray"],[6014,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6279,"impl-Display-for-Duration"],[6280,"impl-Debug-for-Duration"],[6305,"impl-Display-for-JoinType"],[6306,"impl-Debug-for-JoinType"],[6308,"impl-Debug-for-JoinValidation"],[6309,"impl-Display-for-JoinValidation"],[6319,"impl-Debug-for-Expr"],[6320,"impl-Display-for-Expr"],[6322,"impl-Display-for-Operator"],[6323,"impl-Debug-for-Operator"],[6325,"impl-Display-for-BooleanFunction"],[6326,"impl-Debug-for-BooleanFunction"],[6327,"impl-Display-for-CategoricalFunction"],[6328,"impl-Debug-for-CategoricalFunction"],[6329,"impl-Debug-for-PowFunction"],[6330,"impl-Display-for-PowFunction"],[6331,"impl-Display-for-StringFunction"],[6332,"impl-Debug-for-StringFunction"],[6333,"impl-Display-for-FunctionExpr"],[6334,"impl-Debug-for-FunctionExpr"],[6346,"impl-Display-for-Arc%3CT,+A%3E"],[6347,"impl-Debug-for-Arc%3CT,+A%3E"],[6348,"impl-Pointer-for-Arc%3CT,+A%3E"],[6395,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6397,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6461,"impl-From%3Ci16%3E-for-Expr"],[6462,"impl-From%3Cu64%3E-for-Expr"],[6463,"impl-From%3Cu16%3E-for-Expr"],[6464,"impl-From%3Ci8%3E-for-Expr"],[6465,"impl-From%3Cbool%3E-for-Expr"],[6466,"impl-From%3Ci64%3E-for-Expr"],[6467,"impl-From%3CAggExpr%3E-for-Expr"],[6468,"impl-From%3Cf64%3E-for-Expr"],[6469,"impl-From%3C%26str%3E-for-Expr"],[6470,"impl-From%3Ci32%3E-for-Expr"],[6471,"impl-From%3Cu8%3E-for-Expr"],[6472,"impl-From%3Cf32%3E-for-Expr"],[6473,"impl-From%3Cu32%3E-for-Expr"],[6476,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6477,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6478,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6479,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6480,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6481,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6482,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6483,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6484,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6486,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6491,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6492,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6494,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6495,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6509,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6511,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6512,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6513,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6514,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6515,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6516,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6517,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6518,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6519,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6520,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6521,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6522,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6523,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6524,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6532,"impl-From%3CArrowSchema%3E-for-Schema"],[6533,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6534,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6535,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6536,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6537,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6539,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6540,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6555,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6556,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6564,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6565,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6577,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6578,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7667,"impl-Array-for-StructArray"],[7668,"impl-StructArray"],[7676,"impl-StructArray"],[7677,"impl-Array-for-StructArray"],[8346,"impl-StructArray"],[8347,"impl-Array-for-StructArray"],[8589,"impl-LazyCsvReader"],[8590,"impl-LazyFileListReader-for-LazyCsvReader"],[8591,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8592,"impl-LazyJsonLineReader"],[8639,"impl-LazyCsvReader"],[8640,"impl-LazyFileListReader-for-LazyCsvReader"],[8641,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8642,"impl-LazyJsonLineReader"],[8678,"impl-StructArray"],[8679,"impl-Array-for-StructArray"],[9060,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9061,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9066,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9067,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9688,"impl-Display-for-RollingFunction"],[9689,"impl-Debug-for-RollingFunction"],[9717,"impl-Display-for-RollingFunctionBy"],[9718,"impl-Debug-for-RollingFunctionBy"],[9934,"impl-Add-for-Series"],[9935,"impl-Add%3CT%3E-for-%26Series"],[9936,"impl-Add-for-%26Series"],[9937,"impl-Add%3CT%3E-for-Series"],[9952,"impl-SeriesSealed-for-Series"],[9953,"impl-AsSeries-for-Series"],[9997,"impl-Div%3CT%3E-for-Series"],[9998,"impl-Div%3CT%3E-for-%26Series"],[9999,"impl-Div-for-%26Series"],[10000,"impl-Div-for-Series"],[10010,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10011,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10012,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10014,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10015,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10016,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10033,"impl-Debug-for-Series"],[10034,"impl-Display-for-Series"],[10039,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10040,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10041,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10042,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10043,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10049,"impl-FromIterator%3CString%3E-for-Series"],[10050,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10051,"impl-FromIterator%3C%26u8%3E-for-Series"],[10052,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10053,"impl-FromIterator%3C%26i16%3E-for-Series"],[10054,"impl-FromIterator%3C%26i64%3E-for-Series"],[10055,"impl-FromIterator%3Cf64%3E-for-Series"],[10056,"impl-FromIterator%3C%26u64%3E-for-Series"],[10057,"impl-FromIterator%3C%26i8%3E-for-Series"],[10058,"impl-FromIterator%3C%26i32%3E-for-Series"],[10059,"impl-FromIterator%3Ci16%3E-for-Series"],[10060,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10061,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10062,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10063,"impl-FromIterator%3Cu16%3E-for-Series"],[10064,"impl-FromIterator%3Cu64%3E-for-Series"],[10065,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10066,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10067,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10068,"impl-FromIterator%3Cf32%3E-for-Series"],[10069,"impl-FromIterator%3C%26f64%3E-for-Series"],[10070,"impl-FromIterator%3C%26u32%3E-for-Series"],[10071,"impl-FromIterator%3Cu8%3E-for-Series"],[10072,"impl-FromIterator%3Cu32%3E-for-Series"],[10073,"impl-FromIterator%3C%26u16%3E-for-Series"],[10074,"impl-FromIterator%3Ci8%3E-for-Series"],[10075,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10076,"impl-FromIterator%3C%26str%3E-for-Series"],[10077,"impl-FromIterator%3Cbool%3E-for-Series"],[10078,"impl-FromIterator%3C%26f32%3E-for-Series"],[10079,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10080,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10081,"impl-FromIterator%3Ci64%3E-for-Series"],[10082,"impl-FromIterator%3Ci32%3E-for-Series"],[10083,"impl-FromIterator%3C%26bool%3E-for-Series"],[10084,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10085,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10086,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10087,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10088,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10089,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10090,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10091,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10092,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10093,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10103,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10104,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10105,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10107,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10108,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10109,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10146,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10147,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10148,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10150,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10151,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10152,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10161,"impl-Mul%3CT%3E-for-%26Series"],[10162,"impl-Mul-for-Series"],[10163,"impl-Mul-for-%26Series"],[10164,"impl-Mul%3CT%3E-for-Series"],[10168,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10169,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10170,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10171,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10172,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10173,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10174,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10175,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10176,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10177,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10178,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10179,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10180,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10181,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10182,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10183,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10184,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10185,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10186,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10187,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10188,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10189,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10190,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10191,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10192,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10193,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10194,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10195,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10196,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10197,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10198,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10199,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10200,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10201,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10202,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10203,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10204,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10205,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10206,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10207,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10208,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10209,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10210,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10211,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10212,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10213,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10214,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10215,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10216,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10217,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10218,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10224,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10225,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10226,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10228,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10229,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10230,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10238,"impl-Rem%3CT%3E-for-Series"],[10239,"impl-Rem%3CT%3E-for-%26Series"],[10240,"impl-Rem-for-%26Series"],[10264,"impl-Sub%3CT%3E-for-Series"],[10265,"impl-Sub-for-Series"],[10266,"impl-Sub-for-%26Series"],[10267,"impl-Sub%3CT%3E-for-%26Series"],[10294,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10295,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10296,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10297,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAALYN/Q06Dj0OPg4/DkAOQQ5GDkkOTg5PDnQO","e":"OzAAAAEAAGsd/QMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOQAAAD4ABQBIAAIATAAKAFsACQBmAAYAbwABAHIABAB4AAsAhgACAIwAAwCSAAYAmgAGAKIACACuAAQAtAAAALkABwDCAAgAzQAVAOUACgDxABAABgEAAAkBAQANAQ0AHAEQADQBFABLARIAXwESAHYBAAB4AR4AmQEDAKUBEQC6AQMAwQEBAMcBAQDKAQYA1gEmAP8BBwAIAjIAPQIBAEACEQBTAgMAWAIEAF4CBQBoAgAAagIaAIcCBwCTAg4AowIBAKcCEAC6AhEAzgIGANkCAgDiAgEA6QIBAO8CBgD3AgAA+QIBAPwCCgAIAwQADgMAABADKAA7AwAAPQMjAGMDNACaAwgApwMRALwDWAAiBBIAQAQHAEkEXACnBAAAqgQUAMMEAwDLBAMA0QQeAPIEEwAHBQcAEAUAABIFAAAVBQIAGgUOACoFAAAsBQAALwUDADQFAQA3BQEAOgUIAEQFAABGBQUATgUBAFEFAABTBQEAVgUDAFsFAwBgBQIAZAUDAGoFAABtBQAAdQUAAHoFAAB9BQEAggUBAIUFAACIBQAAjwUAAJQFAgCfBQYAqAUNALgFBQDABQgAzAUCANAFAADSBQAA1AUAANYFAQDcBQUA5QUBAO4FAQD6BQAA/AUBAP8FAAACBgAABAYAAAgGAAAKBgAADwYMAB4GAgAsBgAALgYHADcGAgA9BgAAPwYDAEQGAQBHBgUAUwYVAGoGAQBuBgQAdAYDAHsGBgCPBgMAlAYHAJ0GBACkBgIAqAYFALAGAACyBgwAwwYBAMcGAQDNBgEA0AYBANMGAwDYBgAA2gYAAN0GAQDhBgAA4wYBAOYGAADoBgIA7AYMAPoGAAD8BgEA/wYAAAEHAQAEBwAABgcBAAkHAAALBwEADgcAABIHAAAWBwEAGgcAAB0HAAAfBwAAIQcDACYHAAApBwcAMgcBADUHBQA8BwEAQAcAAEIHAgBHBwAATAcDAFEHAQBUBwAAVgcBAFkHAABbBwEAXgcAAGAHAQBjBwAAZQcBAGgHAABqBwAAbQcmAJUHFwCuB24AHwhQAHEIBwB7CJcAFAkHAB0JKABHCQEASgkPAFwJAABeCQAAbAkAAG4JAwBzCQEAdgkCAHsJAACQCQAAkgkAAJQJAACcCQAAnwkAAKEJBgCpCQQArwkAALEJBAC3CQEAugkZANgJDwDqCSoAFgoAAEIKCQBOCgAAUAoBAFMKBABZCgEAXgoAAGAKBQBnCgAAagoCAG8KBAB1CgAAdwoPAIkKAACMChIAoAoAAKMKDQCyCgwAwAoAAMIKAQDGCg4A1goAAN0KAADfCgAA5AoPAPYKAAD4CgIA/QohACQLZQCLCy8AvAsCAMALNQD3CwEA+gsIAAQMAAAGDAEACQwEAA8MAQAUDAAAFgwCABoMAAAdDBoAOQwRAEwMAABPDAkAXAwEAGIMFQB7DAAAfgwKAIoMAgCSDBAApQwQAL0MAQDBDAIAxQwAAMcMAADMDAMA1AwBANcMAQDnDAAA6QwAAOsMAQDyDAwABQ0CABgNAQAlDQEAKQ0AAC8NAAA4DQEAOw0AAD4NAQBFDQAARw0EAE8NBgBYDQkAYw0AAGYNAQBqDQQAdg0NAIUNAgCKDQoAlg0BAJkNAwCeDQMAow0JAK4NBwC3DQEAug0YANQNKAD+DQYACQ4AAAsOAgAQDgAAEg4DABgOAAAcDgcALA4NADsOAQBCDgMARw4BAEsOAgBQDgAAUg4fAHUODACEDgUAiw4HAJQOIwC6DgsAxw4OANcOAQDbDgMA4g4GAOwODgD9DgUABQ8AAAgPCAASDwEAFg8DABsPBQAiDwAAJw8JADIPAQA2DwMAOw8BAD4PCgBKDwAATQ8AAE8PCQBaDwAAXA8IAGYPAwBuDwAAcQ8AAHkPAgCADwAAgw8BAIkPCgCVDw8AqA8GALAPAQCzDwMAuw8DAMIPAgDJDwMAzg8AANAPCgDdDwoA6Q8CAO4PAADxDwAA8w8FAPoPAwD/DwQABRADAAwQAgASEAAAFBABABgQAAAaEAQAIRAPADIQAAA1EAEAOBADAD4QAgBEEBMAWRAJAGUQAABnEAEAaxAAAG0QAQBxEAAAcxABAHcQAAB5EAQAgBABAIMQAQCHEAAAihAAAIwQAwCREAIAlRAGAJ4QBwCoEAAArBABALAQAACyEAAAtBABALcQAQC6EAEAvxANANAQBQDXEAcA4RACAOUQBgDwEAEA8xAAAPUQAQD4EAMA/hABAAERAgAFEQAABxEDAA0RBAATEQMAGBEBABsRAQAeEQAAIBEBACMRAAAlEQAAJxEAACkRAgAuEQMAMxEHAD0RAgBDEQAARREEAEsRAgBPEQAAUhEAAFQRBABaEQMAXxECAGMRAgBnEQwAdREkAJsRBgCjEQMAqhEBAK4RAACwEQUAtxEEAL0RAAC/EQIAxBEBAMcRAQDMEQsA3BEGAOQRCQDxEQEA9BEGAPwRAQAAEgEABhIEAAwSCQAYEgAAGhIBAB4SAAAgEgEAJBIAACYSAQAqEgAALBIDADISAwA3EgIAPhIHAEcSAABKEgMAUBICAFQSWACuEgMAthIAALgSAAC7EgUAwxIAAMoSAADMEgAAzxIAANESAADVEgUA3xIAAOMSAADqEgAA7hIAAPoSAgD+EgQABBMAAAYTAgAKEwEAEBMBABMTBAAZEwEAIRMKAC4T8AAgFAAAIhQBACUUAAAnFAIALhQBADQUAAA2FAAAPhQAAEIUAQBFFAAATxRJAJoUCwCnFFYA/xQBAAMVAQAHFQAACxUCABEVCgAfFQQAKRUAACsVAAA1FQEAORUAAD8VAABBFQEARhUBAFUVAABbFQAAYBUCAGYVAABoFQUAcBUoAJoV+QCWFgAAmxYBAJ4WAwCkFgAAphYCAK0WGADHFk8AGBcNACoXAQAvFwAAMhcAADYXAgA6FyoAZhcPAHcXDACHF6EALRgAADEYAAAzGAQAORgAAD0YAABDGAAARRgAAE4YAABRGAAAWRgAAFwYAgBhGAMAZhgBAGoYAQBtGAAAbxgDAHcYAAB7GAAAfxhdAN4YAADhGAAA/BgAAP4YAAARGQAAGRkAACYZAAA+GQwATRkIAFcZAABcGQEAXxkBAGcZAABvGQAAgBkAAIUZBQCMGQEAkBkAAJYZAACZGQQAnxkAAKUZAQCpGQIArxkFALYZAgC6GQAAvRkBAMAZAADCGQAAxBkAAMkZAADSGQAA1RkBANgZAgDdGQAA3xkAAOMZAQDnGQQA8BkBAPQZAAD/GQAAARo8AEEaAgBIGgAAShoAAEwaBABTGgAAVRoAAFgaAABfGgIAZBp6AOEaAADmGgIA6hoBAGQbAABmGwYAbxsBAHIbBQB6GwAAfBsCAIAbAQCEGwAAhxsBAJQbAACWGwAAmRsBAJwbAwCiGwIAsxsBALYbAQC/GwAAwRsBAMQbAADIGwIAzhsAANAbAQDUGwAA2RsBAN0bAQDhGwIA5RsDAOsbDgD/GwAABRwBAAwcAAAPHAUAGBwAACAcAgA1HAAAPBwBAEAcAABEHAEARxwAAEocAABPHAAAURwAAFMcAABbHAAAXRwCAGQcCABzHAgAgRwAAIMcAACHHAAAjRwAAI8cAwCXHAEAmhwBAJ0cAACgHAcAqRwAAKscAgCvHAAAshwBAMIcAADFHAEA0BwGANwcAgDkHAAA6hwCAO4cAAD3HAAA+RwDAP4cBQAGHQUAER0DABYdAAAaHQIAIB0AACMdAAAvHQAAMh0BADUdAQA4HQMAPh0FAEUdBABQHQAAUh0AAFYdAABZHQAAWx0BAGAdAABkHQAAZh0AAGgdAQCLHQAAkB0AAJodAwCfHQUAph0AAKgdAACrHQAAsR0BALYdAgC6HQIAwB0AAMIdAQDFHQEAyB0BAM8dAwDWHQAA4h0AAOQdAADrHQQA9B0AAPYdAAD6HQAA/B0AAP4dAAABHgAAAx4AAAkeCQAUHgAAFh4AABoeAAAgHgAAIh4AACkeAAAwHgoAPR4CAEIeAgBNHgAAXB4AAF4eAABhHgIAZR4DAGseAQBuHgAAcR4AAHUeWADQHgoA3B4AAOIeCwDvHgEA8h6FAHofAAB+H3YA+B8AAPofAwAFIAAACCAAAAwgdQCDIAAAjyAAAJYgBACcIAEAoCAAAKIgAACkIAAAqCAAAK4gAACwIAAAsiB2ADAhAwA5IQAAPCEAAD8hAABBIQEARyEAAE8hAABYIQAAXiEAAGkhAABvIQAAfCEBAI8hAQCSIQAAlSEAAJ4hAwCjIQQAuCEAAMEhAQDLIQAA0CEAAOAhAQDoIQEA7SEUAAYiAQAJIkUAUSIAAFMiAABVIgEAWCIBAFsiBABhIjUAmSIFAKAiCQCrIgIAsSIAALMiAwC4IgEAuyIFAMUiEgDZIgEA3CICAOEiAADkIgMA6SIGAAAjAAAOIwIAJCMAACwjCAA5IwAAOyMLAEgjAgBMIxEAXyMBAGIjDwBzIxcAjSMAAI8jAgCUIwwAoiMHAKsjBACyIwIAtiMFAL4jAADAIwwA0SMBANUjAQDbIwEA3iMBAOEjAwDmIwAA6CMAAOsjAQDvIwAA8SMBAPQjAAD2IwIA+iMMAAgkAAAKJAEADSQAAA8kAQASJAAAFCQBABckAAAZJAEAHCQAACAkAAAkJAEAKCQAACskAAAtJAAALyQDADQkAAA3JAcAQCQBAEMkBQBKJAEATiQAAFAkAgBVJAAAWiQDAF8kAQBiJAAAZCQBAGckAABpJAEAbCQAAG4kAQBxJAAAcyQBAHYkAAB4JAAAeyQRAI4kBgCXJAAAmiQQAKwkCAC2JAEAuSQIAMMkAADFJAEAyyQAAM0kBADWJAEA3yQCAOUkAADnJAAA8SQAAAAlAwAIJQoAFCUAABYlCAAhJbkA3CUBAN8lGAD5JQEA/CUOAA0mEQAgJgAAIiYVADkmAQA8JgAAPiYLAEsmAgBSJgAAZSYDAGwmBgCAJgUAiCYAAJEmAACTJgEAmiYHAKgmCgC8JgQAwiYAAMQmAgDIJgQAzyYDANQmAQDYJgAA3iYEAOcmAgDrJgYA9SYCAPwmAgAAJwEABicOABgnAQAbJwAAHScAAB8nAQAkJwIAMScDADgnBAA/JwAAQScuAHMnAAB4JwAAeicAAHwnAQCAJwAAhicBAIknAgCPJwMAmicCAKEnAACkJwEApycAAKknAACtJwAAsicDALknLwDqJwEA7icBAPEnAADzJwAA9ScAAPcnAAD6JwEA/ycCAAQoAAAGKAAACSgBAA4oAQASKAAAFigAABkoAwAiKAAALSgAAC8oAQAyKA4ARygBAEsoAgBPKAAAUSgWAGooAQBuKA4AfigBAIEoBQCIKAoAlCgAAJYoAACYKAQA"}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_reduce","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[477,"polars_core::chunked_array::arithmetic"],[505,"polars_core::chunked_array::builder"],[609,"polars_core::chunked_array::builder::list"],[763,"polars_core::chunked_array::collect"],[777,"polars_core::chunked_array::float"],[779,"polars_core::chunked_array::from_iterator_par"],[783,"polars_core::chunked_array::iterator"],[820,"polars_core::chunked_array::iterator::par"],[822,"polars_core::chunked_array::object"],[893,"polars_core::chunked_array::object::builder"],[916,"polars_core::chunked_array::object::registry"],[944,"polars_core::chunked_array::ops"],[1065,"polars_core::chunked_array::ops::arity"],[1100,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1102,"polars_core::chunked_array::ops::gather"],[1105,"polars_core::chunked_array::ops::search_sorted"],[1134,"polars_core::chunked_array::ops::sort"],[1141,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1142,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1149,"polars_core::chunked_array::ops::sort::options"],[1223,"polars_core::chunked_array::temporal"],[1224,"polars_core::chunked_array::temporal::conversion"],[1227,"polars_core::config"],[1231,"polars_core::datatypes"],[2634,"polars_core::datatypes::categorical"],[2774,"polars_core::datatypes::categorical::revmap"],[2826,"polars_core::datatypes::categorical::string_cache"],[2845,"polars_core::datatypes::revmap"],[2851,"polars_core::datatypes::string_cache"],[2855,"polars_core::error"],[2916,"polars_core::error::PolarsError"],[2920,"polars_core::error::constants"],[2923,"polars_core::export"],[2931,"polars_core::fmt"],[2961,"polars_core::frame"],[3223,"polars_core::frame::explode"],[3252,"polars_core::frame::group_by"],[3487,"polars_core::frame::group_by::GroupByMethod"],[3488,"polars_core::frame::group_by::GroupsProxy"],[3490,"polars_core::frame::group_by::aggregations"],[3503,"polars_core::frame::group_by::expr"],[3506,"polars_core::frame::row"],[3600,"polars_core::functions"],[3602,"polars_core::hashing"],[3650,"polars_core::prelude"],[4204,"polars_core::prelude::PolarsError"],[4208,"polars_core::prelude::default_arrays"],[4214,"polars_core::prelude::list"],[4237,"polars_core::prelude::null"],[4267,"polars_core::prelude::revmap"],[4273,"polars_core::prelude::slice"],[4276,"polars_core::prelude::string_cache"],[4280,"polars_core::prelude::utf8"],[4284,"polars_core::random"],[4285,"polars_core::schema"],[4359,"polars_core::series"],[4740,"polars_core::series::arithmetic"],[4765,"polars_core::series::arithmetic::checked"],[4773,"polars_core::series::ops"],[4799,"polars_core::series::unstable"],[4823,"polars_core::utils"],[4933,"polars_core::utils::flatten"],[4938,"dyn_clone::sealed"],[4939,"num_traits"],[4940,"num_traits::cast"],[4941,"polars_error"],[4942,"polars_core::series::arithmetic::borrowed"],[4943,"polars_core::frame::group_by::proxy"],[4944,"core::option"],[4945,"core::iter::traits::iterator"],[4946,"core::ops::function"],[4947,"core::marker"],[4948,"polars_core::datatypes::dtype"],[4949,"alloc::string"],[4950,"polars_core::datatypes::aliases"],[4951,"polars_core::series::arithmetic::borrowed::checked"],[4952,"polars_arrow::array"],[4953,"alloc::vec"],[4954,"core::iter::traits::double_ended"],[4955,"core::iter::traits::collect"],[4956,"core::fmt"],[4957,"core::result"],[4958,"polars_utils::iter::fallible"],[4959,"polars_arrow::bitmap::immutable"],[4960,"rayon::iter"],[4961,"polars_arrow::trusted_len"],[4962,"polars_core::datatypes::any_value"],[4963,"polars_core::series::series_trait"],[4964,"polars_core::chunked_array::logical::decimal"],[4965,"core::iter::traits::exact_size"],[4966,"bitflags::iter"],[4967,"core::slice::iter"],[4968,"core::iter::adapters::map"],[4969,"core::convert"],[4970,"core::ops::range"],[4971,"polars_arrow::legacy::kernels::rolling::no_nulls"],[4972,"polars_core::datatypes::field"],[4973,"polars_core::chunked_array::ops::rolling_window"],[4974,"polars_utils::index"],[4975,"ahash::random_state"],[4976,"polars_utils::hashing"],[4977,"ndarray::aliases"],[4978,"either"],[4979,"core::any"],[4980,"polars_core::chunked_array::arithmetic::numeric"],[4981,"polars_core::chunked_array::builder::string"],[4982,"polars_arrow::array::binview"],[4983,"polars_core::chunked_array::builder::boolean"],[4984,"polars_core::chunked_array::builder::null"],[4985,"polars_core::chunked_array::builder::primitive"],[4986,"core::clone"],[4987,"polars_core::chunked_array::builder::list::anonymous"],[4988,"polars_core::chunked_array::builder::list::boolean"],[4989,"polars_core::chunked_array::builder::list::primitive"],[4990,"polars_core::chunked_array::builder::list::binary"],[4991,"polars_core::chunked_array::builder::list::null"],[4992,"alloc::boxed"],[4993,"polars_arrow::array::boolean"],[4994,"polars_arrow::datatypes"],[4995,"polars_arrow::bitmap::utils::iterator"],[4996,"polars_arrow::bitmap::utils::zip_validity"],[4997,"alloc::sync"],[4998,"polars_arrow::offset"],[4999,"core::hash"],[5000,"polars_arrow::array::static_array"],[5001,"core::error"],[5002,"polars_arrow::array::primitive"],[5003,"polars_arrow::legacy::array::slice"],[5004,"polars_row::row"],[5005,"chrono::naive::datetime"],[5006,"alloc::borrow"],[5007,"polars_arrow::array::static_array_collect"],[5008,"bytemuck::zeroable"],[5009,"polars_core::chunked_array::logical::categorical"],[5010,"polars_core::chunked_array::logical::categorical::merge"],[5011,"polars_core::chunked_array::logical"],[5012,"polars_core::datatypes::time_unit"],[5013,"polars_arrow::types"],[5014,"polars_arrow::datatypes::physical_type"],[5015,"core::borrow"],[5016,"smartstring::alias"],[5017,"polars_arrow::pushable"],[5018,"core::cmp"],[5019,"polars_core::chunked_array::logical::categorical::builder"],[5020,"polars_core::chunked_array::logical::categorical::revmap"],[5021,"polars_core::chunked_array::logical::categorical::string_cache"],[5022,"polars_error::warning"],[5023,"polars_core::series::from"],[5024,"polars_utils::aliases"],[5025,"polars_arrow::datatypes::schema"],[5026,"polars_core::chunked_array::ndarray"],[5027,"polars_arrow::array::struct_"],[5028,"polars_arrow::record_batch"],[5029,"polars_utils::idx_vec"],[5030,"rayon::iter::plumbing"],[5031,"polars_core::frame::group_by::into_groups"],[5032,"core::iter::adapters::copied"],[5033,"core::iter::adapters::zip"],[5034,"polars_arrow::legacy::kernels::rolling"],[5035,"polars_utils::float"],[5036,"polars_arrow::types::native"],[5037,"polars_core::frame::group_by::aggregations::agg_list"],[5038,"polars_core::frame::row::av_buffer"],[5039,"polars_arrow::array::binary"],[5040,"polars_core::hashing::identity"],[5041,"hashbrown::map"],[5042,"polars_core::hashing::vector_hasher"],[5043,"core::alloc"],[5044,"std::os::fd::owned"],[5045,"std::os::fd::raw"],[5046,"core::mem::maybe_uninit"],[5047,"polars_arrow::legacy::kernels::time"],[5048,"core::default"],[5049,"polars_arrow::scalar"],[5050,"std::fs"],[5051,"std::io::error"],[5052,"regex::error"],[5053,"simdutf8::basic"],[5054,"alloc::collections"],[5055,"std::ffi::os_str"],[5056,"std::path"],[5057,"alloc::ffi::c_str"],[5058,"core::ffi::c_str"],[5059,"polars_arrow::legacy::array::default_arrays"],[5060,"polars_arrow::buffer::immutable"],[5061,"polars_arrow::array::list"],[5062,"polars_core::named_from"],[5063,"polars_arrow::legacy::array"],[5064,"polars_core::chunked_array::ops::aggregate"],[5065,"polars_core::chunked_array::ops::aggregate::quantile"],[5066,"polars_arrow::legacy::index"],[5067,"core::pin"],[5068,"core::io::borrowed_buf"],[5069,"std::io"],[5070,"polars_core::chunked_array::ops::aggregate::var"],[5071,"alloc::collections::btree::map"],[5072,"polars_arrow::legacy::array::list"],[5073,"polars_arrow::legacy::array::null"],[5074,"polars_arrow::bitmap::mutable"],[5075,"polars_arrow::array::utf8"],[5076,"polars_core::series::iterator"],[5077,"polars_arrow::legacy::utils"],[5078,"polars_arrow::legacy::trusted_len::rev"],[5079,"smartstring::config"],[5080,"smartstring"],[5081,"polars_error::constants"],[5082,"polars_arrow::legacy::prelude"],[5083,"polars_arrow::legacy::array::utf8"],[5084,"polars_core::utils::any_value"],[5085,"polars_core::utils::schema"],[5086,"polars_core::utils::supertype"],[5087,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{}An}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}42{{{f{Bj{l{c}}}}{f{{l{c}}}}}b{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{Cn}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{B`}{{Cb{{B`{e}}}}}}}C`}{{{l{c}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}nC`}{{{f{Bj{l{c}}}}e}bn{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{{l{Db}}}}c}{{l{Db}}}{{Cj{{f{{Df{Dd}}}}}{{Cb{{f{{Df{Dd}}}}}}}}}}{{{f{{l{c}}}}Dhg}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{D`}}}}c}{{l{D`}}}{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{{l{j}}}}{f{Cd}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bj{Df{e}}}}}bn{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{c}}}}Dn}E`n}{{{f{{l{c}}}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}n}{{{f{{l{c}}}}}{{Af{E`}}}n}`{{{f{{l{D`}}}}}Ed}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dh}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEf{}}{{AnAn}An}{{{f{BjAn}}An}b}210{{{f{An}}}Dd}0321{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00``{{{f{{l{c}}}}{f{Dh}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cd{}{{Cb{}}}}Cf}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjC`}{{{f{{l{c}}}}}{{f{{En{El}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{En{El}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{{f{An}}}An}{{{f{c}}{f{Bje}}}b{}{}}0``{AnAn}{{{f{{l{c}}}}}{{Af{{f{Df}}}}}n}{{{f{An}}An}d}{{{f{{l{c}}}}}{{`{{F`{}{{Bb{{f{Df}}}}}}}}}n}{{}{{l{c}}}C`}{{}An}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{{AnAn}An}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bj{l{c}}}}}bC`}{Fbb}00{{{f{{l{c}}}}}{{f{Dh}}}C`};{{{f{An}}{f{An}}}d}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}bn}{{{f{BjAn}}c}b{{Ff{}{{Bb{An}}}}}}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fd}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{B`{Fb}}}C`}`{{{f{{l{c}}}}{f{BjFh}}}Fjn}{{{f{{l{Al}}}}{f{BjFh}}}Fj}{{{f{An}}{f{BjFh}}}Fj}0000{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}Fl{{C`{}{{Fn{c}}}}}}{cc{}}00{Dd{{B`{An}}}}{DdAn}00{{{f{Bh}}c}{{l{e}}}Ff{{C`{}{{Fn{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Fn{}}}}C`}Ff}{{{f{Bh}}{En{El}}}{{l{c}}}C`}{{{f{Bh}}{En{El}}Dh}{{l{c}}}C`}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}0{c{{l{e}}}{{Ff{}{{Bb{{Gf{En{B`{Gd}}}}}}}}}n}{c{{l{e}}}{{Ff{}{{Bb{B`}}}}}n}{c{{l{Al}}}{{Ff{}{{Bb{{B`{d}}}}}}}}{cAn{{Ff{}{{Bb{An}}}}}}{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{B`}}}}}n}23{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{}}}}}n}`{{{f{Bh}}}{{B`{An}}}}{c{{l{e}}}{{Gh{}{{Bb{B`}}}}}n}{{{f{Bh}}{f{Df}}}{{l{c}}}n}{{{f{Bh}}{f{{Df{B`}}}}}{{l{c}}}n}{c{{l{e}}}{{Gj{}{{Bb{B`}}}}}n}{{{f{Bh}}En}{{l{c}}}n}{{{f{Bh}}En{B`{Gd}}}{{l{c}}}n}{{{f{Bh}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{l{c}}}}Fb}B`C`}{{{f{{l{c}}}}Fb}{{Af{Gl}}}n}{{{f{{l{c}}}}Fb}Gln}{{{f{{l{j}}}}Fb}{{B`{Ad}}}}{{{f{{l{c}}}}}AnC`}{{{f{{l{j}}}}}Ad}{{{f{{l{{Gn{c}}}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{An}}}Hd}7{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEf}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{}Fb}00{{FbHf{B`{Hh}}}{{l{c}}}n}{{{f{{l{j}}}}}Dh}{{{f{BjAn}}An}b}{{AnAn}An}{{{f{An}}An}d}{ce{}{}}00{{{l{Hj}}{B`{Fb}}Fb}{{Af{Hl}}}}{{{l{Hj}}{B`{Fb}}Fb}Hl}{{{f{{l{c}}}}}en{}}{Anc{}}{{{f{{l{c}}}}}{{`{HnI`{Ib{}{{Bb{}}}}F`Gj}}}n}{{{l{c}}}AdC`}{{{f{An}}}d}?0{{{f{{l{c}}}}}FdId}000{{{f{{l{c}}}}}FdC`}0{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HdC`}{{{f{{l{c}}}}}{{`{{If{}{{Bb{B`}}}}}}}C`}{{{f{An}}}{{Ih{An}}}}{{{f{An}}}{{Ij{An}}}}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Il}}}}}}}}{{{f{{l{c}}}}}{{Jb{{In{El}}{J`{{f{El}}}{{Cb{{B`{{f{Gd}}}}}}}}}}}C`}`{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}{{{f{{l{c}}}}}{{Jd{c}}}C`}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}FbC`}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jf}}00{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}01{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{c}}}}}Jhn}{{{f{{l{c}}}}}{{B`{Jj}}}n}{{{f{{l{Al}}}}}{{B`{Jj}}}}{{{f{{l{c}}}}}{{B`{Jj}}}Ef}{{{f{{l{c}}}}}JhEf}56{{{f{{l{c}}}}}{{B`{Gf}}}n}5{{{f{Bh}}{f{{Df{Dd}}}}FbFb}{{l{Al}}}}{{{f{Bh}}{f{Df}}}{{l{c}}}n}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{{f{Bh}}c}{{l{D`}}}{{Jl{{Df{{B`{Dj}}}}}}}}{{{f{Bh}}c}{{l{Jn}}}{{Jl{{Df{Hh}}}}}}{{{f{Bh}}{K`{Il}}}{{l{Kb}}}}{{{f{Bh}}c}{{l{D`}}}{{Jl{{Df{Dj}}}}}}{{{f{Bh}}c}{{l{Kb}}}{{Jl{{Df{Il}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{Jl{{Df{Jj}}}}}}{{{f{Bh}}c}{{l{Jn}}}{{Jl{{Df{{B`{Hh}}}}}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jl{{Df{Kf}}}}}}{{{f{Bh}}c}{{l{Kh}}}{{Jl{{Df{Kj}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jl{{Df{{B`{Hf}}}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{Jl{{Df{{B`{Jj}}}}}}}}{{{f{Bh}}c}{{l{Kh}}}{{Jl{{Df{{B`{Kj}}}}}}}}{{{f{Bh}}c}{{l{Db}}}{{Jl{{Df{{B`{{En{Dd}}}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Jl{{Df{d}}}}}}{{{f{Bh}}{K`{Kf}}}{{l{Kd}}}}{{{f{Bh}}{K`{Kj}}}{{l{Kh}}}}{{{f{Bh}}c}{{l{Kb}}}{{Jl{{Df{{B`{Il}}}}}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jl{{Df{{B`{Kf}}}}}}}}{{{f{Bh}}c}{{l{Db}}}{{Jl{{Df{{En{Dd}}}}}}}}{{{f{Bh}}{K`{Hh}}}{{l{Jn}}}}{{{f{Bh}}c}{{l{Al}}}{{Jl{{Df{{B`{d}}}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jl{{Df{Hf}}}}}}{{{f{Bh}}}{{l{{Gn{c}}}}}Hb}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bh}}{En{c}}}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}{En{c}}Gd}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}En}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Id}{AnAn}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}FbC`}``{{{f{{l{D`}}}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{D`}}}}}{{`{{Kn{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Kn{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{c}}}}}Jhn}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JjL`}{{Af{{B`{Jj}}}}}Ef}{{{f{{l{c}}}}JjL`}{{Af{Jh}}}Ef}{{{f{Bh}}FbJj}{{Af{{l{Al}}}}}}{{{f{Bh}}FbJjJj}{{Af{{l{c}}}}}n}{{{f{Bh}}Fb}{{l{c}}}n}{{{f{Bh}}FbJjJj}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Lb}}}C`}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{BjAn}}An}b}{{{f{Bj{l{c}}}}{f{Bh}}}bC`}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}Ld}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Id{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}Jjdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}Fbdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Lf}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Lf}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Fd}}B`}{{Af{{l{c}}}}}n}{{{f{BjAn}}And}b}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{j}}}}Dh}b}{{{f{Bj{l{c}}}}Lf}bC`}{{{f{Bj{l{c}}}}Hd}bC`}{{{f{BjAn}}Hd}b}{{{f{{l{c}}}}Il}{{l{c}}}n}{{{f{{l{c}}}}IlB`}{{l{c}}}n}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}IlFb}{{l{c}}}C`}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dn}{{l{c}}}n}{{{f{{l{c}}}}Dd}{{B`{Jj}}}n}{{{f{{l{c}}}}Dd}JhEf}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{AnAn}An}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{B`{Lf}}}}{{{f{{l{c}}}}}B`n}{{{f{{l{c}}}}}Jhn}5{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}C`{{Jl{{Df{Lf}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}{{Jl{{Df{Lf}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}}`{{{f{{l{c}}}}dLl}{{En{{En{Ln}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{D`}}}}Fb}{{Af{Ad}}}}{{{f{Bj{l{j}}}}Dh}b}{{{f{{l{c}}}}}{{Af{M`}}}n}{{{f{{l{j}}}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}0{{{f{{l{Db}}}}}Md}{{{f{{l{c}}}}}{{En{B`}}}n}{{{f{{l{c}}}}}{{Mf{En{En{B`}}}}}n}{{{f{BjAn}}An}b}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{c{{G`{e}}}{}{}}00{{{f{Bh}}g}{{G`{{l{i}}e}}}Fl{}{{Ff{}{{Bb{{G`{ce}}}}}}}{{C`{}{{Fn{c}}}}C`}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}00{{AnAn}An}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fb}{}C`}{{{f{{l{c}}}}Dd}{{B`{Jj}}}n}{{{f{{l{c}}}}Dd}JhEf}{ce{}{}}00{{{f{Bh}}c}{{l{e}}}Fl{{C`{}{{Fn{c}}}}C`}}{{{f{{l{c}}}}{En{El}}}{{l{c}}}C`}{{{l{c}}{f{Bh}}}{{l{c}}}C`}{{{f{{Df{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Hd}{{l{c}}}C`}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2301{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}542310453267543210452310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}````{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}e{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}g{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BjNf}}}b}{{{f{Bj{Nh{c}}}}}b{NjLh}}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{Bj{Nh{c}}}}{B`{e}}}b{NjLh}{{Jl{c}}}}{{{f{BjNf}}{B`{c}}}b{}}{{{f{BjNf}}c}b{}}{{{f{Bj{Nh{c}}}}e}b{NjLh}{{Jl{c}}}}{{{f{BjNl}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{{Nh{c}}}}}{{Nh{c}}}{NjLh}}{{{f{Nl}}}Nl}{{{f{Nn}}}Nn}{{{f{{O`{c}}}}}{{O`{c}}}{nOb}}{{{f{c}}{f{Bje}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{Fbb}000{Nf{{l{c}}}C`}{{{Nh{Bh}}}Md}{{{Nh{{Df{Dd}}}}}Ed}{OdMd}{OfEd}{NlFd}`{{{O`{c}}}{{l{c}}}n}{cc{}}000{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}{f{{Df{c}}}}}Oh{}}{{{f{Bh}}{f{{Df{{B`{c}}}}}}}Oh{}}{{}Fb}000{ce{}{}}000`{{{f{Bh}}Fb}{{Nh{c}}}{NjLh}}{{{f{Bh}}Fb}Nl}{{{f{Bh}}Fb}Nn}{{{f{Bh}}Fb}{{O`{c}}}n}{{{f{BjNf}}}b}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}000;;;;````````{{{f{BjOj}}{f{Fl}}}b}{{{f{BjOj}}}b}{{{f{BjOl}}}b}{{{f{BjOn}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{B`}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{}}}}Gj}}{{{f{BjA@b}}}b}54{{{f{BjA@d}}}b}{{{f{BjA@f}}}b}{{{f{BjOn}}}b}{{{f{BjA@h}}}b}{{{f{Bj{A@`{c}}}}}bn}{{{f{BjOj}}{B`{{f{Fl}}}}}b}{{{f{BjOj}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{BjA@b}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{B`{{f{Df}}}}}bn}{{{f{BjA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BjOj}}{f{Ad}}}{{Af{b}}}}{{{f{BjOl}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BjOn}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@h}}{f{Ad}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bj{A@`{c}}}}{f{Df}}}bn}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{B`{{f{Bh}}}}}}}}Gj}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{B`{{f{{Df{Dd}}}}}}}}}}Gj}}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{f{Bh}}}}}}}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{f{{Df{Dd}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000`{{}Oj}{{}Ol}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{Fbb}000000{{{f{A@d}}}d}{{{f{A@f}}}d}{{{f{On}}}d}{{{f{{A@`{c}}}}}dn}{{{f{A@b}}}d}{{{f{A@d}}}{{f{Lb}}}}{{{f{A@f}}}{{f{Lb}}}}{{{f{On}}}{{f{Lb}}}}{{{f{{A@`{c}}}}}{{f{Lb}}}n}{{{f{A@b}}}{{f{Lb}}}}{{{f{BjOj}}}Dl}{{{f{BjOl}}}Dl}{{{f{BjA@h}}}Dl}{{{f{BjA@b}}}Dl}{cc{}}000000{{{f{Dh}}FbFb{f{Bh}}}{{Af{{A@j{A@b}}}}}}{{}Fb}000000{{{f{BjA@d}}}El}{{{f{BjA@f}}}El}{{{f{BjOn}}}El}{{{f{Bj{A@`{c}}}}}Eln}{{{f{BjA@b}}}El}{ce{}{}}000000{{{f{Bh}}Fb{B`{Dh}}}Oj}{{{f{Bh}}Fb{B`{Dh}}}Ol}{{{f{Bh}}FbFb}A@d}{{{f{Bh}}FbFb}A@f}{{{f{Bh}}FbFb}On}{{{f{Bh}}Fb}A@h}{{{f{Bh}}FbFbDh}{{A@`{c}}}n}{{{f{Bh}}FbFbDhDh}{{A@`{c}}}n}{c{{G`{e}}}{}{}}0000000000000{{{f{c}}}Mh{}}000000:::::::``{{A@l{f{Bh}}}{{l{c}}}C`}{{A@n{f{{l{c}}}}}{{l{c}}}C`}10{{A@n{f{Bh}}Dh}{{l{c}}}C`}0{{A@l{f{Bh}}}{{G`{{l{c}}e}}}C`{}}{{A@n{f{{l{c}}}}}{{G`{{l{c}}e}}}C`{}}10{{A@n{f{Bh}}Dh}{{G`{{l{c}}e}}}C`{}}0`{AA`AA`}``{{AAb{f{Bh}}Dh}e{}{{AAd{c}}}}{{e{f{Bh}}Dh}AAd{}{{Gh{}{{Bb{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAf}}}AAh}{{{f{BjAAh}}}{{B`{c}}}{}}{{{f{Bj{AAj{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{AAj{c}}}}}{{B`{e}}}F`{}}`{{{f{AAh}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{{AAj{c}}}}}{{Gf{Fb{B`{Fb}}}}}Bf}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}088``````{{{f{c}}h}b{}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{f{c}}}}}}}}{{AAne}g{}{{Ff{}{{Bb{c}}}}}{}}0{{{f{H`}}}{{f{AB`}}}}{{{f{{AAl{c}}}}}{{f{AB`}}}Hb}{{{f{Bj{AAl{c}}}}}{{f{BjAB`}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`{{{f{{AAl{c}}}}}{{AAl{c}}}{HbOb}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{AAl{c}}}}}{{f{AAn}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{{f{H`}}}}{f{{f{H`}}}}}d}{{{f{H`}}{f{H`}}}d}{{{f{{AAl{c}}}}{f{BjFh}}}Fj{HbABb}}{cc{}}{{FbAAn}{{AAl{c}}}Hb}{{{f{{AAl{c}}}}Fb}{{B`{{f{c}}}}}Hb}{{}AAn}{{{f{Gd}}{f{{AAl{c}}}}{f{{AAl{c}}}}}{{AAl{c}}}Hb}{{AAn{f{Gd}}cc}{{AAl{e}}}{}Hb}{{{f{Gd}}{f{{AAl{c}}}}e}{{AAl{c}}}Hb{}}{{{f{Gd}}c{f{{AAl{e}}}}}{{AAl{e}}}{}Hb}{{}Fb}{ce{}{}}{{{f{{AAl{c}}}}}eHb{}}{{{f{{AAl{c}}}}Fb}dHb}{{{f{c}}Fb}d{}}1{{{f{{AAl{c}}}}}{{ABh{{f{c}}{ABd{c}}ABf}}}Hb}{{{f{{AAl{c}}}}}{{ABh{egABf}}}Hb{}{}}{{{f{{AAl{c}}}}}FbHb}0`{{{f{Bj{AAl{c}}}}{B`{Gd}}}bHb}{{{f{Bj{AAl{c}}}}FbFb}bHb}{{{f{c}}FbFb}e{}{}}01{{{f{H`}}}{{A@j{H`}}}}{{{f{{AAl{c}}}}}{{A@j{Fl}}}Hb}{{{f{c}}}e{}{}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{B`{{f{c}}}}e}}}}}}}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{f{c}}e}}}}}}}}{{AAng}{{G`{ie}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}{}}0{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{H`}}}{{f{Bh}}}}{{}{{f{Bh}}}}{{{f{{AAl{c}}}}}{{B`{{f{Gd}}}}}Hb}{{{f{{AAl{c}}}}Fb}{{f{c}}}Hb}{{{f{{AAl{c}}}}Fb}eHb{}}1{{{f{{AAl{c}}}}}{{f{{ABj{{En{c}}}}}}}Hb}{{{f{{AAl{c}}}}}eHb{}}{{{f{{AAl{c}}}}}{{ABd{c}}}Hb}{ce{}{}}{{{f{{AAl{c}}}}{B`{Gd}}}{{A@j{Fl}}}Hb}{{{AAl{c}}{B`{Gd}}}{{AAl{c}}}Hb}0`{{{f{Bj{ABl{c}}}}}bHb}0{{{f{Bj{ABl{c}}}}{B`{c}}}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}bHb}{{{f{Bj{ABl{c}}}}c}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}{{Af{b}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}{{ABl{c}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{ABl{c}}}{{ABn{c}}}Hb}{cc{}}{{}Fb}{ce{}{}}{{{f{Bh}}Fb}{{ABl{c}}}Hb}{{{f{Bj{ABl{c}}}}}AdHb}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4````{{{f{BjAC`}}}b}{{{f{BjAC`}}{B`{{f{AB`}}}}}b}{{{f{BjAC`}}{f{AB`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`?>={{{f{ACb}}{f{BjFh}}}Fj}<{{{f{Bh}}Fb}{{A@j{AC`}}}}{{}ACd}{{}AAn}>={{}d}`{{ACfACdAAn}b}{{{f{BjAC`}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{ACl}}{f{Cd}}}ACl}{{{f{ACl}}{f{Cd}}}{{l{c}}}C`}{{{f{{ACj{}{{ACh{c}}}}}}i{f{Bj{Df{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{ACn}}Dn}E`}{{{f{ACn}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AD`}}}{{Af{E`}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{ADb}}{f{Dh}}}{{Af{Ad}}}}0{{{f{ADd}}}ADd}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{ADd}}{f{ADd}}}d}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{Ad}}}}{{{f{ADh}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}`{{{f{ADl}}c}{{Af{ADl}}}{}}{{{f{ADn}}{f{Fd}}}{{Af{{l{c}}}}}C`}`{{{f{ADd}}{f{BjFh}}}Fj}{cc{}}`{{{f{Bh}}cFb}AE`{}}{{{f{Bh}}Fb}AEb}`{{{f{AEd}}Fb}{{Af{Gl}}}}{{{f{AEd}}Fb}Gl}::{{{f{ADd}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{AEh}}}{{Af{Fd}}}}{{{f{AEj}}}{{Af{Fd}}}}??{{{f{AEl}}}{{B`{c}}}{}}{{{f{AEl}}}{{B`{Jj}}}}{{{f{AEn}}}{{B`{c}}}{}}2{{{f{AEl}}}{{B`{{Gf{cc}}}}}{}}{{{f{AD`}}}{{Af{Fb}}}}{{{f{AF`}}FbFb}{{l{c}}}C`}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{{ADj{Il}}}}}}{{{f{AEn}}JjL`}{{Af{{B`{c}}}}}{}}{{{f{AFb}}}AFb}{{{f{AFd}}{f{Cd}}Ld}{{Af{Ad}}}}{{{f{AFf}}c{B`{e}}}{{Af{AFf}}}{{Ff{}{{Bb{Lf}}}}}{}}{{{f{AFf}}ci}{{Af{AFf}}}{{Ff{}{{Bb{Lf}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AFf}}{f{Fd}}{B`{c}}}{{Af{AFf}}}{}}{{{f{AFh}}Il}{{l{c}}}C`}{{{f{AFj}}Ilc}{{l{e}}}{}C`}`{{{f{ACn}}d}{{l{c}}}C`}{{{f{ACn}}Dn}{{l{c}}}C`}{{{f{AFl}}Dd}{{B`{Jj}}}}{{{f{AEl}}}{{B`{c}}}{}}{{{f{AFn}}{f{c}}}{{Af{AFn}}}Lh}{{{f{AG`}}{f{c}}}AG`Lh}{{{f{AGb}}}{{En{{f{{Df{Dd}}}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{AD`}}}{{Af{AD`}}}}8{ce{}{}}`{{{f{AGd}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AGf{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`{FlAGh}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Fl{{Cj{}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{G`{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AGj{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bh}}}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{G`{{l{c}}g}}}C`C`AGl{{Cj{ff}{{Cb{{G`{{A@j{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{G`{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{G`{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{FlAGh}AGl{{Cj{f}{{Cb{{G`{eg}}}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AGn{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AGnC`}{{{f{{l{c}}}}g}{{l{i}}}C`Fl{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}C`Fl{{Cj{}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{FlAGh}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{HdHd}Hd}{{{f{E`}}Lf}{{Af{b}}}}{{{f{{AH`{Lf}}}}Lf}{{Af{b}}}}````{{{f{c}}h}b{}}{{AHb{f{c}}d}LfAGh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{AHb}}}AHb}{{{f{c}}{f{Bje}}}b{}{}}{{}AHb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AHb}}{f{AHb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AHb}}{f{BjFh}}}Fj}{cc{}}{{{f{AHb}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fb{l{c}}}}}C`}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4`{{Fb{f{Bj{En{d}}}}}b}```{{{f{AHd}}FbFb}AHd}0{{Fb{f{{Df{Ad}}}}{f{BjEb}}}{{Af{{AHf{E`}}}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}d}{{Af{AHh}}}}{{{f{Bh}}{f{{Df{Ad}}}}{f{{Df{d}}}}d}{{Af{AHj}}}}{{{f{Bh}}{f{{Df{Ad}}}}}{{Af{AHj}}}}{{{f{Ad}}}{{Af{El}}}}{{{f{{Df{Ad}}}}}{{Af{AHh}}}}{{{f{{Df{Ad}}}}}{{Af{AHj}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{{f{Dn}}}Dn}{{{f{Eb}}}Eb}{{{f{c}}{f{Bje}}}b{}{}}0{{}Dn}{{}Eb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0``{Fbb}0{{{f{Dn}}{f{Dn}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dn}}{f{BjFh}}}Fj}{{{f{Eb}}{f{BjFh}}}Fj}{cc{}}{{{f{Eb}}}Dn}{{{f{Dn}}}Eb}2{{{f{Dn}}{f{Bjc}}}bAEf}{{{f{Eb}}{f{Bjc}}}bAEf}{{}Fb}0{ce{}{}}0````{{}Dn}{{}Eb}``{{{f{AHd}}FbFb}AHd}0{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066{{Dnd}Dn}{{Ebd}Eb}101010{{Ebc}Eb{{Ff{}{{Bb{d}}}}}}{DnDn}{EbEb}`{AHlIl}00{{}d}>>0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dl}}}d}{{{f{Hl}}{f{Hl}}}c{}}{{FdFd}c{}}{{{f{Fd}}{f{Fd}}}c{}}{{{f{Md}}{f{Bh}}}c{}}{{{f{Md}}{f{Md}}}c{}}{{MdMd}c{}}{{EdEd}c{}}{{{f{Ed}}{f{{Df{Dd}}}}}c{}}{{{f{Ed}}{f{Ed}}}c{}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ed}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fd}}{f{Aj}}}Ad}{{{f{Md}}{f{Aj}}}Ad}{{{f{Ed}}{f{Aj}}}Ad}{{{f{{ABn{c}}}}{f{Aj}}}AdHb}{{{f{Fd}}}d}{{{f{Fd}}}{{B`{d}}}}{{{f{Dl}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Dl}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cd{{B`{Ad}}}{{Cb{{B`{Ad}}}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{Md}}c}Md{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{{AI`{Bh}}}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{B`{{f{{Df{Dd}}}}}}}{{Cb{{B`{{AI`{{Df{Dd}}}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{Dl}}c}Dl{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AIb}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{AId}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{Fd}}{f{Cd}}}Fd}{{{f{Md}}{f{Cd}}}Md}{{{f{Ed}}{f{Cd}}}Ed}{{{f{Fd}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}{f{Cd}}}{{l{c}}}C`}{{{f{Ed}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}c}Md{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{Ed}}c}Ed{{Cj{{f{{Df{Dd}}}}}{{Cb{{f{{Df{Dd}}}}}}}}}}{{{f{Md}}c}Md{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{Dl}}{f{Cd}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bj{Df{c}}}}}b{}{{Cd{{B`{Ad}}{f{c}}}{{Cb{c}}}}}}{{{f{Fd}}e{f{Bj{Df{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{Md}}e{f{Bj{Df{c}}}}}b{}{{Cd{{B`{{f{Bh}}}}{f{c}}}{{Cb{c}}}}}}{{{f{Ed}}e{f{Bj{Df{c}}}}}b{}{{Cd{{B`{{f{{Df{Dd}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{ABn{c}}}}g{f{Bj{Df{e}}}}}bHb{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{Dl}}c}Dl{{Cd{Ad}{{Cb{Ad}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{d}{{Cb{d}}}}Cf}}{{{f{Md}}c}Md{{Cd{{f{Bh}}}{{Cb{{AI`{Bh}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{f{{Df{Dd}}}}}{{Cb{{AI`{{Df{Dd}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{Fd}}Dn}E`}{{{f{Md}}Dn}E`}{{{f{Ed}}Dn}E`}{{{f{AHj}}Dn}E`}{{{f{Fd}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Md}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Ed}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AHj}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Fd}}}{{Af{E`}}}}{{{f{Md}}}{{Af{E`}}}}{{{f{Ed}}}{{Af{E`}}}}{{{f{{ABn{c}}}}}{{Af{E`}}}Hb}{eAIf{}{{Ff{}{{Bb{c}}}}}}0{{AAne}AIh{}{{Ff{}{{Bb{c}}}}}}0{{{f{Jh}}}Gl}{{{f{Md}}}Ed}{{{f{Gl}}}Gl}{{{f{Dh}}}{{f{Dh}}}}{{{f{Lb}}}{{f{Dh}}}}{{{f{AIj}}}{{f{Dh}}}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{{f{{Df{c}}}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlC`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{FdFd}c{}}{{{f{Fd}}{f{Fd}}}c{}}0110{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000000000000000000000000000000{Dh{{A@j{Dh}}}}{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Hl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Dl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Fd}}{f{Dh}}}{{Af{Ad}}}}{{{f{Md}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ed}}{f{Dh}}}{{Af{Ad}}}}{{{f{AHj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Gl}}{f{Dh}}}Gl}54321`{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}0000{{{f{AIb}}{f{Ad}}}{{Af{Ad}}}}{{{f{AId}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AJl{ce}}}}}{{AJl{ce}}}C`C`}{{{f{Jh}}}Jh}{{{f{AJn}}}AJn}{{{f{Gl}}}Gl}{{{f{AK`}}}AK`}{{{f{Dh}}}Dh}{{{f{Lb}}}Lb}{{{f{AKb}}}AKb}{{{f{AKd}}}AKd}{{{f{AKf}}}AKf}{{{f{Kd}}}Kd}{{{f{Jn}}}Jn}{{{f{AKh}}}AKh}{{{f{AKj}}}AKj}{{{f{Kh}}}Kh}{{{f{Kb}}}Kb}{{{f{Cl}}}Cl}{{{f{Cn}}}Cn}{{{f{AKl}}}AKl}{{{f{AKn}}}AKn}{{{f{D`}}}D`}{{{f{Db}}}Db}{{{f{AL`}}}AL`}{{{f{Al}}}Al}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{AAn}}}AAn}{{{f{ALj}}}ALj}{{{f{c}}{f{Bje}}}b{}{}}00000000000000000000000000000{{{f{BjLb}}Dh}b}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{Dh}}}d}00{ALnDh}{{{f{Lb}}}{{f{Dh}}}}{{}Gl}{{}AK`}{{}Dh}{{}AAn}{{{f{{AJl{ce}}}}}{{f{g}}}C`C`{}}{Fb{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj{AJl{ce}}}}}{{f{Bjg}}}C`C`{}}{Fb{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AJj}}}{{f{Dh}}}}{{{f{Hl}}}{{f{Dh}}}}{{{f{Jh}}}{{f{Dh}}}}{{{f{Gl}}}Dh}`{{{f{Gl}}{f{Gl}}}d}{{{f{AK`}}{f{AK`}}}d}{{{f{Dh}}{f{Dh}}}d}{{{f{Dh}}{f{AAn}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{AKb}}{f{AKb}}}d}{{{f{AAn}}{f{AAn}}}d}{{{f{ALj}}{f{ALj}}}d}{{{f{Gl}}{f{Gl}}d}d}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Df{Dd}}}}}Fd}542301{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dl}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}{{{f{Md}}}{{Af{{Gf{Ad{ADj{Il}}}}}}}}{{{f{{AJl{ce}}}}}LbC`C`}{{{f{Fd}}d}{{Af{Fd}}}}{{{f{Ed}}{f{{Df{Dd}}}}}{{Af{Ed}}}}{{{f{Dl}}{f{Fd}}}{{Af{Dl}}}}{{{f{Fd}}{f{Fd}}}{{Af{{l{Al}}}}}}{{{f{Md}}{f{Fd}}}{{Af{{l{D`}}}}}}{{{f{Ed}}{f{Fd}}}{{Af{{l{Db}}}}}}{{{f{AHj}}{f{Fd}}}{{Af{AHj}}}}{{{f{{ABn{c}}}}{f{Fd}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Dl}}{f{BjFh}}}Fj}{{{f{Md}}{f{BjFh}}}Fj}{{{f{Ed}}{f{BjFh}}}Fj}{{{f{{ABn{c}}}}{f{BjFh}}}FjHb}{{{f{AJn}}{f{BjFh}}}Fj}{{{f{Gl}}{f{BjFh}}}Fj}0{{{f{AK`}}{f{BjFh}}}Fj}{{{f{Dh}}{f{BjFh}}}Fj}0{{{f{Lb}}{f{BjFh}}}Fj}{{{f{AKb}}{f{BjFh}}}Fj}0{{{f{AAn}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{ALj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{Dl}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}0000000{cGlAMd}{dGl}{{{f{Bh}}}Gl}3{{{B`{c}}}Gl{{AMf{Gl}}}}{{{f{{Df{Dd}}}}}Gl}5{GlDh}{{{f{Gl}}}Dh}{{{f{AAn}}}Dh}88{{{f{AMh}}}Lb}{{{f{Gl}}}Lb}:{{{f{ALj}}}AKb};;;;;;;;;;;;;;;;;;;;;{AMjAAn}{AMlAAn}={{{f{AAn}}d}Dh}{cDl{{Ff{}{{Bb{{B`{{A@j{Fl}}}}}}}}}}{cDl{{Ff{}{{Bb{{B`{Ad}}}}}}}}{eDl{{AMn{Ad}}}{{Ff{}{{Bb{c}}}}}}{cFd{{Ff{}{{Bb{d}}}}}}{eMd{{Jl{Bh}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eMd{{`{Bh}}}{{Ff{}{{Bb{c}}}}}}{eEd{{Jl{{Df{Dd}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eEd{{`{{Df{Dd}}}}}{{Ff{}{{Bb{c}}}}}}{e{{ABn{c}}}Hb{{Ff{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{{f{Bh}}e}Md{{Jl{Bh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Ed{{Jl{{Df{Dd}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{{B`{c}}}}}}}};:98756{eAHj{{Jl{{Df{Dd}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eAHj{{`{{Df{Dd}}}}}{{Ff{}{{Bb{c}}}}}}6{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{d}}}}}}{{{f{Bh}}e}Md{{Jl{Bh}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}Ed{{Jl{{Df{Dd}}}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{c}}}}}}{{AN`Dh}Lb}{cDl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{cFd{{Gh{}{{Bb{{B`{d}}}}}}}}{cFd{{Gh{}{{Bb{d}}}}}}{eMd{{`{Bh}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{eMd{{Jl{Bh}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eEd{{Jl{{Df{Dd}}}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eEd{{`{{Df{Dd}}}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{{c{f{Bh}}Dh}Dl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{{{f{Bh}}{f{{Df{d}}}}}Fd}{{{f{Bh}}{f{{Df{c}}}}}Md{{Jl{Bh}}}}{{{f{Bh}}{f{{Df{c}}}}}Ed{{Jl{{Df{Dd}}}}}}{{{f{Bh}}{f{{Df{c}}}}}{{ABn{c}}}Hb}{{{f{Bh}}{f{{Df{{B`{d}}}}}}}Fd}{{{f{Bh}}{f{{Df{{B`{c}}}}}}}Md{{Jl{Bh}}}}{{{f{Bh}}{f{{Df{{B`{c}}}}}}}Ed{{Jl{{Df{Dd}}}}}}{{{f{Bh}}{f{{Df{{B`{c}}}}}}}{{ABn{c}}}Hb}{cFd{{Gj{}{{Bb{{B`{d}}}}}}}}{{{En{c}}AAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{En{c}}AAn}{{AGh{}{{AIl{e}}{AIn{c}}{AJ`{g}}}}}{AJb{AJd{e}}}Ob{{F`{}{{Bb{e}}}}GjHnI`}}{{FbcAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}{f{Ad}}Fb}Dl}{{{f{Bh}}dFb}Fd}{{{f{Bh}}{f{Bh}}Fb}Md}{{{f{Bh}}{f{{Df{Dd}}}}Fb}Ed}{{{f{Bh}}{f{{Df{Dd}}}}Fb}AHj}{{{f{Bh}}cFb}{{ABn{c}}}Hb}{{FbAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}Fb}Dl}{{{f{Bh}}Fb}Fd}{{{f{Bh}}Fb}Md}{{{f{Bh}}Fb}Ed}{{{f{Bh}}Fb}AHj}{{{f{Bh}}Fb}{{ABn{c}}}Hb}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Hl}}Fb}{{Af{Gl}}}}{{{f{AJj}}Fb}{{Af{Gl}}}}0{{{f{Dl}}Fb}{{Af{Gl}}}}{{{f{Fd}}Fb}{{Af{Gl}}}}{{{f{Md}}Fb}{{Af{Gl}}}}{{{f{Ed}}Fb}{{Af{Gl}}}}{{{f{AHj}}Fb}{{Af{Gl}}}}{{{f{{ABn{c}}}}Fb}{{Af{Gl}}}Hb}{{{f{Hl}}Fb}Gl}{{{f{AJj}}Fb}Gl}0{{{f{Dl}}Fb}Gl}{{{f{Fd}}Fb}Gl}{{{f{Md}}Fb}Gl}{{{f{Ed}}Fb}Gl}{{{f{AHj}}Fb}Gl}{{{f{{ABn{c}}}}Fb}GlHb}{{{f{Dl}}Fb}{{B`{Ad}}}}{{}Dh}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{ABn{c}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{Gl}}}{{B`{{f{Bh}}}}}}{{{f{ANd}}Fb}Gl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}Fb}{{{f{Md}}}Fb}{{{f{AHj}}}Fb}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fd}}dd}{{Af{Aj}}}}{{{f{Md}}dd}{{Af{Aj}}}}{{{f{Ed}}dd}{{Af{Aj}}}}{{{f{AHj}}dd}{{Af{Aj}}}}{{{f{{ABn{c}}}}dd}{{Af{Aj}}}Hb}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{{Df{Dd}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}542301{{{f{Gl}}{f{Bjc}}}bAEf}{{{f{AK`}}{f{Bjc}}}bAEf}{{{f{Dh}}{f{Bjc}}}bAEf}{{{f{Lb}}{f{Bjc}}}bAEf}{{{f{AKb}}{f{Bjc}}}bAEf}{{{f{AAn}}{f{Bjc}}}bAEf}{{{f{ALj}}{f{Bjc}}}bAEf}{{{f{Gl}}{f{Bjc}}d}bAEf}{{}Fb}0000000000000000000000000000000000{{{f{Dl}}}Dh}{{{f{Dh}}}{{B`{{f{Dh}}}}}}{{{f{AAn}}}{{B`{{f{AAn}}}}}}{ce{}{}}0000000000000000000000000000000000{{ANf{B`{Fb}}Fb}{{Af{Hl}}}}{{ANf{B`{Fb}}Fb}Hl}{{{f{Dl}}}c{}}{{{f{Fd}}}c{}}{{{f{Md}}}c{}}{{{f{Ed}}}c{}}{{{f{AHj}}}c{}}{{{f{{ABn{c}}}}}eHb{}}{HlAd}{ANfAd}{{Jh{f{Bh}}}Ad}{Gl{{Af{Gl}}}}{{{f{Dh}}}d}00{{{f{Gl}}}d}111010111110101011110111101{{{f{AAn}}}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{ABh{cgABf}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}{{`{{Bf{}{{Bb{Il}}}}}}}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Df{Dd}}}}}Fd}543201{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Dh}}{f{Dh}}}{{Af{d}}}}{{{f{Fd}}}{{B`{d}}}}{{{f{Fd}}}Jh}{{{f{Md}}}Jh}{{{f{Ed}}}Jh}{{{f{Fd}}}{{B`{Jj}}}}{{{f{AIb}}}{{B`{Hf}}}}{{{f{AId}}}{{B`{Jj}}}}{{{f{AIb}}}Jh}{{{f{AId}}}Jh}{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}9876{{{f{Bh}}{f{{Df{Dd}}}}FbFb}Fd}{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}}{{Af{Fb}}}}{{{f{Ed}}}{{Af{Fb}}}}{{{f{Lb}}}{{f{AN`}}}}`{{}c{}}00{{{f{Bh}}c}Md{{Jl{{Df{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Md{{Jl{{Df{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Md{{Jl{{Df{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}c}Md{{Jl{{Df{{f{Bh}}}}}}}}{{{f{Bh}}c}Ed{{Jl{{Df{{B`{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bh}}c}Ed{{Jl{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bh}}c}Ed{{Jl{{Df{{AI`{{Df{Dd}}}}}}}}}}{{{f{Bh}}c}Ed{{Jl{{Df{{B`{{AI`{{Df{Dd}}}}}}}}}}}}{{{f{Bh}}{f{{Df{c}}}}}{{ABn{c}}}Hb}{{{f{Bh}}e}{{ABn{c}}}Hb{{Jl{{Df{{B`{c}}}}}}}}{{DhGl}Jh}{{{f{Bh}}Dh}Lb}{{{f{Bh}}}{{ABn{c}}}Hb}{{{f{Dl}}FbFb}Dl}{{{f{Fd}}FbFb}Fd}{{{f{Md}}FbFb}Md}{{{f{Ed}}FbFb}Ed}{{{f{AHj}}FbFb}AHj}{{{f{{ABn{c}}}}FbFb}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}Gd}{{ABn{c}}}Hb}{Fdc{}}{{{f{Fd}}}c{}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Df{Dd}}}}}Fd}542310{{{f{Dl}}}{{Af{{ADj{Il}}}}}}{{{f{Md}}}{{Af{{ADj{Il}}}}}}{{{f{Dl}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{BjDl}}}{{`{{Kn{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kn{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Gl}}{f{Gl}}}{{B`{ANh}}}}{{{f{AKb}}{f{AKb}}}{{B`{ANh}}}}{{{f{Hl}}}{{B`{Fb}}}}{{{f{{AJl{ALbHj}}}}}{{B`{Fb}}}}{{{f{AIb}}JjL`}{{Af{{B`{Hf}}}}}}{{{f{AId}}JjL`}{{Af{{B`{Jj}}}}}}{{{f{AIb}}JjL`}{{Af{Jh}}}}{{{f{AId}}JjL`}{{Af{Jh}}}}{{{f{Bh}}FbJj}{{Af{Fd}}}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fd}}}Fd}{{{f{Md}}}Md}{{{f{Ed}}}Ed}{{{f{AHj}}}AHj}{{{f{{ABn{c}}}}}{{ABn{c}}}Hb}`{{{f{Hl}}}Fb}{{{f{{AJl{ALbHj}}}}}Fb}{{{f{Fd}}c{B`{d}}}{{Af{Fd}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Md}}c{B`{{f{Bh}}}}}{{Af{Md}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Ed}}c{B`{{f{{Df{Dd}}}}}}}{{Af{Ed}}}{{Ff{}{{Bb{Lf}}}}}}{{{f{Fd}}ce}{{Af{Fd}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{Md}}ce}{{Af{Md}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{Dj}}}}}}}}{{{f{Ed}}ce}{{Af{Ed}}}{{Ff{}{{Bb{Lf}}}}}{{Cd{{B`{{f{{Df{Dd}}}}}}}{{Cb{{B`{{En{Dd}}}}}}}}}}{{{f{Fd}}{f{Fd}}{B`{d}}}{{Af{Fd}}}}{{{f{Md}}{f{Fd}}{B`{{f{Bh}}}}}{{Af{Md}}}}{{{f{Ed}}{f{Fd}}{B`{{f{{Df{Dd}}}}}}}{{Af{Ed}}}}{{{f{BjDl}}}b}{{{f{BjDl}}Dh}b}{{{f{BjLb}}AN`}b}{{{f{Dl}}Il}Dl}{{{f{Fd}}Il}Fd}{{{f{Md}}Il}Md}{{{f{Ed}}Il}Ed}{{{f{AHj}}Il}AHj}{{{f{{ABn{c}}}}Il}{{ABn{c}}}Hb}{{{f{Dl}}Il{B`{{f{Ad}}}}}Dl}{{{f{Fd}}Il{B`{d}}}Fd}{{{f{Md}}Il{B`{{f{Bh}}}}}Md}{{{f{Ed}}Il{B`{{f{{Df{Dd}}}}}}}Ed}{{{f{AHj}}Il{B`{{f{{Df{Dd}}}}}}}AHj}{{{f{{ABn{c}}}}Il{B`{{Gn{c}}}}}{{l{{Gn{c}}}}}Hb}{{{f{Fd}}d}Fd}{{{f{Md}}d}Md}{{{f{Ed}}d}{{l{Db}}}}{{{f{AHj}}d}AHj}{{{f{Fd}}Dn}{{l{Al}}}}{{{f{Md}}Dn}{{l{D`}}}}{{{f{Ed}}Dn}{{l{Db}}}}{{{f{AHj}}Dn}AHj}{{{f{AIb}}Dd}Jh}{{{f{AId}}Dd}Jh}{{{f{Gl}}{f{Dh}}}{{B`{Gl}}}}`{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Fd}}}{{B`{Lf}}}}{{{f{Fd}}}Jh}{{{f{Md}}}Jh}{{{f{Ed}}}Jh}{{{f{Md}}{f{c}}}Md{{Jl{{Df{Lf}}}}Lh}}{{{f{Md}}{f{E`}}}Md}{{{f{Ed}}{f{E`}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Jl{{Df{Lf}}}}Lh}}{{{f{Dh}}d}AAn}{{{f{Lb}}d}AMh}{AKbALj}{{{f{Dh}}{f{Bh}}d}AMh}{AKb{{f{Bh}}}}{{{f{Md}}Fb}{{Af{Ad}}}}{{{f{BjDl}}Dh}b}{{{f{AAn}}}{{f{AAn}}}}{{{f{Dl}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Dh}}}Dh}{{{f{AAn}}}ANj}{{{f{c}}}Dj{}}00{{{f{Ed}}}Md}{{{f{Gl}}{f{Gl}}}d}{{{f{Dl}}c}{{Af{Dl}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{g{{G`{AIfe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{{AAng}{{G`{AIhe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{{{f{Gl}}}{{Af{c}}}Jf}{c{{G`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gl}}{f{Dh}}}{{Af{Gl}}}}{{{f{Dh}}d}{{Af{AAn}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}0000000000000000000000000000000000{{{f{AAn}}}AAn}{{{f{Fd}}}{{Af{Fd}}}}{{{f{Md}}}{{Af{Md}}}}{{{f{Ed}}}{{Af{Ed}}}}{{{f{{ABn{c}}}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{{f{BjJh}}Gl}b}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}cOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Jh}}}{{f{Gl}}}}1{{{f{Dh}}Gl}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}gOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{AIb}}Dd}Jh}{{{f{AId}}Dd}Jh}{{{f{Fd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}Hb}{{{f{Fd}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}Hb}{ce{}{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{AOj{ce}}}{}{}}{{{f{{Df{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}{B`{Gd}}}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dh}}}Gl}{{{f{Dl}}{f{{l{c}}}}e}DlC`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJf}}}d}{{AJfd}AJf}{{{f{BjAOl}}{B`{{f{Bh}}}}}b}{{{f{BjAJf}}{f{AJf}}}{{Af{b}}}}{{{f{BjAOl}}}b}{{{f{BjAOl}}{f{Bh}}}b}{{{f{AJf}}Dn}E`}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJf}}{f{Dh}}}{{Af{Ad}}}}{{{f{AJf}}}AJf}{{{f{c}}{f{Bje}}}b{}{}}{{}AOn}{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{{AOlc}AJf{{Ff{}{{Bb{{B`{{f{Bh}}}}}}}}}}{Fbb}000{{{f{AJf}}}{{f{Dh}}}}{{{f{AJf}}{f{Md}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}{{{f{AJf}}{f{Bh}}}c{}}210{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{AOlAJf}{AOn{{ABj{B@`}}}}{cc{}}000{{AM`{ABj{B@`}}dB@b}AJf}{{AM`B@b}AJf}{{{f{Md}}{f{ALn}}B@b}{{Af{AJf}}}}{{{f{Bh}}dFbB@b}AJf}{{{f{AJf}}Fb}{{Af{Gl}}}}{{{f{AJf}}Fb}Gl}{{{f{AJf}}}{{f{{ABj{B@`}}}}}}=;<;<={{}Fb}000{ce{}{}}0000{AJfAd}{{{f{AJf}}}d}0{{{f{AJf}}}B@d}{{{f{AJf}}}Fb}{{{f{AJf}}{f{Bh}}}c{}}{{{f{AJf}}{f{Md}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}210{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{AJf}}}Jh}{{{f{BjAOn}}{f{{ABj{B@`}}}}}{{Af{b}}}}1{{{f{AJf}}}{{Af{Fb}}}}{{{f{AJf}}}{{f{Bh}}}}{{{f{Bh}}FbB@b}AOl}{{{ABj{B@`}}}AOn}{{{f{BjB@d}}}{{B`{c}}}{}}:;9;9:<{{{f{AJf}}}{{f{AM`}}}}{{{f{BjAOl}}{f{Bh}}}{{Gf{Kfd}}}}`{{{f{B@d}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{AJf}}d}AJf}{{{f{AJf}}Dn}AJf}`{{{f{AJf}}dd}El}{{{f{AJf}}{f{ALn}}B@f}AJf}{{{f{AJf}}}{{Af{AJf}}}}{{{f{AJf}}}AJf}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}0004{{{f{AJf}}}d}{{{f{AJf}}}{{Af{B@h}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{ALnB@`}{{{f{B@b}}}B@b}{{{f{B@`}}}B@`}{{{f{c}}{f{Bje}}}b{}{}}0{{}B@b}{{}B@`}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{B@b}}{f{B@b}}}d}{{{f{B@`}}{f{Bh}}}{{B`{Kf}}}}{{{f{B@b}}{f{BjFh}}}Fj}{{{f{B@`}}{f{BjFh}}}Fj}{cc{}}0{{{f{B@`}}Kf}{{f{Bh}}}}{{{f{B@`}}}{{f{ALn}}}}{{{f{B@`}}Kf}{{B`{{f{Bh}}}}}}{{}Fb}0{ce{}{}}0{{{f{B@`}}}d}0{{{f{B@`}}}Fb}{{{f{B@`}}{f{B@`}}}d}{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}B@j}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{{}b}{{{f{BjB@j}}}b}{Fbb}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{B@l}}}{{f{Bh}}}}<<;;`99{{{f{B@l}}}f}9966`{{{f{B@n}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{B@l}}{f{BjFh}}}{{G`{bAMb}}}}07{cB@l{{AMf{{AI`{Bh}}}}}}8{{}{{J`{{f{Bh}}B@n}{{Cb{b}}}}}}8877{cAHnAGl}````{{{J`{{f{Bh}}B@n}{{Cb{b}}}}}b}{cAHnBA`}{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAb}}}BAb}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjFh}}BAdFb}Fj}{cc{}}{{}BAf}{{}BAb}{{}{{B`{Fb}}}}{{}Dj}{{}d}{{}Fb}{ce{}{}}{{{B`{BAf}}}b}{BAbb}{{{B`{Fb}}}b}2{{{B`{d}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}7```````````{{{f{c}}h}b{}}00{{{f{BjB@h}}{En{Ad}}{f{BAh}}}{{Af{b}}}}{{{f{B@h}}{f{Cd}}}{{En{Ad}}}}0{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{B@h}}{f{{Df{AN`}}}}}{{Af{B@h}}}}0{{{f{B@h}}IlFb}B@h}{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{BjB@h}}}{{f{BjB@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000{{{f{B@h}}}B@h}{{{f{BAl}}}BAl}{{{f{BAn}}}BAn}2{{{f{c}}{f{Bje}}}b{}{}}00{{{f{B@h}}{f{Bh}}}{{Af{{f{Ad}}}}}}{{{f{B@h}}e}{{Af{{En{{f{Ad}}}}}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{}BAn}{{}B@h}{Fb{{f{c}}}{}}0000{Fb{{f{Bjc}}}{}}0000{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{B@h{f{Ad}}}c{}}{Fbb}0000{{{f{B@h}}{f{Bh}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}}{{Af{Ad}}}}{{{f{B@h}}{f{{Df{c}}}}}B@h{{Jl{Bh}}}}{{{f{B@h}}{f{{BB`{{f{Bh}}}}}}}B@h}{{{f{B@h}}{B`{{f{{Df{c}}}}}}}{{Af{B@h}}}{{Jl{Bh}}}}{{{f{B@h}}}{{En{Dh}}}}<{{{f{BAn}}{f{BAn}}}d}{{{f{B@h}}{f{B@h}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@h}}}Fb}`{{{f{B@h}}e}{{Af{B@h}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}{En{Ad}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}}{{En{Lb}}}}{{{f{B@h}}ADd}{{Af{B@h}}}}{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{BAl}}{f{BjFh}}}Fj}{{{f{BAn}}{f{BjFh}}}Fj}{{{f{B@h}}{f{BjFh}}}Fj}0{cc{}}0000{{{f{BBb}}}B@h}{{{f{BAh}}}B@h}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cB@h{{Ff{}{{Bb{Ad}}}}}}{{{f{{Df{BBd}}}}}{{Af{B@h}}}}{{{f{{Df{BBd}}}}{f{BAh}}}{{Af{B@h}}}}{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{f{BBd}}}}}}}}{{{f{B@h}}Fb}{{B`{{En{Gl}}}}}}{{{f{B@h}}{f{Bh}}}{{B`{Fb}}}}{{{f{B@h}}}{{En{{f{Bh}}}}}}{{{f{B@h}}}{{En{AN`}}}}{{{f{B@h}}}{{f{{Df{Ad}}}}}}{{{f{BjB@h}}}{{f{Bj{En{Ad}}}}}}{{{f{B@h}}Fb}{{Af{BBd}}}}{{{f{B@h}}Fb{f{BjBBd}}}{{Af{b}}}}{{{f{B@h}}Fb{f{BjBBd}}}b}{{{f{B@h}}}{{B`{{Af{Dh}}}}}}`{{{f{B@h}}e}{{Af{BBf}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}0{{{f{B@h}}{En{Ad}}dd}{{Af{BBf}}}}{{{f{BAn}}{f{Bjc}}}bAEf}{{{f{BjB@h}}{B`{Ll}}}{{Af{AO`}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}}Fb}{{{f{B@h}}{f{{Df{Ad}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{{Df{Ad}}}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{{Df{Ad}}}}}{{f{BjB@h}}}}{{{f{B@h}}BBh}{{f{c}}}{}}{{{f{B@h}}{f{Bh}}}{{f{c}}}{}}{{{f{B@h}}Fb}{{f{c}}}{}}{{{f{B@h}}{BBj{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BBl{Fb}}}{{f{c}}}{}}{{{f{B@h}}{K`{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BBn{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BC`{Fb}}}{{f{c}}}{}}{{}Fb}0000{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}{ce{}{}}000000{{{f{B@h}}}{{Af{Fd}}}}{{{f{B@h}}}d}1{{{f{B@h}}}{{In{Ad}}}}{{{f{B@h}}d}BCb}{{{f{B@h}}}BCd}{{{f{B@h}}}{{Af{{B`{Ad}}}}}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}ce}{{Af{B@h}}}{{BCf{AN`}}}{{BCf{AN`}}}}{{{f{B@h}}BCh}{{Af{B@h}}}}3{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}}Fb}{{{En{c}}}{{Af{B@h}}}BAj}{{{En{Ad}}}B@h}{{{En{Ad}}}{{Af{B@h}}}}{{{f{BjBCb}}}{{B`{c}}}{}}{{{f{BjBCd}}}{{B`{c}}}{}}{{{f{B@h}}}B@h}{{{f{B@h}}cd}{{Af{{En{B@h}}}}}{{BCf{Dj}}}}0{{B@he}{{Af{c}}}{}{{Cd{B@h}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}e}{{Af{c}}}{}{{Cd{{f{BjB@h}}}{{Cb{{Af{c}}}}}}}}{{B@hgc}{{Af{e}}}{}{}{{Cd{B@hc}{{Cb{{Af{e}}}}}}}}{{{f{BjB@h}}}{{B`{Ad}}}}{{{f{B@h}}{f{B@h}}}d}?=>{{{f{BjB@h}}{f{Bh}}{f{Bh}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{Bh}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}19`{{{f{B@h}}{f{Ad}}dd{B`{Hh}}}{{Af{B@h}}}}0{{{f{B@h}}Fbdd{B`{Hh}}}{{Af{B@h}}}}{{{f{B@h}}}BAh}{{{f{B@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}e}{{Af{B@h}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}Fb}{{B`{{f{Ad}}}}}}{{{f{B@h}}c}{{Af{B@h}}}{{BCj{Fb}}}}2{{{f{B@h}}c}{{Af{{En{Ad}}}}}{{BCf{AN`}}}}{{{f{B@h}}e{f{BCl}}}{{Af{B@h}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}e{f{BAh}}}{{Af{B@h}}}{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{BjB@h}}{f{{Df{c}}}}}{{Af{b}}}{{Jl{Bh}}}}{{{f{B@h}}}{{Gf{FbFb}}}}{{{f{B@h}}Il}B@h}{{{f{B@h}}}d}{{{f{BjB@h}}}b}{{{f{BCb}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BCd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{B@h}}IlFb}B@h}0{{{f{B@h}}cEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}cEb}{{Af{{f{BjB@h}}}}}{{BCf{AN`}}}}{{{f{BjB@h}}}{{`{{Bf{}{{Bb{B@h}}}}}}}}{{B@hFbd}{{En{B@h}}}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}{f{E`}}}{{Af{B@h}}}}{{{f{B@h}}{f{E`}}}B@h}{{{f{B@h}}{f{E`}}d}B@h}{{{f{B@h}}BCn}{{Af{Mb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dj{}}{{{f{B@h}}FbcEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}{B`{{f{Bh}}}}{B`{{Mf{Dj{En{Dj}}}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{c{{G`{e}}}{}{}}000{BD`{{Af{B@h}}}}1{{{Gf{BDb{f{{Df{AMh}}}}}}}{{Af{B@h}}}}{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{Af{{f{BBd}}}}}}}}}}{{{f{B@h}}{f{Bh}}}{{Af{Fb}}}}44444{{{f{c}}}Mh{}}0000{{{f{B@h}}{B`{{f{{Df{Dj}}}}}}BAn{B`{{Gf{IlFb}}}}}{{Af{B@h}}}}{{{f{B@h}}d{B`{{f{{Df{Dj}}}}}}BAn{B`{{Gf{IlFb}}}}}{{Af{B@h}}}}1{{{f{B@h}}{f{B@h}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{{f{BjB@h}}}}}}{ce{}{}}0000{{{f{B@h}}}Fb}{{{f{BjB@h}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}c{f{BAh}}}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Ad}{{f{BjB@h}}}}{{{f{B@h}}{f{Bh}}{B`{Lf}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}{B`{Lf}}}{{f{BjB@h}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BCh}}}BCh}{{{f{c}}{f{Bje}}}b{}{}}{{}BCh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{BjFh}}}Fj}{cc{}}{{{f{BCh}}{f{Bjc}}}bAEf}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBf}}}{{Af{B@h}}}}`{{{f{BDd}}}{{f{{Df{BDf}}}}}}{{{f{BBf}}c}{{Af{B@h}}}{{Cj{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000{{{f{BDd}}}BDd}{{{f{Aj}}}Aj}{{{f{BBf}}}BBf}{{{f{BDh}}}BDh}{{{f{c}}{f{Bje}}}b{}{}}000:{{}BDd}{{}Aj}{Fb{{f{c}}}{}}00{{{f{BDj}}}{{f{c}}}{}}11111{Fb{{f{Bjc}}}{}}0000000`{{BDle}{}{}{{BDn{c}}}}{Fbb}000{{{f{BjBDd}}}b}1111{{{f{BDd}}{f{BDd}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BE`}}}Lf}{{{f{BDd}}}{{f{{Df{Lf}}}}}}{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjBDd}}}{{f{Bj{En{Lf}}}}}}{{{f{BDd}}{f{BjFh}}}Fj}{{{f{Aj}}{f{BjFh}}}Fj}{{{f{BBf}}{f{BjFh}}}Fj}{{{f{BDh}}{f{BjFh}}}Fj}0{{{f{Bh}}BDh}Dj}{cc{}}000{{{En{BEb}}}BDd}1{{{En{{Gf{{En{Lf}}{En{BDf}}}}}}}BDd}{{{En{{En{BEb}}}}}BDd}3{BDdAj}44{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cBDd{{Ff{}{{Bb{BEb}}}}}}{cBDd{{Gh{}{{Bb{BEb}}}}}}{{{f{Aj}}Fb}BE`}{{{f{BBf}}}{{f{Aj}}}}{{{f{BjBBf}}}{{f{BjAj}}}}{{{f{Aj}}}E`}{{{f{BEd}}dd}{{Af{Aj}}}}0{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjAj}}}{{f{BjBDd}}}}{{}Fb}0000000{ce{}{}}0000000{AjBDd}1{BDdc{}}{{{f{BDd}}}c{}}310{{{f{BE`}}}d}{{{f{Aj}}}d}{{{f{BDd}}}d}{{{f{BDd}}}{{BEh{{BEf{{In{Lf}}}}{In{BDf}}}}}}{{{f{Aj}}}BEj}{{{f{BBf}}}{{En{Ad}}}}{{{f{BBf}}{B`{{Gf{IlFb}}}}}{{En{Ad}}}}={{{f{BE`}}}Fb}{{{f{Aj}}}Fb}?????{{{En{Lf}}{En{BDf}}d}BDd}{{{f{B@h}}{En{Ad}}Aj{B`{{En{Dj}}}}}BBf}{{{f{BjBEj}}}{{B`{c}}}{}}{{{f{BjBEj}}Fb}{{B`{c}}}{}}{{{f{BBf}}c}{{Af{B@h}}}{{Cd{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Aj}}}BDl}{{{f{BBf}}JjL`}{{Af{B@h}}}}{{BBfe}BBf{{Jl{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{Aj}}IlFb}BDj}{{{f{BjBDd}}}b}{{{f{BjAj}}}b}{{{f{BBf}}Dd}{{Af{B@h}}}}{{{f{BBf}}}{{Af{B@h}}}}{Aj{{En{Lf}}}}0{BBfAj}{{{f{BjBBf}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000000000000000{{{f{c}}}Mh{}}0000000{AjAj}{{{f{Aj}}}{{f{BDd}}}}{{{f{Aj}}}{{f{BEl}}}};{ce{}{}}0000000`````{{{f{BDd}}c}Ad{{Cd{{Gf{Lf{f{BDf}}}}}{{Cb{B`}}}}HnI`}}{{{f{BDd}}c}Ad{{Cd{{Gf{Lf{f{BDf}}}}}{{Cb{}}}}HnI`}}{{{f{{Df{{BEn{Lf}}}}}}c}Ad{{Cd{{BEn{Lf}}}{{Cb{B`}}}}HnI`}}{{{f{{Df{{BEn{Lf}}}}}}c}Ad{{Cd{{BEn{Lf}}}{{Cb{}}}}HnI`}}{{{f{{Df{c}}}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LfLf}}}}}}Gj}}{{{f{{Df{c}}}}{f{Gd}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LfLf}}}}}}Gj}}{{{f{{l{c}}}}LfLf}{{l{c}}}C`}{{{f{BEl}}{f{{Df{El}}}}}d}{{{f{BFf}}{f{Aj}}}Ad}{{BFhBFh}BFh}0`{{{f{BFj}}{f{B@h}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFj}}}{{Af{{f{Bh}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BjBFl}}Gl}{{B`{b}}}}{{{f{BjBFn}}{f{Gl}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BFl}}}BFl}{{{f{BFn}}}BFn}{{{f{BBd}}}BBd}{{{f{c}}{f{Bje}}}b{}{}}00{{{f{{Df{c}}}}}Dh{{AMn{Dh}}}}{{}BBd}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{Fbb}00{{{f{BBd}}{f{BBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBd}}{f{BjFh}}}Fj}{cc{}}{{{Gf{{f{Dh}}Fb}}}BFl}1{{{Gf{{f{Dh}}Fb}}}BFn}2{{eFb}BAh{{AMf{Dh}}}{{Bf{}{{Bb{{En{{Gf{Djc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BFlAd}{BFnAd}{{{f{Dh}}Fb}BFl}{{{f{Dh}}Fb}BFn}{{{En{Gl}}}BBd}{{{f{BjBFl}}Fb}Ad}{{{f{BjBFn}}Fb}Ad}{{{f{{Df{BBd}}}}{B`{Fb}}}{{Af{BAh}}}}0{{{f{{Df{BBd}}}}{B`{Fb}}}{{Af{{En{Dh}}}}}}{{{f{c}}}e{}{}}00{c{{G`{e}}}{}{}}00000{{{f{c}}}Mh{}}00<<<{{{f{{Df{B@h}}}}}{{Af{B@h}}}}0`````{{HhHh}Hh}{{{f{{Df{B@h}}}}{B`{Ll}}}{{Af{{Gf{{En{AO`}}Ll}}}}}}{{{f{{BG`{Il}}}}Ll{f{Bj{En{Hh}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{}BGb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BGb}}}Hh}{{{f{BGd}}{f{BjFh}}}Fj}{cc{}}0{{{f{BGd}}{f{Bjc}}}bAEf}``{{}Fb}0{ce{}{}}0{{{f{Bj{BGf{BGdce}}}}LfHh{f{B@h}}gi}b{}BGh{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0{{{f{BGj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}0{{{f{BGj}}Ll{f{Bj{Df{Hh}}}}}{{Af{b}}}}055{{{f{BjBGb}}{f{{Df{Dd}}}}}b}{{{f{BjBGb}}Kj}b}{{{f{BjBGb}}Il}b}{{{f{BjBGb}}Kf}b}{{{f{BjBGb}}Hh}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{ABj{ce}}}}}{{f{e}}}{}BGl}{{{f{{ABj{c}}}}}BGn{BH`Lh}}{{{f{{ABj{ce}}}}}{}LhBGl}{{{f{{ABj{c}}}}}KjBHb}{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}{{{ABj{{BHd{c}}e}}}{{ABj{ce}}}{}BGl}{{{ABj{{Df{{BHd{c}}}}e}}}{{ABj{{Df{c}}e}}}{}BGl}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000000000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}`{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{Mj}}}Mj}{{{f{BHh}}}BHh}{{{f{{ABj{ce}}}}}{{ABj{ce}}}Lh{BGlOb}}{{{f{Ld}}}Ld}{{{f{BCn}}}BCn}{{{f{AMh}}}AMh}{{{f{BBb}}}BBb}{{{f{L`}}}L`}{{{f{BHj}}}BHj}{{{f{BHl}}}BHl}{{{f{BHn}}}BHn}{{{f{c}}{f{Bje}}}b{}{}}0000000000{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}ANh{BI`Lh}BGl}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{c}}{f{e}}}ANh{}{}}{{AHnB@l}AHn}{AHnAHn}{{{f{Fl}}{f{AAn}}}{{A@j{Fl}}}}{{{f{AMh}}}{{f{AAn}}}}```{{}b}{cbBGl}{{}{{ABj{c}}}BIb}{{}Ld}{{}BCn}{{}AMh}{{}BBb}{{}L`}`{Fb{{f{c}}}{}}00{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}1111111111{Fb{{f{Bjc}}}{}}000000000000{{{f{{ABj{c}}}}}{{f{Bh}}}{AGlLh}}`{{{ABj{AB`c}}}{{G`{{ABj{ec}}{ABj{AB`c}}}}}BGl{AB`HnI`}}{{{ABj{AB`c}}}{{ABj{ec}}}BGl{AB`HnI`}}{{{f{{ABj{ce}}}}}{{BId{ce}}}Lh{ObBGl}}{Fbb}00{{{f{Bj{ABj{ce}}}}}bLhBGl}1111111111{{{f{Mj}}{f{Mj}}}d}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIfLh}BGl}{{{f{{ABj{Fl}}}}{f{Fl}}}d}{{{f{{ABj{BIh}}}}{f{BIh}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{BCn}}{f{BCn}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{L`}}{f{L`}}}d}{{{f{BHn}}{f{BHn}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHh{{Gf{KfKf}}}}`{{BBbc}BBb{{Cd{Fb{f{AMh}}}{{Cb{d}}}}}}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Bj{ABj{BIj}}}}}{{G`{bBIl}}}}{{{f{AHn}}{f{BjFh}}}{{G`{bAMb}}}}0{{{f{Mj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{ABbLh}BGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}LhBGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{BA`Lh}BGl}{{{f{Ld}}{f{BjFh}}}Fj}{{{f{BCn}}{f{BjFh}}}Fj}{{{f{AMh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BBb}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{L`}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHl}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHn}}{f{BjFh}}}{{G`{bAMb}}}}`{BInAHn}{BJ`AHn}{BIlAHn}{cc{}}{BJbAHn}{KfMj}222{{{BEn{c}}}{{ABj{{Df{c}}}}}{}}{c{{ABj{c}}}{}}{{{En{ce}}}{{ABj{{Df{c}}e}}}{}{BGlOb}}{{{f{Bh}}}{{ABj{Bh}}}}{{{AI`{c}}}{{ABj{c}}}{BJdLh}}{{{ABj{Bh}}}{{ABj{{Df{Dd}}}}}}{BJfc{}}{{{f{BJh}}}{{ABj{BJh}}}}{BJj{{ABj{BJh}}}}{{{f{BJl}}}{{ABj{BJl}}}}{BJn{{ABj{BJl}}}}{Dj{{ABj{Bh}}}}{{{f{{Df{c}}}}}{{ABj{{Df{c}}}}}Ob}{BK`{{ABj{BKb}}}}{{{A@j{ce}}}{{ABj{ce}}}LhBGl}{{{f{BKb}}}{{ABj{BKb}}}}{cc{}}0000{{{En{AMh}}}BBb}1111{{c{B`{Gd}}}BKd{}}{{{BKf{Il}}{BKf{Dd}}{B`{Gd}}}BKh}{{{BKf{Il}}{BKf{Dd}}{B`{Gd}}}BKj}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{e{{ABj{{Df{c}}}}}{}{{Ff{}{{Bb{c}}}}}}{{gFb}{{BKl{Il}}}Jl{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}0{e{{BKl{Il}}}{{Ff{}{{Bb{{B`{d}}}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{{gAAn}{{BKl{Il}}}BFd{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}2{e{{ABj{{Df{c}}}}}Hn{{Gh{}{{Bb{c}}}}}}{{}{{ABj{c}}}Lh}{c{{ABj{ec}}}BGlLh}{{{f{Bh}}}{{G`{BKn}}}}{{{f{Bh}}c}BL`{}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{Bj{ABj{ce}}}}}{{B`{{f{Bjc}}}}}LhBGl}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}LhBGl}{{{f{BBb}}}{{En{{f{Bh}}}}}}{{{f{El}}Fb}Gl}4{{{f{BLd}}}d}{{{f{{ABj{ce}}}}{f{Bjg}}}b{BLfLh}BGlAEf}{{{f{BCn}}{f{Bjc}}}bAEf}{{{f{AMh}}{f{Bjc}}}bAEf}{{{f{L`}}{f{Bjc}}}bAEf}{{{f{BHn}}{f{Bjc}}}bAEf}{{{f{Mj}}}Kf}{{}b}{cb{ObBGl}}{{{f{BBb}}{f{Bh}}}{{B`{Fb}}}}{{{f{{Df{Kf}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BjBHh}}}{{f{BjHh}}}}`{ce{}{}}000000000000{{{ABj{ce}}}{{B`{c}}}{}BGl}{{{ABj{ce}}}{}LhBGl}{{{ABj{BLh}}}Ad}{{{f{BBb}}}d}{{{f{BHh}}}d}{{{f{Mj}}}d}`{{{f{{ABj{BIj}}}}}d}{{{f{c}}}d{}}1{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{BBb}}}Fb}`1{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}Ob{BGlOb}}{{{f{BLj}}}Jh}0{{{f{BLl}}}Jh}```11`{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIfLh}BGl}{{BLnFb}{{B`{Fb}}}}{{{f{Bh}}c}BM`{}}{c{{ABj{c}}}{}}{{cAAnd}AMh{{AMf{Dj}}}}{e{{ABj{c}}}{}{{Ml{{f{{BId{c}}}}}{{Cb{c}}}}}}{{ce}{{ABj{ce}}}{}BGl}{{}{{ABj{{BHd{c}}}}}{}}{c{{ABj{{BHd{e}}c}}}BGl{}}{Fb{{ABj{{Df{{BHd{c}}}}}}}{}}{{Fbc}{{ABj{{Df{{BHd{e}}}}c}}}BGl{}}3210`{{}Mj}{{}BHh}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}{{B`{ANh}}}{BLbLh}BGl}{c{{BMb{{ABj{c}}}}}{}}{{ce}{{BMb{{ABj{ce}}}}}{}BGl}`````{{{f{BLj}}}Jh}0{{{f{{ABj{c}}}}{f{BjBMd}}}b{AGlLh}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}dLhBGl}{{{f{BLl}}JjL`}{{Af{Jh}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Df{Dd}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}BMf}{{G`{bBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{En{Dd}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{BjDj}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Df{BMh}}}}}{{G`{FbBIl}}}}`{{{f{Bj{ABj{BIj}}}}BMj}{{G`{HhBIl}}}}`{{{f{AHd}}FbFb}AHd}0{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}{{{f{BMl}}Dd}Jh}{{KfKf}BHh}`{{{f{{ABj{ce}}}}}FbLhBGl}>>{{{f{Mj}}}{{B`{Kf}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dj{}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{c{{G`{e}}}{}{}}00{{{ABj{{Df{c}}e}}}{{G`{{ABj{{BEn{c}}e}}}}}{}BGl}11111111111111111111111{{BLnFb}{{G`{FbAHn}}}}{c{{G`{{ABj{c}}BMn}}}{}}{{ce}{{G`{{ABj{ce}}BMn}}}{}BGl}{{}{{G`{{ABj{{BHd{c}}}}BMn}}}{}}{c{{G`{{ABj{{BHd{e}}c}}BMn}}}BGl{}}10{c{{G`{{BMb{{ABj{c}}}}BMn}}}{}}{{ce}{{G`{{BMb{{ABj{ce}}}}BMn}}}{}BGl}{{{ABj{ce}}}{{G`{c{ABj{ce}}}}}{}BGl}{{{f{c}}}Mh{}}000000000000{{{ABj{ce}}}cObBGl}`{{{f{BMl}}Dd}Jh}{ce{}{}}000000000000{{{f{{ABj{ce}}}}}FbLhBGl}``{{AMh{BN`{DjDj}}}AMh}{{BBb{BN`{DjDj}}}BBb}{{{f{Bj{ABj{BIj}}}}{f{{Df{Dd}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{{Df{BNb}}}}}{{G`{FbBIl}}}}```````{{c{B`{Gd}}}BKd{}}{{{BKf{Il}}{BKf{Dd}}{B`{Gd}}}BKh}{{{BKf{Il}}{BKf{Dd}}{B`{Gd}}}BKj}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{BNd{B`{{f{AAn}}}}}{{G`{{BKl{Il}}AHn}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNd}}}d}{FbBNd}{{{f{BNd}}}{{f{{Df{Il}}}}}}{{{f{BjBNd}}{f{Fl}}}b}{{{f{BjBNd}}}b}{{{f{BjBNd}}{f{{Df{{A@j{Fl}}}}}}}b}1{{{f{BjBNd}}{B`{{f{Fl}}}}}b}{BNd{{BNf{Il}}}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}:`{{{f{c}}h}b{}}{{{f{BNh}}}{{f{AB`}}}}{{{f{BjBNh}}}{{A@j{Fl}}}}{{{f{BjBNh}}}{{f{BjAB`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BNh}}}BNh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BNh}}}{{f{AAn}}}}{{}BNh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjBNh}}Fb}b}{{{f{BNh}}{f{BjFh}}}{{G`{bAMb}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNh}}}Fb}{FbBNh}{{{f{BjBNh}}}b}70{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{BNh}}}{{B`{{f{BNj}}}}}}7```````{{{f{AHd}}FbFb}AHd}0`{{}b}0{{}d}``{{eFbFb}{{BNl{Il}}}{{Jl{Bh}}}{{Bf{}{{Bb{c}}}}}}{{eFbFb}{{BG`{Il}}}{{Jl{{Df{Dd}}}}}{{Bf{}{{Bb{c}}}}}}{Hhb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAh}}}BAh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BAh}}{f{Bh}}}d}{{}BAh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BAh}}{f{BAh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}{f{BjFh}}}Fj}{{{f{BBd}}}BAh}{BNnBAh}{cc{}}{{{f{{Df{Ad}}}}}BAh}{{{f{BNn}}}BAh}{BBbBAh}{{{f{BBb}}}BAh}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{eBAh{{AMf{Lb}}}{{Ff{}{{Bb{c}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{{f{Dh}}}}}}{{{f{BAh}}Fb}{{B`{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}Fb}{{B`{{Gf{{f{BjAN`}}{f{BjDh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{Lb}}}}{{{f{BAh}}{f{Bh}}}{{B`{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BO`}}}{{En{{f{Bh}}}}}}{{{f{BAh}}}{{En{{f{Bh}}}}}}{{{f{BAh}}{f{Bjc}}}bAEf}{{{f{BO`}}{f{Bh}}}{{B`{Fb}}}}{{{f{BAh}}{f{Bh}}}{{B`{Fb}}}}{{}Fb}{{{f{BjBAh}}FbAN`Dh}{{Af{{B`{Dh}}}}}}{ce{}{}}{BAhc{}}{{{f{BAh}}}d}{{{f{BAh}}}{{`{{Bf{}{{Bb{{Gf{{f{AN`}}{f{Dh}}}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{Dh}}}}}}}}}}{{{f{BjBAh}}}{{`{{Ib{}{{Bb{{f{BjDh}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{Lb}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{AN`}}}}}}}}}}{{{f{BAh}}}Fb}{{{f{BjBAh}}BAh}b}{{{f{BjBAh}}{f{BAh}}}b}{{}BAh}{{{f{BAh}}FbAN`Dh}{{Af{BAh}}}}{{{f{BjBAh}}{f{Bh}}}{{B`{Dh}}}}{{{f{BjBAh}}{f{Bh}}AN`}{{B`{AN`}}}}{{{f{BjBAh}}Fb}b}{{{f{BjBAh}}{f{Bh}}Dh}{{B`{Dh}}}}{{{f{BjBAh}}FbDh}{{B`{Dh}}}}4{{{f{BjBAh}}Fb}{{B`{{Gf{AN`Dh}}}}}}{{{f{BAh}}d}BBb}{{{f{c}}}e{}{}}{{{f{BjBAh}}{f{BAh}}}{{Af{d}}}}{c{{G`{e}}}{}{}}{{{f{BAh}}{f{Bh}}}{{Af{{f{Dh}}}}}}{{{f{BAh}}Fb}{{Af{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{Af{Lb}}}}{{{f{BAh}}{f{Bh}}}{{Af{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}{f{Bh}}}{{Af{{f{BjDh}}}}}}{{{f{BO`}}{f{Bh}}}{{Af{Fb}}}}6{{{f{c}}}Mh{}}{ce{}{}}{FbBAh}{{{f{BjBAh}}AN`Dh}{{B`{Dh}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bh}}{En{El}}{f{AAn}}}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{AAn}}{B`{{f{BOb}}}}}{{Af{Ad}}}}{{Adc}e{A`Jf}{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{BLh}}Dn}E`}0{{{f{BLh}}}{{Af{E`}}}}0`{{{f{Ad}}Fb}{{f{El}}}}{{{f{BLh}}}{{f{AB`}}}}{{{f{BjBLh}}}{{f{BjAB`}}}}0{{{f{Ad}}}Dl}{{{f{BjBLh}}}{{f{Bj{l{c}}}}}C`}{{{f{BLh}}}{{f{{l{c}}}}}C`}{{{f{Ad}}}{{f{BLh}}}}{{{f{BjBLh}}}{{Af{Fb}}}}0{{{f{BjAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}{{{f{Ad}}}{{Af{{f{AHj}}}}}}{{{f{BLh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fd}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BLh}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJf}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLh}}}Ej}{{{f{BLh}}}{{f{{En{El}}}}}}{{{f{BjBLh}}}{{f{Bj{En{El}}}}}}{{{f{BjAd}}}{{f{Bj{En{El}}}}}}{{{f{Ad}}}Ad}{{{f{Hd}}}Hd}1{{{f{BLh}}}{{ABj{BLh}}}}{{{f{c}}{f{Bje}}}b{}{}}0{{{f{BjAd}}}b}{{{f{Ad}}}{{Af{{f{Hl}}}}}}{{}Ad}{Fb{{f{c}}}{}}0{{{f{Ad}}}{{f{c}}}{}}1{Fb{{f{Bjc}}}{}}00{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{Adc}e{A`Jf}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jj}}}}{Fbb}00{{{f{BLh}}}Ad}0{{{f{BLh}}}{{f{Dh}}}}0{{{f{Hd}}{f{Hd}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Bh}}}c{}}2{{{f{Ad}}c}eAMd{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{Ad}}GlFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AIb}}}}}}{{{f{Ad}}}{{Af{{f{AId}}}}}}{{{f{BLh}}}{{AI`{Lb}}}}0{{{f{Ad}}ADd}{{Af{Ad}}}}{{{f{BLh}}{f{Fd}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fd}}d}{{Af{Ad}}}}{{{f{Hd}}{f{BjFh}}}Fj}{{{f{Ad}}{f{BjFh}}}Fj}0{{{f{Ad}}}Dj}{cc{}}0{{{l{c}}}AdC`}1{{{f{Bh}}{f{{Df{Gl}}}}d}{{Af{Ad}}}}{{{f{Bh}}{f{{Df{Gl}}}}{f{Dh}}d}{{Af{Ad}}}}{{{f{Bh}}El}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{Dh}}}Ad}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cAd{{Ff{}{{Bb{Kf}}}}}}{cAd{{Ff{}{{Bb{d}}}}}}{cAd{{Ff{}{{Bb{{f{Bh}}}}}}}}{cAd{{Ff{}{{Bb{Hh}}}}}}{cAd{{Ff{}{{Bb{{B`{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Kj}}}}}}}}{cAd{{Ff{}{{Bb{Il}}}}}}{cAd{{Ff{}{{Bb{{f{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Kf}}}}}}}}{cAd{{Ff{}{{Bb{Kj}}}}}}{cAd{{Ff{}{{Bb{{f{Kf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Il}}}}}}}}{cAd{{Ff{}{{Bb{{f{Jj}}}}}}}}{cAd{{Ff{}{{Bb{Hf}}}}}}{cAd{{Ff{}{{Bb{{f{Il}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Jj}}}}}}}}{cAd{{Ff{}{{Bb{{f{Kj}}}}}}}}{cAd{{Ff{}{{Bb{Dj}}}}}}{cAd{{Ff{}{{Bb{{B`{d}}}}}}}}{cAd{{Ff{}{{Bb{{f{d}}}}}}}}{cAd{{Ff{}{{Bb{Jj}}}}}}{{{f{Bh}}{En{Kj}}}Ad}{{{f{Bh}}{En{Il}}}Ad}{{{f{Bh}}{En{Jj}}}Ad}{{{f{Bh}}{En{Hf}}}Ad}{{{f{Bh}}{En{Hh}}}Ad}{{{f{Bh}}{En{Kf}}}Ad}{{{f{Bh}}Fb{f{Dh}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BLh}}Fb}{{Af{Gl}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}An}{{{f{BLh}}Fb}{{B`{{f{H`}}}}}}0{{{f{BLh}}FbFb}{{B`{{f{H`}}}}}}0{{{f{BLh}}Fb}Gl}0{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}02{{{f{Ad}}{f{Bh}}}c{}}{{{f{BLh}}}d}{{{f{Hd}}{f{Bjc}}}bAEf}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{E`}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}Fb}00{ce{}{}}00{AdB@h}1{BAjAd}{AdAd}=={{{f{Ad}}}{{Af{Fd}}}}000{{{f{BLh}}}Fd}0{{}d}00{{{f{Ad}}}Hd}{{{f{Ad}}}BOd}{{{f{BLh}}}Fb}{{{f{BLh}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Bh}}}c{}}120{{{f{Ad}}}{{Af{{B`{c}}}}}Jf}{{{f{BLh}}}{{Af{Jh}}}}0{{{f{BLh}}}{{B`{Jj}}}}0{{{f{Ad}}}Jh}1122322{{AdAd}c{}}{{{f{Ad}}c}e{A`Jf}{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}=={{{f{BLh}}}{{Af{Fb}}}}0{{{f{BLh}}}{{f{Bh}}}}{{{f{Bh}}{K`{Kf}}}Ad}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Ad}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Kf}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{AI`{{Df{Dd}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Kj}}}}}}}}{{{f{Bh}}{K`{Hh}}}Ad}{{{f{Bh}}c}Ad{{Jl{{Df{Kj}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{f{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Jj}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Hf}}}}}}}}{{{f{Bh}}{K`{Kj}}}Ad}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Ad}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{En{Dd}}}}}}}}{{{f{Bh}}c}AdBAj}{{{f{Bh}}c}Ad{{Jl{{Df{Kf}}}}}}{{{f{Bh}}{f{Ad}}}Ad}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Hh}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Il}}}}}}{{{f{Bh}}{K`{Il}}}Ad}{{{f{Bh}}c}Ad{{Jl{{Df{d}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{d}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{{AI`{{Df{Dd}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Hh}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Dj}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Dj}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{{En{Dd}}}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{{B`{Il}}}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Hf}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Jj}}}}}}{{{f{Bh}}c}Ad{{Jl{{Df{Gl}}}}}}{{{f{Bh}}{f{Dh}}}Ad}{{{f{BLh}}FbFb}Ad}{{{f{Bh}}Fb}Ad}{{{f{BjBOd}}}{{B`{c}}}{}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}1{{{f{Ad}}c}eAMd{}}{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLh}}}Fb}`{{{f{Ad}}}BOf}{{{f{Ad}}}{{Af{Jh}}}}{{{f{BLh}}JjL`}{{Af{Jh}}}}0{{{f{BLh}}}Ad}{{Adc}e{A`Jf}{}}{{{f{Ad}}c}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BjBLh}}{f{Bh}}}b}{{{f{BjAd}}{f{Bh}}}{{f{BjAd}}}}{{{f{Ad}}{f{{Df{Il}}}}}{{Af{Ad}}}}6{HdHd}{{{f{BLh}}{f{Cd}}Ld}{{Af{Ad}}}}0{{{f{Ad}}Jjdd{B`{Hh}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{B`{Hh}}}{{Af{Ad}}}}{{{f{BjAd}}Hd}b}{{{f{BLh}}Il}Ad}{{{f{BjBLh}}}b}0{{{f{BjAd}}}b}{{{f{Ad}}{B`{Hh}}}Ad}{{{f{BOd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BLh}}IlFb}Ad}{{{f{Ad}}Dn}{{Af{Ad}}}}{{{f{BLh}}Dn}{{Af{Ad}}}}0{{{f{BLh}}Dd}{{B`{Jj}}}}0{{{f{BLh}}Dd}{{Af{Jh}}}}0{{{f{Ad}}}{{Af{{f{Md}}}}}}{{{f{Ad}}Fb}{{Af{{AI`{Bh}}}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Jf}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{Adc}e{A`Jf}{}}{{{f{Ad}}}{{Af{c}}}Jf}{{{f{BLh}}}{{Af{Jh}}}}0{{{f{Ad}}}{{Af{Jh}}}}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{BLh}}{f{E`}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Df{Lf}}}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Df{Lf}}}}}Ad}{{{f{Ad}}{f{{Df{Lf}}}}d}Ad}{{{f{Ad}}{f{E`}}d}{{Af{Ad}}}}{{{f{BLh}}{f{E`}}}Ad}{{{f{Ad}}{f{{Df{Lf}}}}}Ad}{{{f{Ad}}{f{E`}}d}Ad}{{{f{Ad}}Fbd}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AI`{Ad}}}}{{{f{c}}}Dj{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{G`{e}}}{}{}}00{{{Gf{{f{Bh}}El}}}{{Af{Ad}}}}{{{Gf{{f{AMh}}{En{El}}}}}{{Af{Ad}}}}{{{Gf{{f{Bh}}{En{El}}}}}{{Af{Ad}}}}{{{Gf{{f{AMh}}El}}}{{Af{Ad}}}}444{{{f{c}}}Mh{}}00{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{Ad}}}{{Af{{f{AM`}}}}}}{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{Ad}}}{{Af{{f{ANl}}}}}}{{{f{BLh}}}{{Af{Ad}}}}0?{{{f{BLh}}}{{Af{{f{{l{c}}}}}}}C`}`{{{f{BLh}}Dd}{{B`{Jj}}}}0{{{f{BLh}}Dd}{{Af{Jh}}}}0{ce{}{}}00{{Ad{f{Bh}}}Ad}{{{f{Ad}}c}Ad{A`Jf}}{{{f{Ad}}{f{Fd}}{f{Ad}}}{{Af{Ad}}}}````{{{BOh{}{{Cb{c}}}}{f{Ad}}}c{}}{{{f{BOj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BOl}}}BOl}{{{f{c}}{f{Bje}}}b{}{}}{{}BOl}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BOl}}{f{BOl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BOl}}{f{BjFh}}}Fj}{cc{}}{{{f{BOl}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}3``{{{f{c}}h}b{}}{{{f{BjCh}}}{{f{BjAd}}}}{{{f{Ch}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{Ch}}}Ch}{{{f{c}}{f{Bje}}}b{}{}}{{{f{Ch}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BjAd}}}Ch}{{{f{BjCh}}{f{BjEl}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}5{{{f{BjCh}}{f{BjEl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````````{{{f{c}}h}b{}}8{{{En{B@h}}}{{Af{B@h}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{cB@h{{Ff{}{{Bb{B@h}}}}}}{c{{B`{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}{AI`{{l{g}}}}}}}C`C`C`}{{{f{BjBOn}}}d}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}{c{{Af{{Gf{DhFb}}}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Gd}}}C`C`}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{{C@`{ec}}}}}{{C@`{ec}}}Ob{Ob{Bf{}{{Bb{c}}}}}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{c}}}}}}}C`}{{{f{Ad}}{f{Ad}}}{{Gf{AdAd}}}}{BOne{}{{C@b{c}}}}{BOne{}{{C@d{c}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{{f{B@h}}}}}}}}{cB@h{{Ff{}{{Bb{{f{B@h}}}}}}}}{{{f{BjBOn}}{f{c}}}dBIf}{{{f{{C@f{c}}}}}{{f{e}}}{}{}}{Fb{{f{c}}}{}}{{{f{{AHf{c}}}}}{{f{e}}}{}{}}11{Fb{{f{Bjc}}}{}}{{{f{Bj{AHf{c}}}}}{{f{Bje}}}{}{}}11{Fbb}00{cBAh{{Ff{}{{Bb{Dh}}}}}}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Dh}}}}}}}}{{{f{Ad}}{f{Bh}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{{C@f{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BjBOn}}cg}{{B`{c}}}{}{}{{Cj{ce}{{Cb{c}}}}}}{cc{}}00{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{c{{AHf{Fd}}}{{Ff{}{{Bb{d}}}}}}{c{{AHf{{l{e}}}}}{{Ff{}{{Bb{}}}}}n}{eC@d{}{{Ff{}{{Bb{c}}}}}}21{c{{AHf{{l{e}}}}}{{Gh{}{{Bb{}}}}}n}{c{{AHf{Fd}}}{{Gj{}{{Bb{d}}}}}}{c{{AHf{{l{e}}}}}{{Gj{}{{Bb{}}}}}n}{{{f{Dh}}{f{Dh}}}{{B`{Dh}}}}{{{f{AKb}}{f{AKb}}}AKb}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{Bjc}}}bAEf}{{}Fb}00{ce{}{}}00{{{AHf{c}}}c{}}1{BCf{{En{c}}}{}}{c{{En{{C@j{C@h}}}}}{}}{c{{En{Dj}}}{}}{BAdGl}{c{{AHf{c}}}{}}{{eFb}{{C@`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}F`}}`{{{f{{C@`{ec}}}}}{{Gf{Fb{B`{Fb}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{{Df{c}}}}IlFb}{{f{{Df{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{En{{l{c}}}}}}}C`}{{{f{B@h}}Fbd}{{En{B@h}}}}{{{f{c}}}e{}{}}{{BOnFb}{{C@`{BOnc}}}{}}{c{{G`{e}}}{}{}}00{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}111{{{f{c}}}Mh{}}00{ce{}{}}00{{{f{Dh}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Df{{En{c}}}}}}}{{Gf{Fb{En{Fb}}}}}{}}{{{f{B@h}}}{{`{{Bf{}{{Bb{B@h}}}}}}}}{{{f{{Df{c}}}}}{{AH`{Lf}}}{{Jl{{Df{Mj}}}}HnI`}}{{{f{{Df{e}}}}}{{En{c}}}{HnI`Cf}{{Jl{{Df{c}}}}}}{{{f{Ad}}}{{En{Ad}}}}","D":"IH`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",4938],[5,"ListType",1231],[5,"ChunkedArray",39],[10,"PolarsNumericType",1231],[10,"Num",4939],[10,"ToPrimitive",4940],[5,"Series",4359],[8,"PolarsResult",3650,4941],[10,"NumOpsDispatchInner",4740,4942],[6,"GroupsProxy",3252,4943],[5,"BooleanType",1231],[5,"Settings",39],[6,"Option",4944],[17,"Item"],[8,"ArrayBox",4799],[10,"Iterator",4945],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1231],[10,"PolarsDataType",1231],[17,"Output"],[10,"Fn",4946],[10,"Copy",4947],[5,"UnstableSeries",4799],[10,"FnMut",4946],[5,"Float32Type",1231],[5,"Float64Type",1231],[5,"StringType",1231],[5,"BinaryType",1231],[1,"u8"],[1,"slice"],[6,"DataType",1231,4948],[5,"String",4949],[8,"ListChunked",1231],[5,"SortOptions",1149],[8,"IdxCa",1231,4950],[5,"SortMultipleOptions",1149],[8,"BinaryChunked",1231],[10,"PolarsIntegerType",1231],[10,"NumOpsDispatchCheckedInner",4765,4951],[8,"ChunkLenIter",39],[8,"ArrayRef",3650,4952],[5,"Vec",4953],[10,"DoubleEndedIterator",4954],[1,"usize"],[8,"BooleanChunked",1231],[10,"IntoIterator",4955],[5,"Formatter",4956],[8,"Result",4956],[10,"Array",4952],[17,"Array"],[6,"Result",4957],[10,"FallibleIterator",4958],[5,"Bitmap",4959],[1,"tuple"],[10,"IntoParallelIterator",4960],[10,"TrustedLen",4961],[6,"AnyValue",1231,4962],[5,"ObjectType",1231],[10,"PolarsObjectSafe",822],[10,"PolarsObject",822],[6,"IsSorted",4359,4963],[1,"f32"],[1,"u64"],[5,"Int128Type",1231],[8,"DecimalChunked",1231,4964],[10,"Send",4947],[10,"Sync",4947],[10,"ExactSizeIterator",4965],[10,"PolarsFloatType",1231],[10,"PolarsIterator",783],[5,"Iter",4966],[5,"IterNames",4966],[1,"i64"],[5,"Iter",4967],[1,"fn"],[5,"Map",4968],[6,"ChunkedArrayLayout",39],[10,"NumCast",4940],[5,"Scalar",1231,4962],[1,"f64"],[10,"AsRef",4969],[5,"UInt64Type",1231],[5,"Range",4970],[5,"Int64Type",1231],[5,"UInt32Type",1231],[1,"u32"],[5,"Int32Type",1231],[1,"i32"],[10,"ParallelIterator",4960],[10,"IndexedParallelIterator",4960],[6,"QuantileInterpolOptions",3650,4971],[5,"Field",1231,4972],[5,"RollingOptionsFixedWindow",3650,4973],[8,"IdxSize",3650,4974],[10,"Sized",4947],[17,"HasViews"],[5,"RandomState",4975],[5,"BytesHash",4976],[8,"ArrayView1",4977],[8,"Array2",4977],[8,"StringChunked",1231],[6,"Either",4978],[5,"TypeId",4979],[5,"NullableIdxSize",3650,4974],[10,"FnOnce",4946],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",477,4980],[10,"ChunkedBuilder",505],[5,"BinViewChunkedBuilder",505,4981],[10,"ViewType",4982],[5,"BooleanChunkedBuilder",505,4983],[5,"NullChunkedBuilder",505,4984],[5,"PrimitiveChunkedBuilder",505,4985],[10,"Clone",4986],[8,"StringChunkedBuilder",505,4981],[8,"BinaryChunkedBuilder",505,4981],[10,"NewChunkedArray",505],[5,"AnonymousListBuilder",609,4987],[5,"AnonymousOwnedListBuilder",609,4987],[5,"ListBooleanChunkedBuilder",609,4988],[5,"ListPrimitiveChunkedBuilder",609,4989],[10,"ListBuilderTrait",609],[5,"ListStringChunkedBuilder",609,4990],[5,"ListBinaryChunkedBuilder",609,4990],[5,"ListNullChunkedBuilder",609,4991],[5,"Box",4992],[10,"ChunkedCollectInferIterExt",763],[10,"ChunkedCollectIterExt",763],[10,"Canonical",777],[10,"ChunkedCollectParIterExt",779],[10,"FromParIterWithDtype",779],[5,"BooleanArray",4993],[5,"BoolIterNoNull",783],[5,"SomeIterator",783],[5,"ObjectArray",822],[6,"ArrowDataType",1231,4994],[10,"Any",4979],[10,"Debug",4956],[8,"ObjectValueIter",822],[5,"BitmapIter",4995],[6,"ZipValidity",4996],[5,"Arc",3650,4997],[5,"ObjectChunkedBuilder",893],[8,"ObjectChunked",1231],[10,"AnonymousObjectBuilder",916],[5,"ObjectRegistry",916],[8,"ObjectConverter",916],[8,"BuilderConstructor",916],[17,"FuncRet"],[10,"ChunkApply",944],[10,"ChunkApplyKernel",944],[10,"ChunkSort",944],[10,"ChunkUnique",944],[10,"ChunkCast",944],[6,"FillNullStrategy",944],[10,"ChunkCompare",944],[10,"ChunkExplode",944],[5,"OffsetsBuffer",4998],[10,"ChunkFillNullValue",944],[10,"ChunkFilter",944],[10,"ChunkFull",944],[10,"ChunkFullNull",944],[10,"ChunkAnyValue",944],[10,"Hasher",4999],[10,"IsFirstDistinct",944],[10,"IsLastDistinct",944],[10,"ChunkAgg",944],[10,"ChunkQuantile",944],[10,"ChunkExpandAtIndex",944],[10,"ChunkReverse",944],[10,"ChunkRollApply",944],[10,"ChunkSet",944],[10,"ChunkShift",944],[10,"ChunkShiftFill",944],[10,"ChunkVar",944],[10,"ChunkTake",944],[10,"ChunkTakeUnchecked",944],[10,"ChunkBytes",944],[10,"ChunkZip",944],[10,"BinaryFnMut",1065],[10,"StaticArray",1231,5000],[10,"TernaryFnMut",1065],[10,"Error",5001],[10,"UnaryFnMut",1065],[5,"PrimitiveArray",5002],[6,"SearchSortedSide",1105],[10,"SlicedArray",3650,5003],[5,"NoNull",4823],[5,"RowsEncoded",5004],[8,"BinaryOffsetChunked",1231],[5,"NaiveDateTime",5005],[6,"PolarsError",3650,4941],[6,"Cow",5006],[8,"Float32Chunked",1231],[8,"Float64Chunked",1231],[10,"ArrayFromIter",1231,5007],[10,"ArrayFromIterDtype",1231,5007],[10,"AsRefDataType",1231,4948],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5008],[10,"From",4969],[5,"CategoricalChunked",2634,5009],[10,"CategoricalMergeOperation",2634,5010],[10,"LogicalType",1231,5011],[5,"Logical",1231,5011],[5,"OwnedObject",1231,4962],[6,"UnknownKind",1231,4948],[6,"TimeUnit",1231,5012],[5,"UInt8Type",1231],[5,"UInt16Type",1231],[5,"Int8Type",1231],[5,"Int16Type",1231],[5,"DateType",1231],[5,"TimeType",1231],[5,"BinaryOffsetType",1231],[5,"DecimalType",1231],[5,"DatetimeType",1231],[5,"DurationType",1231],[5,"CategoricalType",1231],[6,"ArrowTimeUnit",1231],[10,"ArrayCollectIterExt",3650,5007],[8,"Utf8ViewArray",4982],[8,"UInt32Chunked",1231],[5,"Error",4956],[10,"NumericNative",1231],[10,"Into",4969],[5,"ArrowField",3650],[6,"PrimitiveType",5013],[6,"IntegerType",5014],[10,"Borrow",5015],[8,"String",5016],[10,"NoOption",5017],[10,"GetAnyValue",1231,4962],[8,"Int128Chunked",1231],[6,"Ordering",5018],[6,"PhysicalType",5014],[8,"UInt8Chunked",1231],[8,"UInt16Chunked",1231],[8,"UInt64Chunked",1231],[8,"Int8Chunked",1231],[8,"Int16Chunked",1231],[8,"Int32Chunked",1231],[8,"Int64Chunked",1231],[8,"PlIdHashMap",1231,4950],[5,"CategoricalChunkedBuilder",2634,5019],[5,"GlobalRevMapMerger",2634,5010],[6,"RevMapping",2774,5020],[6,"CategoricalOrdering",2774,5020],[5,"CatIter",2634,5009],[1,"u128"],[5,"DataFrame",2961],[5,"StringCacheHolder",2826,5021],[5,"ErrString",2855,4941],[6,"PolarsWarning",2855,5022],[10,"Display",4956],[6,"FloatFmt",2931],[1,"i128"],[1,"char"],[5,"Schema",4285],[10,"IntoSeries",4359,5023],[6,"NullStrategy",2961],[6,"UniqueKeepStrategy",2961],[8,"PlHashSet",1231,5024],[5,"ArrowSchema",3650,5025],[5,"Row",3506],[5,"GroupBy",3252],[5,"RangeFull",4970],[5,"RangeTo",4970],[5,"RangeToInclusive",4970],[5,"RangeInclusive",4970],[5,"RangeFrom",4970],[5,"RecordBatchIter",2961],[5,"PhysRecordBatchIter",2961],[10,"IntoVec",4823],[5,"MeltArgs",3223],[10,"RangeBounds",4970],[8,"SchemaRef",4285],[6,"IndexOrder",3650,5026],[5,"StructArray",5027],[8,"RecordBatch",5028],[5,"GroupsIdx",3252,4943],[8,"IdxVec",5029],[6,"GroupByMethod",3252],[5,"SlicedGroups",3252,4943],[5,"GroupsProxyParIter",3252,4943],[10,"UnindexedConsumer",5030],[6,"GroupsIndicator",3252,4943],[8,"IdxItem",3252,4943],[10,"IntoGroupsProxy",3252,5031],[5,"Copied",5032],[5,"Zip",5033],[5,"GroupsProxyIter",3252,4943],[8,"GroupsSlice",3252,4943],[1,"array"],[8,"DynArgs",3650,5034],[10,"IsFloat",5035],[10,"NativeType",5036],[10,"AggList",3490,5037],[10,"TakeExtremum",3490],[10,"PhysicalAggExpr",3503],[6,"AnyValueBuffer",3506,5038],[6,"AnyValueBufferTrusted",3506,5038],[5,"BinaryArray",5039],[5,"IdHasher",3602,5040],[5,"IdxHash",3602,5040],[5,"HashMap",5041],[10,"BuildHasher",4999],[10,"VecHash",3602,5042],[10,"Allocator",5043],[5,"BorrowedFd",5044],[10,"AsFd",5044],[10,"AsRawFd",5045],[20,"MaybeUninit",5046],[10,"NumOpsDispatchChecked",3650,4951],[5,"ChunkId",3650,4974],[5,"RollingVarParams",3650,5034],[5,"RollingQuantileParams",3650,5034],[6,"NonExistent",3650,5047],[10,"Ord",5018],[10,"Default",5048],[5,"Weak",4997],[10,"PartialEq",5018],[10,"Scalar",5049],[5,"File",5050],[5,"Error",5051],[6,"Error",5052],[5,"Utf8Error",5053],[5,"TryReserveError",5054],[10,"ToOwned",5006],[1,"never"],[5,"OsStr",5055],[5,"OsString",5055],[5,"Path",5056],[5,"PathBuf",5056],[5,"CString",5057],[5,"CStr",5058],[10,"FromData",4208,5059],[5,"Buffer",5060],[10,"FromDataUtf8",4208,5059],[10,"FromDataBinary",4208,5059],[5,"ListArray",5061],[6,"Ambiguous",3650,5047],[10,"NamedFromOwned",3650,5062],[10,"PartialOrd",5018],[10,"PolarsArray",3650,5063],[10,"Hash",4999],[10,"SeriesTrait",4359,4963],[10,"ChunkAggSeries",3650,5064],[10,"QuantileAggSeries",3650,5065],[10,"IndexToUsize",3650,5066],[10,"NamedFrom",3650,5062],[5,"Pin",5067],[5,"Request",5001],[5,"BorrowedCursor",5068],[5,"IoSliceMut",5069],[6,"SeekFrom",5069],[10,"VarAggSeries",3650,5070],[5,"AllocError",5043],[5,"BTreeMap",5071],[5,"IoSlice",5069],[5,"AnonymousBuilder",4214,5072],[5,"Offsets",4998],[5,"MutableNullArray",4237,5073],[5,"MutableBitmap",5074],[5,"Utf8Array",5075],[8,"ArrowSchemaRef",5025],[10,"IndexOfSchema",4285],[8,"Metadata",4994],[5,"SeriesIter",4359,5076],[8,"SeriesPhysIter",4359,5076],[10,"LhsNumOps",4740,4942],[10,"NumOpsDispatch",4740,4942],[6,"NullBehavior",4773],[10,"CustomIterTools",4823,5077],[5,"TrustMyLength",4823,4961],[10,"FromIteratorReversed",5078],[10,"FromTrustedLenIterator",4823,5077],[5,"Wrap",4823],[5,"LazyCompact",5079],[5,"SmartString",5080],[10,"InitHashMaps",1231],[10,"InitHashMaps2",1231],[5,"TrueT",1231],[15,"IO",2916],[15,"Context",2916],[15,"Count",3487],[15,"Slice",3488],[10,"ListFromIter",3650],[10,"Utf8FromIter",4280],[10,"BinaryFromIter",4280]],"r":[[0,5040],[4,5021],[13,5021],[16,5021],[31,5021],[477,4980],[505,4981],[506,4981],[507,4983],[510,4984],[511,4985],[512,4981],[609,4987],[610,4987],[611,4990],[612,4988],[614,4991],[615,4989],[616,4990],[1134,5003],[1149,5003],[1232,4962],[1234,5007],[1235,5007],[1236,5007],[1237,4994],[1239,4948],[1255,5009],[1258,5009],[1259,5019],[1260,5010],[1261,5020],[1263,4948],[1264,4948],[1265,4948],[1276,4964],[1286,4972],[1287,4972],[1302,4962],[1304,5010],[1308,4950],[1309,5066],[1310,4950],[1311,4950],[1312,5024],[1313,4950],[1349,5011],[1350,5011],[1368,4962],[1371,5024],[1372,5024],[1373,4950],[1374,5024],[1375,5024],[1381,5020],[1382,4962],[1384,5000],[1396,5012],[1397,4948],[1424,4948],[1623,5010],[1637,5011],[1713,4948],[2231,5010],[2232,5010],[2243,4948],[2327,5009],[2365,5009],[2634,5009],[2635,5009],[2636,5019],[2637,5010],[2638,5020],[2640,5010],[2644,5020],[2661,5010],[2726,5010],[2727,5010],[2745,5009],[2749,5009],[2774,5020],[2779,5020],[2826,5021],[2832,5021],[2835,5021],[2843,5021],[2845,5020],[2850,5020],[2851,5021],[2852,5021],[2853,5021],[2854,5021],[2860,4941],[2866,4941],[2867,4941],[2868,5022],[2880,4941],[2888,4941],[2895,5022],[2900,4941],[2901,4941],[2902,4941],[2903,4941],[2904,4941],[2905,5022],[2906,4941],[2920,5081],[2921,5081],[2922,5081],[2923,3602],[3252,4943],[3258,4943],[3259,4943],[3260,4943],[3261,4943],[3262,4943],[3263,4943],[3266,4943],[3268,5031],[3280,4943],[3490,5037],[3508,5038],[3509,5038],[3602,5040],[3603,5040],[3604,5040],[3605,5042],[3608,5042],[3609,5042],[3650,5047],[3651,4997],[3652,4980],[3653,5007],[3654,4952],[3656,5025],[3657,4981],[3658,4983],[3660,5009],[3661,5009],[3662,5019],[3663,5010],[3664,5020],[3665,5064],[3666,4974],[3667,39],[3668,505],[3669,763],[3670,763],[3674,2961],[3676,5034],[3679,5059],[3680,5059],[3681,5059],[3683,5010],[3686,5066],[3687,4974],[3688,5026],[3689,5066],[3690,5023],[3691,4823],[3693,5082],[3694,5082],[3695,5082],[3698,4942],[3700,4990],[3701,4988],[3702,609],[3703,5063],[3704,4989],[3705,4990],[3708,3223],[3710,5062],[3711,5062],[3713,505],[3715,5047],[3718,4974],[3719,4974],[3720,4942],[3721,4951],[3724,5063],[3725,4941],[3726,783],[3727,822],[3728,4941],[3729,4985],[3730,5065],[3731,4971],[3734,5020],[3735,4973],[3736,5034],[3737,5034],[3740,4359],[3741,4963],[3743,5003],[3744,5021],[3746,4981],[3748,2961],[3749,5070],[3750,5042],[3796,5010],[3831,5063],[3834,0],[3844,5063],[3873,0],[4009,5066],[4051,5063],[4053,5010],[4054,5010],[4080,5063],[4086,4941],[4087,4941],[4088,4941],[4089,4941],[4101,5009],[4103,5063],[4109,5009],[4182,5063],[4208,5059],[4209,5059],[4210,5059],[4214,5072],[4237,5073],[4267,5020],[4272,5020],[4273,5003],[4276,5021],[4277,5021],[4278,5021],[4279,5021],[4280,5083],[4281,5083],[4361,944],[4364,5023],[4365,4963],[4366,4963],[4370,5076],[4371,5076],[4372,4963],[4740,4942],[4741,4942],[4742,4942],[4748,4942],[4765,4951],[4766,4951],[4824,5077],[4825,5077],[4826,5077],[4829,4961],[4840,5084],[4841,5084],[4871,5085],[4872,5086],[4873,5087],[4892,5086],[4894,5087],[4907,5086],[4922,5086],[4932,5087]],"b":[[53,"impl-Add-for-%26ChunkedArray%3CT%3E"],[54,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[55,"impl-Add-for-ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[99,"impl-Flags-for-Settings"],[100,"impl-Settings"],[140,"impl-Div-for-%26ChunkedArray%3CT%3E"],[141,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[142,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[143,"impl-Div-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CT%3E"],[163,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-Octal-for-Settings"],[165,"impl-Debug-for-Settings"],[166,"impl-UpperHex-for-Settings"],[167,"impl-LowerHex-for-Settings"],[168,"impl-Binary-for-Settings"],[176,"impl-Settings"],[177,"impl-Flags-for-Settings"],[185,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[265,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[275,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[276,"impl-ChunkedArray%3CBooleanType%3E"],[278,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[279,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkedArray%3CBooleanType%3E"],[283,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[286,"impl-ChunkedArray%3CBooleanType%3E"],[287,"impl-ChunkedArray%3CT%3E"],[288,"impl-Mul-for-ChunkedArray%3CT%3E"],[289,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[290,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[291,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[295,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[297,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[298,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[299,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[300,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[301,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[302,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[303,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[305,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[306,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[307,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[310,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[311,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[312,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[313,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[315,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[324,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[331,"impl-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkedArray%3CListType%3E"],[333,"impl-ChunkedArray%3CStringType%3E"],[334,"impl-ChunkedArray%3CListType%3E"],[345,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[346,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[347,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-Rem-for-ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[375,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[376,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[377,"impl-Sub-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkedArray%3CBooleanType%3E"],[382,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[389,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[395,"impl-ChunkedArray%3CT%3E"],[396,"impl-ChunkedArray%3CListType%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[474,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[557,"impl-BinViewChunkedBuilder%3Cstr%3E"],[558,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[827,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[828,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[860,"impl-ObjectArray%3CT%3E"],[861,"impl-StaticArray-for-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[874,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[884,"impl-StaticArray-for-ObjectArray%3CT%3E"],[885,"impl-ObjectArray%3CT%3E"],[887,"impl-StaticArray-for-ObjectArray%3CT%3E"],[888,"impl-ObjectArray%3CT%3E"],[890,"impl-Array-for-ObjectArray%3CT%3E"],[891,"impl-ObjectArray%3CT%3E"],[894,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[895,"impl-ObjectChunkedBuilder%3CT%3E"],[897,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[898,"impl-ObjectChunkedBuilder%3CT%3E"],[1463,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1464,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1465,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1466,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1467,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1468,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1469,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1470,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1546,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1547,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1548,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1549,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1550,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1551,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1841,"impl-PartialEq-for-DataType"],[1842,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1850,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1851,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1852,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1853,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1856,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1857,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1858,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1859,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1898,"impl-Display-for-AnyValue%3C\'_%3E"],[1899,"impl-Debug-for-AnyValue%3C\'a%3E"],[1901,"impl-Display-for-DataType"],[1902,"impl-Debug-for-DataType"],[1904,"impl-Display-for-TimeUnit"],[1905,"impl-Debug-for-TimeUnit"],[1917,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[1918,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[1919,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[1921,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1922,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[1924,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1925,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1926,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1929,"impl-From%3C%26Field%3E-for-Field"],[1930,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1954,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1955,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1958,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1959,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1960,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1962,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1963,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1964,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1965,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1971,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1972,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1974,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1975,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1976,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1977,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1978,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1979,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1987,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1988,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1989,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1990,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1991,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1992,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2081,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2082,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2083,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2084,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2087,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2088,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2089,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2090,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2221,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2222,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2223,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2224,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2227,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2228,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2229,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2230,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2264,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2265,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2266,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2267,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2268,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2269,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2270,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2271,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2272,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2273,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2285,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2286,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2289,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2290,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2291,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2292,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2295,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2296,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2297,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2298,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2378,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2379,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2380,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2381,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2680,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2681,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2682,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2683,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2700,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2701,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2702,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2703,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2704,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2705,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2720,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2725,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2736,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2737,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2738,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2739,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2740,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2741,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2890,"impl-Display-for-ErrString"],[2891,"impl-Debug-for-ErrString"],[2982,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2983,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2984,"impl-Add%3C%26Series%3E-for-DataFrame"],[3021,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3022,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3023,"impl-Div%3C%26Series%3E-for-DataFrame"],[3053,"impl-Debug-for-DataFrame"],[3054,"impl-Display-for-DataFrame"],[3060,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3061,"impl-From%3C%26Schema%3E-for-DataFrame"],[3088,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3089,"impl-Index%3C%26str%3E-for-DataFrame"],[3090,"impl-Index%3Cusize%3E-for-DataFrame"],[3091,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3092,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3093,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3094,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3095,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3120,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3121,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3122,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3137,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3138,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3139,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3171,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3172,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3173,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3192,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3194,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3364,"impl-Debug-for-GroupByMethod"],[3365,"impl-Display-for-GroupByMethod"],[3371,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3373,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3374,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3408,"impl-IntoIterator-for-GroupsIdx"],[3409,"impl-IntoIterator-for-%26GroupsIdx"],[3411,"impl-IntoParallelIterator-for-GroupsIdx"],[3412,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3767,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3768,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3892,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3893,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3894,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3927,"impl-Display-for-PolarsError"],[3928,"impl-Debug-for-PolarsError"],[3931,"impl-Debug-for-Arc%3CT,+A%3E"],[3932,"impl-Pointer-for-Arc%3CT,+A%3E"],[3933,"impl-Display-for-Arc%3CT,+A%3E"],[3943,"impl-From%3CError%3E-for-PolarsError"],[3944,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3945,"impl-From%3CError%3E-for-PolarsError"],[3947,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3952,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3953,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3954,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3955,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3956,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3957,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3959,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3960,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3961,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3962,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3963,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3964,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3965,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3966,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3967,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4303,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4304,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4306,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4307,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4308,"impl-From%3CArrowSchema%3E-for-Schema"],[4309,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4377,"impl-Add%3CT%3E-for-Series"],[4378,"impl-Add-for-Series"],[4379,"impl-Add%3CT%3E-for-%26Series"],[4380,"impl-Add-for-%26Series"],[4441,"impl-Div-for-%26Series"],[4442,"impl-Div%3CT%3E-for-%26Series"],[4443,"impl-Div%3CT%3E-for-Series"],[4444,"impl-Div-for-Series"],[4455,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4456,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4457,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4458,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4459,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4460,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4478,"impl-Debug-for-Series"],[4479,"impl-Display-for-Series"],[4490,"impl-FromIterator%3Cu32%3E-for-Series"],[4491,"impl-FromIterator%3Cbool%3E-for-Series"],[4492,"impl-FromIterator%3C%26str%3E-for-Series"],[4493,"impl-FromIterator%3Cu64%3E-for-Series"],[4494,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4495,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4496,"impl-FromIterator%3Ci64%3E-for-Series"],[4497,"impl-FromIterator%3C%26u64%3E-for-Series"],[4498,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4499,"impl-FromIterator%3Ci32%3E-for-Series"],[4500,"impl-FromIterator%3C%26u32%3E-for-Series"],[4501,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4502,"impl-FromIterator%3C%26f32%3E-for-Series"],[4503,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4504,"impl-FromIterator%3C%26f64%3E-for-Series"],[4505,"impl-FromIterator%3Cf32%3E-for-Series"],[4506,"impl-FromIterator%3C%26i64%3E-for-Series"],[4507,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4508,"impl-FromIterator%3C%26i32%3E-for-Series"],[4509,"impl-FromIterator%3CString%3E-for-Series"],[4510,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4511,"impl-FromIterator%3C%26bool%3E-for-Series"],[4512,"impl-FromIterator%3Cf64%3E-for-Series"],[4513,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4514,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4515,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4516,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4517,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4518,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4530,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4531,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4532,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4533,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4534,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4535,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4573,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4574,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4575,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4576,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4577,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4578,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4592,"impl-Mul-for-Series"],[4593,"impl-Mul%3CT%3E-for-%26Series"],[4594,"impl-Mul%3CT%3E-for-Series"],[4595,"impl-Mul-for-%26Series"],[4601,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4602,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4604,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4605,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4606,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4607,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4608,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4609,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4610,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4611,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4612,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4613,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4614,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4615,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4616,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4617,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4618,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4619,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4620,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4621,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4622,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4623,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4624,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4625,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4626,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4627,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4628,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4629,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4630,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4631,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4632,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4633,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4634,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4635,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4640,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4641,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4642,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4643,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4644,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4645,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4654,"impl-Rem%3CT%3E-for-Series"],[4655,"impl-Rem%3CT%3E-for-%26Series"],[4656,"impl-Rem-for-%26Series"],[4684,"impl-Sub%3CT%3E-for-%26Series"],[4685,"impl-Sub-for-%26Series"],[4686,"impl-Sub-for-Series"],[4687,"impl-Sub%3CT%3E-for-Series"],[4711,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4712,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4713,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4714,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4884,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4885,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4887,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4888,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4890,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4891,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAANkMIA1dDWANYQ1iDWMNZA1pDWwNcQ1yDZcN","e":"OzAAAAEAAIoO4gEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZAAAAGYAAABpAAYAcQAAAHMAAgB5AAQAfwAAAIQABwCNAAgAmAAEAJ8AAQCiAAoAsgAAALQAAQC4AAQAvgACAMQAAwDKAAMAzwADANYAAADYAAUA4AADAOsABQD0AAMA+wABAAEBAQAEAQYAEAEOACEBBQAoARkARQEDAEoBAABMAQQAUgEBAFgBAABaAQQAYQEAAGYBAgBqAQEAbgECAHMBBwB9AQMAiAEBAI4BAQCUAQgAngEKAKoBAACsAQAArgEFALYBAAC4ASMA3QEpAAsCAgARAiMAOwIFAEUCAABHAiYAcAJMAMQCDADYAjcAEwMJAB8DAQAjAwEAJgMSADsDEwBQAwcAWQMAAFsDAABeAwIAYwMOAHMDAAB1AwAAeAMDAH0DAgCBAwEAhAMHAI0DAACPAwUAlwMBAJoDAACcAwEAnwMDAKQDAwCpAwIArQMDALMDAAC2AwAAvgMAAMMDAADGAwEAywMBAM4DAADRAwAA2QMAAOIDAgDnAwUA7wMCAPUDAAD3AwAA+QMBAP8DAQACBAEACQQBAA8EAAASBAAAFQQAABcEAAAZBAAAGwQAACAEBAAnBAEAKgQHADMEAgA5BAAAOwQDAEAEAQBDBAUATwQVAGYEAQBqBAQAcAQDAHcEBgCBBA8AkwQLAKAEAQCjBAMAswQJAMgEDQDYBAIA3AQFAOQEAADmBAwA9gQAAPgEAAD9BAEAAAUAAAIFAgAGBQAACAUAAAsFAAAOBQAAEAUBABMFAAAVBQIAGQUMACcFAAApBQEALAUAAC4FAQAxBQAAMwUBADYFAAA4BQEAOwUAAD8FAABDBQEARwUAAEoFAABMBQAATgUDAFMFAABWBQcAXwUBAGIFBQBpBQEAbQUAAG8FAAB0BQIAeAUBAHsFAAB9BQEAgAUAAIIFAQCFBQAAhwUBAIoFAACMBQEAjwUAAJEFAACUBTsA1gUEAN0FCQDpBQQA7wUIAPkFAAD7Ba4AqwYHALQGdgAsBwEALwdGAH4HAgCCBwEAhQcCAIoHAQCNBwAAowcBAKYHFwDCByQA6QcGAPIHHgAXCD8AWQgAAH0ICgCKCAAAjAgBAI8IAQCSCAAAlwgFAJ4IAAChCAIApggDAKsIHQDKCAkA1QgOAOUIHAADCQYACwkaACcJFQA+CQwATAkAAFEJAABTCQAAWAkdAHgJAgB8CVEAzwksAP0JTABLCgQAUQoBAFQKAgBYCgQAXgojAIkKAgCNCgkAmwoDAKAKFwC6CgEAvQoEAMMKDQDSCgUA2QoAANsKFQDyCgEA+AoCAP0KAQABCwkADAsEABILAQAXCwAAGQsCAB0LAQAgCwAAIgsBACgLGABCCwoATgsAAFALAgBVCwQAWwskAIELBQCICwkAlQsAAJgLCgCkCwUArwsQAMILEwDdCwEA4QsCAOULAADnCwAA7AsDAPULAgAGDAAACQwBABEMDAAkDAEAMQwCADgMAQBCDAIASgwAAE0MAABTDAAAXAwBAF8MAABiDAQAbQwEAHUMBgB+DAkAiQwAAI0MBACZDA0AqAwCAK0MCgC5DAEAvAwDAMEMAwDGDAkA0QwHANoMAQDdDBgA9wwoACENBgAsDQAALg0BADENAAA0DQMAOg0AAD8NBwBPDQ0AXg0BAGUNAwBqDQEAbg0CAHMNAAB1DR8AmA0MAKcNBQCuDQcAtw0WANANCwDdDQ4A7Q0AAO8NAADxDQMA+A0GAAIODgATDgEAFg4RACoOBAAyDgUAOg4JAEUOAgBKDgcAUw4PAGQOFgB8DiMAog4QALQOAAC2DgEAug4cANkOAgDdDhIA8Q4GAPsOAQAADyIAJg8CACoPCgA2Dx0AVg8UAGwPAQB3DwAAhg8AAIsPAACODwAAlQ8AAJgPAACdDwEAoA8GAKkPEQDKDwMAzw8CANMPAQDWDwEA8Q8CAPcPBAD+DwAAARAHAAsQAAANEAEAEhAtAEkQDABXEAAAWRAMAGsQCQB3EAYAfxAAAIEQHACfEAAAoRALAK4QAACwEAEAuRAEAMAQBQDHEAoA0xAFAN8QAQDiEAEA5hABAPoQAAD8EAAA/hAAAAIRAwAIEQQADhEDABMRBAAaEQMAIxEAACkRAgAxEQUAOBEGAEIRAwBKEQIAThEBAFIRDwBmEQIAahEBAG0RAABwEQIAfhEDAIQRAACIEQAAihEeAKwRAACzEQEAtxEBALoRAADAEQEAwxECAMkRAwDVEQMA3xECAOMRAADpEQAA8REDAPoRIQAfEgIAIxIAACUSAQApEgEALxICADQSAAA2EgAAOhIBAEASAQBEEgEASxIAAE0SAwBgEgEAYxIOAHkSAQB/EgIAgxIAAIUSGgCjEgIAqBIOALgSAQC7EgUAwhIKAM4SAADQEgAA0hIEANgSBADeEgQA5RIAAOgSAADrEgkA9hICAPsSDAAKEwYAFBMIAB4TBQAnEw0ANhMAADgTAgA8EwgARhMEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[651,"polars_io::csv::read::schema_inference"],[675,"polars_io::csv::write"],[815,"polars_io::ipc"],[1068,"polars_io::json"],[1164,"polars_io::mmap"],[1186,"polars_io::ndjson"],[1188,"polars_io::ndjson::core"],[1268,"polars_io::parquet"],[1271,"polars_io::parquet::metadata"],[1323,"polars_io::parquet::read"],[1459,"polars_io::parquet::write"],[1641,"polars_io::partition"],[1657,"polars_io::pl_async"],[1678,"polars_io::predicates"],[1732,"polars_io::prelude"],[1742,"polars_io::utils"],[1754,"dyn_clone::sealed"],[1755,"polars_io::options"],[1756,"polars_io::shared"],[1757,"alloc::boxed"],[1758,"std::io"],[1759,"core::result"],[1760,"serde::de"],[1761,"std::path"],[1762,"polars_core::frame"],[1763,"polars_error"],[1764,"core::fmt"],[1765,"core::hash"],[1766,"polars_arrow::record_batch"],[1767,"core::option"],[1768,"serde::ser"],[1769,"core::any"],[1770,"polars_io::avro::read"],[1771,"polars_arrow::datatypes::schema"],[1772,"polars_io::avro::write"],[1773,"polars_core::schema"],[1774,"alloc::string"],[1775,"alloc::vec"],[1776,"polars_io::cloud::glob"],[1777,"object_store"],[1778,"alloc::sync"],[1779,"polars_io::cloud::polars_object_store"],[1780,"polars_io::cloud::adaptors"],[1781,"std::io::error"],[1782,"crossterm::command"],[1783,"url"],[1784,"object_store::path"],[1785,"bytes::bytes"],[1786,"core::ops::range"],[1787,"core::ops::function"],[1788,"parquet_format_safe::thrift::varint::decode"],[1789,"object_store::aws::builder"],[1790,"object_store::azure::builder"],[1791,"object_store::gcp::builder"],[1792,"core::convert"],[1793,"core::iter::traits::collect"],[1794,"polars_io::csv::read::reader"],[1795,"polars_io::csv::read::read_impl::batched"],[1796,"polars_io::csv::read::options"],[1797,"std::fs"],[1798,"polars_core::datatypes::dtype"],[1799,"polars_io::csv::write::writer"],[1800,"polars_io::csv::write::options"],[1801,"core::num::nonzero"],[1802,"polars_io::ipc::ipc_stream"],[1803,"polars_io::ipc::write"],[1804,"futures_io::if_std"],[1805,"core::marker"],[1806,"polars_io::ipc::ipc_file"],[1807,"polars_io::ipc::ipc_reader_async"],[1808,"polars_arrow::io::ipc::read::file"],[1809,"polars_arrow::array::struct_"],[1810,"polars_arrow::array"],[1811,"polars_arrow::datatypes"],[1812,"polars_arrow::datatypes::field"],[1813,"polars_arrow::array::struct_::mutable"],[1814,"polars_arrow::array::growable::structure"],[1815,"polars_arrow::bitmap::immutable"],[1816,"polars_arrow::scalar"],[1817,"polars_arrow::array::struct_::iterator"],[1818,"polars_arrow::bitmap::utils::iterator"],[1819,"polars_arrow::bitmap::utils::zip_validity"],[1820,"polars_parquet::parquet::metadata::file_metadata"],[1821,"polars_parquet::parquet::metadata::column_order"],[1822,"polars_parquet::parquet::metadata::row_metadata"],[1823,"polars_parquet::arrow::read::statistics"],[1824,"parquet_format_safe::parquet_format"],[1825,"polars_parquet::parquet::metadata::schema_descriptor"],[1826,"polars_parquet::parquet::error"],[1827,"polars_io::parquet::read::reader"],[1828,"polars_io::parquet::read::read_impl"],[1829,"polars_io::parquet::read::options"],[1830,"polars_core::series"],[1831,"polars_io::parquet::write::writer"],[1832,"polars_io::parquet::write::batched_writer"],[1833,"polars_io::parquet::write::options"],[1834,"polars_parquet::parquet::write"],[1835,"core::iter::traits::iterator"],[1836,"polars_parquet::arrow::write::file"],[1837,"std::sync::mutex"],[1838,"core::future::future"],[1839,"tokio::runtime::task::join"],[1840,"polars_core::datatypes::field"],[1841,"avro_schema::file"],[1842,"polars_io::cloud::object_store_setup"],[1843,"polars_io::csv::read::parser"],[1844,"polars_io::csv::read::utils"],[1845,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,0,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,72,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,0,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,86,0,0,0,86,86,86,0,0,84,85,86,84,82,82,83,84,85,86,82,83,84,85,86,84,85,86,84,85,86,85,85,84,85,86,82,83,84,85,86,82,83,84,85,86,84,85,86,82,83,84,85,86,84,85,86,84,84,84,85,85,85,86,86,86,82,83,85,84,85,86,82,83,84,85,86,84,85,86,82,84,82,84,82,83,84,85,86,82,83,84,85,86,85,84,82,82,85,85,85,85,84,85,86,84,85,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,82,82,82,82,82,82,82,82,82,83,0,0,0,0,0,0,0,0,0,0,0,0,97,97,94,95,96,97,88,89,89,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,95,96,97,94,95,96,97,96,98,101,102,98,101,102,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,96,96,96,97,97,97,101,102,103,88,104,89,90,103,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,98,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,96,94,103,98,103,88,104,101,89,102,89,103,88,94,96,97,103,88,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,88,104,101,89,102,101,102,103,88,104,89,95,103,88,95,103,88,95,95,90,0,110,0,110,0,0,0,106,110,107,109,108,106,110,107,109,108,106,106,106,106,110,107,109,108,106,110,107,109,108,106,106,110,107,109,108,106,106,106,106,106,107,108,106,110,107,109,108,106,106,108,110,107,109,108,106,110,107,109,108,106,106,107,109,108,106,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,108,108,107,108,108,108,108,109,81,81,0,81,0,81,81,81,81,81,81,81,81,81,81,68,68,0,81,81,81,81,0,0,0,0,113,113,113,113,118,113,118,113,113,113,113,113,118,113,118,113,118,113,113,113,113,118,113,118,113,113,113,118,113,118,118,113,118,113,113,113,113,113,118,118,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,118,113,118,113,113,118,113,113,113,113,113,118,113,118,118,118,118,118,118,118,118,113,113,0,0,0,0,0,0,127,130,127,130,127,127,127,127,127,127,130,127,130,127,0,130,130,127,130,130,127,130,130,127,130,127,130,127,127,127,127,130,130,130,127,127,127,127,127,130,127,127,130,127,130,127,127,130,127,140,0,140,140,0,0,0,0,140,139,140,136,138,137,136,138,139,140,137,136,138,139,140,139,140,139,140,140,137,136,138,139,140,137,136,138,139,140,139,140,137,136,138,139,140,139,140,139,139,139,140,140,140,136,138,137,139,140,137,136,138,139,140,138,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,137,137,139,0,137,136,137,136,138,139,136,138,137,136,138,139,140,136,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,136,138,139,140,136,138,139,137,136,138,139,140,136,136,138,136,138,136,138,136,138,136,138,136,0,146,0,146,0,146,146,0,0,0,0,146,146,146,0,145,146,147,148,149,143,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,145,146,147,148,149,145,145,145,146,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,143,145,145,146,147,148,149,143,145,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,143,143,143,143,144,144,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,159,159,159,159,159,159,159,159,0,159,159,161,159,159,159,0,159,159,0,0,0,0,0,0,67,165,164,165,164,164,165,164,165,164,165,164,165,164,165,67,165,164,165,164,165,165,165,165,165,164,165,164,165,164,165,164,165,164,164,165,164,163,165,165,165,165,164,165,164,165,164,165,164,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{hEh}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}If}11{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Ij{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}<{DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{Il}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hI`}}{b{In}}}f}{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{In}}}In}{{{b{c}}{b{he}}}f{}{}}{{}In}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{In}}{b{hBf}}}Bh}{cc{}}{{{b{In}}}Af}{{{b{In}}}Hj}{{{b{Jb}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jb}}{b{I`}}}{{Bd{In}}}}1{{{b{c}}}Cf{}}4{{InHj}In}`````````{{{b{c}}d}f{}}00`{{{Jd{c}}{b{Dd}}}{{Bd{{Jf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{c}}{b{he}}}f{}{}}00``{{}Jh}{{}Jj}{{}Jl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{c{{Ah{Jl}}}Aj}{Aff}0000{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{Jl}}{b{Jl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jd{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jf{c}}}}}{{Bd{f}}}Ad}`{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{{{b{Jl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{b{Jl}}{b{hc}}}fBj}{{{Jd{c}}Al}{{Jd{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jd{c}}Af}{{Jd{c}}}Ad}{c{{Jd{c}}}Ad}````{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}{{{b{Jl}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jd{c}}Jn}{{Jd{c}}}Ad}{{{Jd{c}}{Cb{Df}}}{{Jd{c}}}Ad}0{{{Jd{c}}{Cb{Af}}}{{Jd{c}}}Ad}{{{Jd{c}}Df}{{Jd{c}}}Ad}0{{{Jd{c}}G`}{{Jd{c}}}Ad}{{{Jd{c}}Jl}{{Jd{c}}}Ad}14{{{b{h{Jf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{K`{c}}}}}{{Bd{Cj}}}Bl}{{{Kb{c}}{b{Dd}}}{{Bd{{Kd{c}}}}}Ad}{{{Kb{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KfKhKj}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Ld}}{Cb{{b{Lf}}}}}{{Bd{Lh}}}}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Ll}}c}{{Ab{A`}}}Ad}{{{b{Ld}}{Cb{{b{Lf}}}}KnAl}{{Bd{Bb}}}}{{}Lj}{{}Ll}{{}Kn}{{}L`}{{}Lb}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kl}}}Aj}{c{{Ah{L`}}}Aj}{c{{Ah{Lb}}}Aj}{Aff}00000000000{{{b{Kl}}{b{Kl}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{Lb}}{b{Lb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lj}}}An}{{{b{Ll}}}An}{{{Ln{c}}}{{Bd{Bb}}}Hh}{{{K`{c}}}{{Bd{Bb}}}Bl}{{{b{h{M`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kd{c}}}}}{{Bd{f}}}Ad}{{{Ln{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kl}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{{{b{Lb}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Ld}}}}{{{b{Kl}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{{b{Lb}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ln{c}}{Cb{An}}}{{Ln{c}}}Hh}{{{b{Ld}}}{{Bd{Lf}}}}{c{{Ln{c}}}Hh}{c{{K`{c}}}Bl}{c{{M`{c}}}Ad}{{}Lj}{c{{Kb{c}}}Ad}{{}Ll}{c{{Kb{c}}}{KfKhKj}}{{{b{h{Ln{c}}}}}{{Bd{Mb}}}Hh}{{{b{h{K`{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kl}}c}AhCd}{{{b{L`}}c}AhCd}{{{b{Lb}}c}AhCd}{{{Ln{c}}Al}{{Ln{c}}}Hh}{{{K`{c}}Al}{{K`{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ln{c}}{Cb{{Dh{Df}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Df}}}}}{{K`{c}}}Bl}{{{M`{c}}{Cb{Lb}}}{{M`{c}}}{}}{{Lj{Cb{Lb}}}Lj}{{{Kb{c}}{Cb{Lb}}}{{Kb{c}}}Ad}{{Ll{Cb{Lb}}}Ll}{{LjAn}Lj}{{LlAn}Ll}{{{Ln{c}}{Cb{Af}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{Af}}}{{K`{c}}}Bl}{{{M`{c}}Al}{{M`{c}}}{}}{{{Kb{c}}Al}{{Kb{c}}}Ad}{{Knc}Kn{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ln{c}}{Cb{{Dh{Af}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Af}}}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ln{c}}{Cb{j}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{j}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{j}}}}}}{{Knc}Kn{{Gn{{Cb{Af}}}}}}{{{b{h{Kd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Md}}}Md}{{{b{c}}{b{he}}}f{}{}}{{}Md}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Md}}}Aj}{Aff}0000{{{b{Md}}{b{Md}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mh{c}}}{{Bd{Bb}}}Hh}{{{b{Md}}{b{hBf}}}Bh}{cc{}}0000{{{b{Md}}{b{hc}}}fBj}{{{Mh{c}}{Cb{Af}}}{{Mh{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Mf{c}}}Ad}{c{{Mj{c}}}Ad}{c{{Mh{c}}}Hh}{{{b{Md}}c}AhCd}{{{Mh{c}}Al}{{Mh{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mh{c}}Jn}{{Mh{c}}}Hh}4{{{Mf{c}}Ml}{{Mf{c}}}Ad}{{{Mh{c}}Ml}{{Mh{c}}}Hh}{{{Mh{c}}{Cb{{Dh{Df}}}}}{{Mh{c}}}Hh}{{{Mh{c}}Hj}{{Mh{c}}}Hh}{{{Mh{c}}{b{Dd}}}{{Mh{c}}}Hh}{{{b{h{Mj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}{{b{{Fh{G`}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}JbHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{Il}}}}}}{{{b{Mn}}}{{Bd{Il}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}N`}``{{{b{c}}d}f{}}{Nb{{Eb{Nd}}}}{{{b{Nb}}}{{b{Nf}}}}{{{b{hNb}}}{{b{hNf}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nb{{Ab{Nd}}}}{{{b{Nb}}}Nb}{{{b{c}}{b{he}}}f{}{}}{{{b{Nb}}}{{b{Nh}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nb}}{b{{b{Nd}}}}}Al}{{{b{Nb}}{b{Nb}}}Al}{{{b{Nb}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}}{{Bd{Bb}}}Hh}{{{b{Nb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NnNb}{O`Nb}2{c{{Bd{{Nl{Il}}}}}{{Gn{An}}}}{{{b{Nh}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}{{}Af}0{ce{}{}}0{Nb{{Ed{{Dh{Nj}}{Dh{{Ab{Nd}}}}{Cb{Ob}}}}}}{{{b{Nb}}}}{{{b{Nb}}}{{Oj{{Dh{{Ab{Od}}}}OfOh}}}}{{{b{Nb}}}Af}{{{Nl{c}}Al}{{Nl{c}}}Hh}{c{{Nl{c}}}Hh}{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}Nb}{NhNb}{{NhAf}Nb}{{{b{hNb}}{Cb{Ob}}}f}{{{b{hNb}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NbAfAf}Nb}0{{{b{hNb}}}{{Cb{Ob}}}}{{{b{Nb}}}{{Ab{Nd}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}{{Ah{NbOl}}}}{{{b{c}}}Cf{}}0{{{b{Nb}}}{{Cb{{b{Ob}}}}}}0{{{b{Nb}}}{{b{{Fh{{Ab{Nd}}}}}}}}{{{b{Nb}}}Of}{ce{}{}}0{{{Nl{c}}{Cb{Jn}}}{{Nl{c}}}Hh}{{{Nl{c}}Al}{{Nl{c}}}Hh}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}0{{{Nl{c}}{Cb{e}}}{{Nl{c}}}Hh{{Gn{An}}}}2{{{Nl{c}}Hj}{{Nl{c}}}Hh}{{{Nl{c}}{b{Dd}}}{{Nl{c}}}Hh}{{Nb{Cb{Ob}}}Nb}{{{b{Nb}}{Cb{Ob}}}{{Ab{Nd}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{On}}}On}{{{b{c}}{b{he}}}f{}{}}{{{b{On}}Af}A@`}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nj}}{b{A@b}}}{{Ah{A@dOl}}}}`{Aff}0{{{b{A@d}}{b{A@d}}}Al}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{{{b{On}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@fA@d}1{{}Af}0{ce{}{}}0{OnA@h}{{{b{On}}}{{b{{Cb{{Dh{A@j}}}}}}}}``````{{{b{On}}}{{b{A@l}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@h{{Ah{OnA@n}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AA`{c}}Af}{{Bd{AAb}}}Hh}{{AAdAf}{{Bd{AAb}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAf}}}AAf}{{{b{AAh}}}AAh}{{{b{c}}{b{he}}}f{}{}}0{{}AAh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAf}}}Aj}{c{{Ah{AAh}}}Aj}{Aff}0000{{{b{AAf}}{b{AAf}}}Al}{{{b{AAh}}{b{AAh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AA`{c}}}{{Bd{Bb}}}Hh}{AAd{{Bd{Bb}}}}{{{b{AAb}}Af}Al}{{{b{AAf}}{b{hBf}}}Bh}{{{b{AAh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mb}}{Cb{AAj}}}{{Bd{AAd}}}}{{{b{h{AA`{c}}}}}{{Bd{{b{AAj}}}}}Hh}{{{b{hAAd}}}{{Bd{{b{AAj}}}}}}{{{b{AAf}}{b{hc}}}fBj}{{{b{AAh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAb}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAl}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AA`{c}}}Hh}{{{b{hAAb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AA`{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAd}}}{{Bd{Af}}}}`{{{AA`{c}}AAh}{{AA`{c}}}Hh}{{AAdAAh}AAd}{{{b{AAb}}}{{b{Mb}}}}{{{b{h{AA`{c}}}}}{{Bd{Mb}}}Hh}{{{b{hAAd}}}{{Bd{Mb}}}}{{{b{AAf}}c}AhCd}{{{b{AAh}}c}AhCd}{{{AA`{c}}Al}{{AA`{c}}}Hh}0{{AAdAl}AAd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AA`{c}}{Cb{{Dh{Df}}}}}{{AA`{c}}}Hh}{{{AA`{c}}{Cb{{Dh{AAl}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{AAl}}}}}AAd}{{{AA`{c}}{Cb{Af}}}{{AA`{c}}}Hh}{{AAd{Cb{Af}}}AAd}{{{AA`{c}}{Cb{{Eb{Hf}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Eb{Hf}}}}}AAd}{{{AA`{c}}{Cb{{Dh{Af}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{Af}}}}}AAd}{{{AA`{c}}{Cb{j}}}{{AA`{c}}}Hh}{{AAd{Cb{j}}}AAd}{{{AA`{c}}{Cb{Mb}}}{{AA`{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAn{c}}{b{Dd}}}{{Bd{{AB`{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{c}}{b{he}}}f{}{}}0000``{{}ABb}{{}ABd}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{Aff}000000{{{b{{AB`{c}}}}{b{Bb}}}{{`{{ABn{}{{H`{{Bd{{ABl{Ol}}}}}}}}}}}Ad}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AB`{c}}}}}{{Bd{AC`}}}Ad}{{{AAn{c}}{b{hBb}}}{{Bd{AC`}}}Ad}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AB`{c}}}}}{{b{{ACd{{ACb{c}}}}}}}Ad}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAn{c}}}{AdAd}}`{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{AAn{c}}Al}{{AAn{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{ACh{{Bd{ABj}}}}{{{b{c}}}Cf{}}000000======={{{AAn{c}}ABd}{{AAn{c}}}Ad}{{{AAn{c}}{Cb{Af}}}{{AAn{c}}}Ad}08{{{b{h{AB`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AB`{c}}}}{Dh{{ABl{Ol}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACj{c}}{b{Bb}}}{{Bd{f}}}{nKjACl}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACj{c}}}{nKjACl}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACj{c}}Al}{{ACj{c}}}{nKjACl}}``{{{b{ACn}}c}{}AD`}{{{b{ACn}}c}{}{AD`Kj}}=<;:97{{}{{b{ACn}}}}76{{{b{ADb}}}AC`}{{{b{ACn}}c}ADd{AD`Kj}}66{{ACfe}{}AD`{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADf}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADh}}}{{b{{Fh{ADj}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADj}}}Aj}{c{{Ah{ADh}}}Aj}{Aff}0{{{b{ADj}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAl}}}}{{{b{ADj}}{b{hBf}}}Bh}{{{b{ADh}}{b{hBf}}}Bh}{cc{}}0{AAlADj}{ADlADj}{{{b{ADj}}}{{Cb{{b{AAl}}}}}}00{{{b{ADh}}{b{Dj}}}{{Bd{{b{ADj}}}}}}{{}Af}0{ce{}{}}0{{ADl{Cb{AAl}}{Cb{AAl}}{Cb{AAl}}}ADj}{{Hj{Dh{ADj}}{Cb{Af}}}ADh}{{{b{ADj}}}{{Cb{Af}}}}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADh}}}{{b{Hj}}}}{{{b{ADj}}c}AhCd}{{{b{ADh}}c}AhCd}{{{b{ADf}}{b{ADh}}}{{Bd{Al}}}};;{{{b{ADj}}}{{Cb{AAl}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jb}}}{BlHhADn}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABn{}{{H`{Af}}}}}}{cAl{{Gl{Mn}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAl}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Mn}}}An}","D":"CJn","p":[[1,"reference"],[5,"Private",1754],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1755],[5,"HiveOptions",0,1755],[10,"WriterFactory",0,1756],[10,"SerWriter",1732,1756],[5,"Box",1757],[10,"Write",1758],[1,"usize"],[6,"Result",1759],[10,"Deserializer",1760],[1,"bool"],[5,"PathBuf",1761],[10,"SerReader",1732,1756],[5,"DataFrame",1762],[8,"PolarsResult",1763],[5,"Formatter",1764],[8,"Result",1764],[10,"Hasher",1765],[10,"Read",1758],[10,"ArrowReader",0,1756],[8,"RecordBatch",1766],[6,"Option",1767],[10,"Serializer",1768],[5,"TypeId",1769],[5,"AvroReader",80,1770],[5,"ArrowSchema",1771],[10,"Seek",1758],[6,"AvroCompression",80],[5,"AvroWriter",80,1772],[5,"Error",1764],[5,"Schema",1773],[5,"String",1774],[5,"Vec",1775],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1776],[10,"ObjectStore",1777],[5,"Arc",1778],[1,"tuple"],[5,"PolarsObjectStore",146,1779],[5,"CloudWriter",146,1780],[5,"Error",1781],[10,"Command",1782],[8,"Result",1781],[5,"Url",1783],[5,"Path",1784],[5,"Bytes",1785],[5,"Range",1786],[1,"slice"],[5,"ObjectMeta",1777],[17,"Output"],[10,"FnOnce",1787],[1,"u8"],[10,"VarInt",1788],[6,"AmazonS3ConfigKey",216,1789],[6,"AzureConfigKey",216,1790],[6,"GoogleConfigKey",216,1791],[6,"CloudType",216],[10,"AsRef",1792],[10,"Into",1792],[17,"Item"],[10,"IntoIterator",1793],[5,"CsvReader",397,1794],[10,"PhysicalIoExpr",1678],[10,"MmapBytesReader",1164],[8,"SchemaRef",1773],[5,"OwnedBatchedCsvReader",397,1795],[5,"BatchedCsvReader",397,1795],[5,"CsvReadOptions",397,1796],[5,"CsvParseOptions",397,1796],[6,"CsvEncoding",397,1796],[6,"CommentPrefix",397,1796],[6,"NullValues",397,1796],[10,"Fn",1787],[5,"File",1797],[5,"SchemaInferenceResult",651],[6,"DataType",1798],[6,"ReaderBytes",1164],[5,"CsvWriter",675,1799],[5,"BatchedWriter",675,1799],[5,"CsvWriterOptions",675,1800],[5,"SerializeOptions",675,1800],[6,"QuoteStyle",675,1800],[8,"NonZeroUsize",1801],[5,"IpcStreamReader",815,1802],[5,"IpcWriter",815,1803],[5,"BatchedWriter",815,1803],[10,"AsyncWrite",1804],[10,"Unpin",1805],[10,"Send",1805],[5,"IpcScanOptions",815,1806],[5,"IpcReadOptions",815,1807],[5,"IpcWriterOptions",815,1803],[6,"IpcCompression",815,1803],[5,"IpcReaderAsync",815,1807],[5,"FileMetadata",1808],[1,"i64"],[5,"IpcStreamWriterOption",815,1802],[5,"IpcWriterOption",815,1803],[5,"IpcReader",815,1806],[5,"IpcStreamWriter",815,1802],[8,"ArrowSchemaRef",1771],[5,"JsonWriterOptions",1068],[5,"JsonWriter",1068],[5,"JsonReader",1068],[5,"BatchedWriter",1068],[6,"JsonFormat",1068],[5,"Path",1761],[10,"BufRead",1758],[5,"StructArray",1188,1809],[10,"Array",1810],[10,"Any",1769],[6,"ArrowDataType",1811],[5,"Field",1812],[5,"JsonLineReader",1188],[5,"MutableStructArray",1813],[5,"GrowableStruct",1814],[5,"Bitmap",1815],[10,"Scalar",1816],[5,"StructValueIter",1817],[5,"BitmapIter",1818],[6,"ZipValidity",1819],[6,"PolarsError",1763],[5,"FileMetaData",1271,1820],[6,"ColumnOrder",1821],[5,"RowGroupMetaData",1822],[5,"ParquetStatistics",1271],[5,"MutableStatistics",1823],[5,"FileMetaData",1824],[5,"KeyValue",1824],[5,"SchemaDescriptor",1825],[6,"Error",1826],[5,"ParquetReader",1323,1827],[5,"BatchedParquetReader",1323,1828],[5,"ParquetAsyncReader",1323,1827],[5,"ParquetOptions",1323,1829],[6,"ParallelStrategy",1323,1829],[8,"FileMetaDataRef",1271],[5,"Series",1830],[5,"ParquetWriter",1459,1831],[5,"BatchedWriter",1459,1832],[5,"ParquetWriteOptions",1459,1833],[6,"ParquetCompression",1459,1833],[5,"GzipLevel",1459,1833],[5,"BrotliLevel",1459,1833],[5,"ZstdLevel",1459,1833],[8,"RowGroupIterColumns",1459,1834],[10,"Iterator",1835],[1,"u64"],[5,"FileWriter",1836],[5,"Mutex",1837],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1641],[10,"Sync",1805],[5,"RuntimeManager",1657],[10,"Future",1838],[10,"GetSize",1657],[5,"JoinHandle",1839],[10,"StatsEvaluator",1678],[5,"BatchStats",1678],[5,"ColumnStats",1678],[5,"Field",1840],[10,"Sized",1805]],"r":[[0,1756],[1,1755],[2,1755],[3,1756],[4,1756],[5,1756],[81,1770],[82,1772],[83,1841],[146,1776],[147,1780],[148,1779],[157,1842],[184,1776],[219,1789],[224,1790],[248,1791],[399,1795],[400,1796],[401,1796],[402,1796],[403,1796],[404,1794],[408,1796],[409,1795],[449,1843],[529,651],[548,1844],[676,1799],[677,1799],[678,1800],[682,1800],[683,1800],[815,1803],[816,1803],[817,1807],[818,1806],[819,1807],[820,1806],[821,1802],[822,1802],[823,1802],[824,1803],[825,1803],[826,1803],[1189,1809],[1271,1820],[1288,1823],[1324,1828],[1327,1829],[1328,1827],[1329,1829],[1330,1827],[1405,1845],[1459,1832],[1461,1833],[1463,1833],[1466,1833],[1467,1833],[1468,1831],[1469,1834],[1473,1833],[1732,1756],[1733,1756],[1734,0]],"b":[[1208,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1209,"impl-PartialEq-for-StructArray"],[1214,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1215,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1234,"impl-StructArray"],[1235,"impl-Array-for-StructArray"],[1238,"impl-Array-for-StructArray"],[1239,"impl-StructArray"],[1252,"impl-Array-for-StructArray"],[1253,"impl-StructArray"],[1266,"impl-StructArray"],[1267,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAMFoAAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAcCAAAKAhEAJgIAACgCAgAvAisAXAIIAGYCBwB+AgAAjAIKAJgCAQCbAgAAnQIGAKUCAACtAhQAxAIhAOgCAgDwAgIA9AIAAPYCBQACAwIACQMDAA4DFgAwAwAAMgMAADUDAAA4AwAAOgMBAD4DAwBDAyEAZgM+AKYDAwC2Aw8A0wMAANUDBwDfAzgAIgQCACcEAAAqBAEALQQAADMEIwBYBAAAXgQAAGAEBABsBBgAhwQBAI0EAQCQBAgAmgQAAJwEAQCfBAYApwQAAKkEBQCwBAoAvAQBAL8EAQDEBAIAygQAAMwEAADUBAMA3AQFAOMEAgDpBAEA7QQFAPQEAAD5BAAA+wQGAAUFAwALBQQAEQUAABMFAQAhBQIAJQUDACoFAQAtBQAAMAUAADIFAAA1BTAAawUJAHoFAAB8BQMAgQUAAIMFAQCGBQEAiQUCAI0FEgCiBQUAqQUBAKwFAgCwBQAAsgUAALQFAQC3BQAAuQUBALwFAAC+BQMAwwUdAOMFMAAWBgQAIgYMADkGBABABiMAaQYAAGsGBQByBgAAdAYEAHoGAgB+BgQAhAYBAIcGAACJBgUAkQYCAJUGAwCaBgcApAYBAK4GAQC3BgIAvQYKAMkGAADLBgAAzwYDANUGAQDZBgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPPGPPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPKPPPPPPPPPPPPPFPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPGPPPPPPPPPKPPPPPPPFPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPPFPPPPPPPPKPPPPFPPFPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","Ternary","Then","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1371,"polars_lazy::dsl::AggExpr"],[1378,"polars_lazy::dsl::BooleanFunction"],[1381,"polars_lazy::dsl::Expr"],[1415,"polars_lazy::dsl::FunctionExpr"],[1459,"polars_lazy::dsl::StringFunction"],[1479,"polars_lazy::dsl::binary"],[1499,"polars_lazy::dsl::cat"],[1500,"polars_lazy::dsl::dt"],[1556,"polars_lazy::dsl::function_expr"],[1721,"polars_lazy::dsl::function_expr::BooleanFunction"],[1724,"polars_lazy::dsl::function_expr::FunctionExpr"],[1768,"polars_lazy::dsl::function_expr::StringFunction"],[1788,"polars_lazy::dsl::function_expr::cat"],[1790,"polars_lazy::dsl::function_expr::pow"],[1794,"polars_lazy::dsl::function_expr::rolling"],[1826,"polars_lazy::dsl::function_expr::rolling_by"],[1857,"polars_lazy::dsl::function_expr::trigonometry"],[1899,"polars_lazy::dsl::functions"],[1974,"polars_lazy::dsl::python_udf"],[2019,"polars_lazy::dsl::string"],[2081,"polars_lazy::dsl::udf"],[2087,"polars_lazy::frame"],[2523,"polars_lazy::frame::pivot"],[2525,"polars_lazy::physical_plan"],[2527,"polars_lazy::physical_plan::executors"],[2543,"polars_lazy::physical_plan::planner"],[2544,"polars_lazy::prelude"],[3133,"polars_lazy::prelude::DslPlan"],[3185,"polars_lazy::prelude::LiteralValue"],[3188,"dyn_clone::sealed"],[3189,"polars_plan::dsl::meta"],[3190,"polars_plan::dsl::expr"],[3191,"polars_error"],[3192,"core::result"],[3193,"polars_plan::dsl::array"],[3194,"polars_plan::dsl::list"],[3195,"core::convert"],[3196,"polars_plan::dsl::expr_dyn_fn"],[3197,"alloc::sync"],[3198,"polars_core::series"],[3199,"core::option"],[3200,"core::ops::function"],[3201,"core::marker"],[3202,"polars_plan::logical_plan::visitor"],[3203,"polars_plan::dsl::function_expr"],[3204,"polars_core::datatypes::dtype"],[3205,"polars_core::chunked_array::ops::sort::options"],[3206,"polars_plan::dsl::function_expr::schema"],[3207,"polars_core::datatypes::field"],[3208,"core::any"],[3209,"alloc::vec"],[3210,"polars_plan::dsl::binary"],[3211,"core::clone"],[3212,"alloc::string"],[3213,"polars_plan::dsl::udf"],[3214,"polars_plan::dsl::cat"],[3215,"polars_plan::dsl::arity"],[3216,"polars_plan::dsl::function_expr::boolean"],[3217,"polars_plan::dsl::function_expr::cat"],[3218,"polars_plan::dsl::function_expr::pow"],[3219,"polars_plan::dsl::function_expr::strings"],[3220,"polars_plan::dsl::functions::temporal"],[3221,"polars_plan::dsl::options"],[3222,"polars_core::utils"],[3223,"polars_lazy::dsl::eval"],[3224,"polars_time::windows::duration"],[3225,"polars_time::windows::group_by"],[3226,"polars_core::datatypes::time_unit"],[3227,"serde::de"],[3228,"polars_plan::logical_plan"],[3229,"polars_core::series::ops"],[3230,"polars_plan::dsl::dt"],[3231,"polars_lazy::dsl::list"],[3232,"polars_arrow::legacy::kernels::ewm"],[3233,"polars_plan::dsl::struct_"],[3234,"polars_core::chunked_array::ops"],[3235,"core::fmt"],[3236,"polars_plan::logical_plan::apply"],[3237,"polars_plan::dsl::function_expr::binary"],[3238,"polars_plan::dsl::function_expr::array"],[3239,"polars_plan::dsl::function_expr::list"],[3240,"polars_plan::dsl::function_expr::range"],[3241,"polars_plan::dsl::function_expr::struct_"],[3242,"polars_plan::dsl::function_expr::business"],[3243,"polars_plan::dsl::function_expr::datetime"],[3244,"polars_plan::logical_plan::options"],[3245,"polars_core::schema"],[3246,"core::hash"],[3247,"polars_ops::series::ops::interpolation::interpolate"],[3248,"polars_ops::series::ops::is_between"],[3249,"polars_plan::dsl::name"],[3250,"polars_plan::logical_plan::lit"],[3251,"polars_plan::dsl::python_udf"],[3252,"polars_utils::idx_vec"],[3253,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3254,"polars_ops::series::ops::rank"],[3255,"polars_time::group_by::dynamic"],[3256,"polars_core::chunked_array::ops::rolling_window"],[3257,"polars_core::datatypes"],[3258,"polars_core::chunked_array"],[3259,"polars_time::chunkedarray::rolling_window"],[3260,"polars_core::chunked_array::ops::search_sorted"],[3261,"serde::ser"],[3262,"polars_core::series::series_trait"],[3263,"polars_plan::dsl::string"],[3264,"polars_ops::chunked_array::list::to_struct"],[3265,"polars_ops::series::ops::business"],[3266,"polars_arrow::legacy::kernels::time"],[3267,"polars_plan::dsl::function_expr::rolling"],[3268,"polars_plan::dsl::function_expr::rolling_by"],[3269,"polars_plan::dsl::function_expr::trigonometry"],[3270,"polars_core::frame"],[3271,"rayon::iter"],[3272,"pyo3::types::any"],[3273,"pyo3::instance"],[3274,"polars_utils::arena"],[3275,"polars_plan::logical_plan::alp"],[3276,"polars_plan::logical_plan::aexpr"],[3277,"polars_lazy::scan::ndjson"],[3278,"polars_plan::logical_plan::anonymous_scan"],[3279,"polars_lazy::scan::anonymous_scan"],[3280,"polars_utils::index"],[3281,"polars_lazy::frame::exitable"],[3282,"polars_utils::aliases"],[3283,"polars_lazy::scan::csv"],[3284,"polars_lazy::scan::ipc"],[3285,"polars_lazy::scan::parquet"],[3286,"polars_plan::frame::opt_state"],[3287,"polars_lazy::scan::file_list_reader"],[3288,"polars_io::cloud::options"],[3289,"polars_ops::frame::join::args"],[3290,"core::iter::traits::collect"],[3291,"polars_core::frame::explode"],[3292,"std::path"],[3293,"polars_io::options"],[3294,"polars_io::csv::write::options"],[3295,"polars_io::ipc::write"],[3296,"polars_io::json"],[3297,"polars_io::parquet::write::options"],[3298,"smartstring::alias"],[3299,"core::num::nonzero"],[3300,"polars_io::csv::read::options"],[3301,"polars_lazy::physical_plan::executors::executor"],[3302,"polars_expr::state::execution_state"],[3303,"alloc::boxed"],[3304,"chrono_tz::timezones"],[3305,"core::cmp"],[3306,"polars_core::frame::group_by::proxy"],[3307,"polars_core::datatypes::any_value"],[3308,"chrono::naive::datetime"],[3309,"polars_plan::dsl::functions::selectors"],[3310,"polars_plan::dsl::functions::horizontal"],[3311,"polars_plan::dsl::functions::arity"],[3312,"polars_plan::dsl"],[3313,"polars_plan::dsl::functions::range"],[3314,"polars_plan::dsl::functions::index"],[3315,"polars_plan::dsl::functions::coerce"],[3316,"polars_plan::dsl::functions::syntactic_sugar"],[3317,"polars_plan::dsl::functions::business"],[3318,"polars_plan::dsl::functions::concat"],[3319,"polars_plan::dsl::functions::correlation"],[3320,"polars_plan::dsl::functions::repeat"],[3321,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,54,54,40,5,54,54,27,27,27,27,0,27,27,27,57,57,5,27,0,27,0,27,5,27,0,0,56,27,0,0,27,27,5,5,27,57,57,57,27,36,57,27,27,27,27,27,27,27,0,27,40,27,27,53,5,0,57,27,40,40,27,27,27,27,5,0,27,5,57,64,0,0,0,27,57,57,57,5,0,0,27,27,5,57,36,27,40,27,5,0,0,27,5,27,56,55,0,64,40,40,27,57,57,57,27,36,5,27,27,0,54,54,54,54,54,54,54,54,54,54,54,54,64,0,57,57,5,27,36,5,57,57,27,0,0,5,27,27,40,40,27,57,40,40,36,27,36,27,36,0,36,27,40,27,40,40,36,53,27,54,40,40,5,27,0,40,63,57,57,27,27,27,40,27,0,27,36,27,27,27,27,27,27,5,0,27,57,27,27,57,27,63,0,27,27,27,27,27,5,0,0,27,27,27,27,27,27,5,57,5,5,0,57,57,57,56,57,36,27,0,57,57,57,57,57,57,0,27,0,5,36,27,57,27,5,0,57,57,57,27,27,27,27,40,0,27,27,27,57,0,27,36,0,5,5,0,0,40,57,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,4,4,4,4,5,5,5,5,0,9,10,5,0,62,58,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,62,5,34,36,0,0,5,0,5,0,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,5,5,0,61,44,46,34,47,46,0,5,0,5,5,5,5,5,5,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,67,67,5,0,0,0,0,58,59,60,5,17,17,17,58,59,61,62,63,64,5,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,17,54,55,56,57,27,58,59,60,61,62,63,64,46,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,10,5,5,5,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,5,10,5,0,5,0,0,0,5,36,5,5,53,40,17,17,54,55,56,57,27,60,61,62,63,64,5,5,5,5,53,53,53,40,40,40,54,54,54,55,55,55,56,56,56,57,57,57,60,60,60,61,61,61,62,62,62,63,63,63,64,64,64,79,79,5,5,5,5,61,5,5,5,5,5,81,81,81,5,5,5,5,0,10,5,5,17,5,5,34,47,44,85,5,5,53,40,40,17,54,54,55,55,56,56,57,57,27,27,58,59,60,61,62,63,64,46,0,62,61,0,5,48,9,32,10,4,106,81,49,50,51,52,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,53,40,17,17,17,17,17,17,17,17,17,17,17,17,54,55,56,57,27,27,27,27,27,58,59,60,61,62,63,63,64,46,17,46,0,5,0,10,5,10,5,9,10,5,48,73,15,32,34,85,5,5,4,36,5,5,53,40,54,55,56,57,27,60,61,62,63,64,10,5,5,58,59,5,0,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,46,0,0,5,5,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,5,103,10,4,5,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,81,106,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,106,5,0,5,32,32,17,17,5,17,106,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,58,59,59,0,9,10,5,0,60,58,59,5,58,5,9,10,5,5,46,5,5,59,5,5,5,32,32,17,58,59,46,5,5,0,5,0,5,46,5,50,52,4,5,5,5,5,5,0,5,4,5,106,106,5,0,5,5,0,5,5,5,0,5,5,81,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,62,62,17,5,10,10,5,5,58,59,36,5,53,40,17,17,17,54,55,56,57,27,60,61,62,63,64,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,61,5,0,5,5,106,106,0,9,10,5,0,17,10,5,5,5,0,49,51,0,58,59,58,10,5,9,106,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,5,32,5,40,54,55,56,57,27,9,10,106,5,5,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,32,32,5,32,34,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,48,9,32,10,4,106,81,49,50,51,52,36,5,53,40,17,54,55,56,57,27,58,59,60,61,62,63,64,46,59,0,50,52,60,58,58,59,32,81,59,58,59,58,59,58,59,59,58,59,58,59,32,32,58,59,58,58,59,58,5,58,199,200,201,199,200,201,199,202,203,204,205,206,207,207,208,209,205,210,211,212,213,214,210,209,212,206,215,214,216,215,215,216,208,212,213,214,214,213,211,209,216,205,207,211,217,218,219,220,221,222,223,224,225,226,226,220,221,217,220,221,217,221,217,227,228,222,229,230,231,218,230,232,233,234,235,231,217,236,237,238,239,240,241,232,229,231,242,243,244,245,246,247,248,249,244,245,250,247,248,249,251,252,253,253,250,246,251,252,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,27,54,54,54,54,27,27,27,27,27,27,27,57,57,27,27,0,27,27,0,56,27,27,27,27,57,57,57,27,57,27,27,27,27,27,27,27,27,27,27,57,27,27,27,27,27,27,57,27,57,57,57,27,27,57,27,27,0,27,27,56,55,27,57,57,57,27,27,27,54,54,54,54,54,54,54,54,54,54,54,54,57,57,27,57,57,27,27,27,27,57,27,27,27,27,27,54,27,57,57,27,27,27,27,0,27,27,27,27,27,27,27,27,57,27,27,57,27,27,27,27,27,27,27,27,27,27,27,27,57,57,57,57,56,57,27,0,57,57,57,57,57,57,27,27,57,27,57,57,57,27,27,27,27,27,27,27,57,27,57,0,0,0,0,0,202,203,204,217,218,219,220,221,222,223,224,225,226,226,220,221,217,220,221,217,221,217,227,228,222,229,230,231,218,230,232,233,234,235,231,217,236,237,238,239,240,241,232,229,231,242,243,244,245,246,247,248,249,244,245,250,247,248,249,251,252,253,253,250,246,251,252,0,55,56,56,0,56,127,127,127,127,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,59,0,0,0,0,0,58,59,0,0,0,0,0,0,0,0,0,58,59,59,0,58,59,58,59,0,0,0,0,0,0,0,58,59,0,0,0,0,58,59,58,59,58,0,0,0,0,136,109,136,109,136,109,136,136,136,109,136,109,136,136,109,136,136,136,136,136,136,109,136,136,109,109,136,109,136,109,136,136,109,136,109,136,109,109,136,109,136,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,133,144,148,153,154,146,155,156,133,133,144,145,146,133,133,144,146,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,154,155,151,133,133,151,133,144,148,153,154,146,155,156,151,133,144,148,153,154,146,155,156,157,157,154,155,166,156,145,133,133,166,156,166,156,157,157,153,133,133,133,148,154,155,156,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,133,133,145,151,151,133,133,144,148,153,154,146,155,156,133,166,156,133,133,166,156,151,133,151,166,156,133,133,133,145,157,157,153,157,153,146,133,156,145,145,151,133,133,133,144,148,153,154,146,155,156,133,133,157,157,153,155,133,133,133,144,155,145,148,145,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,157,157,133,133,145,133,165,133,133,145,133,133,144,146,155,133,133,133,133,133,133,154,133,133,157,153,146,148,154,155,148,145,153,146,153,146,133,145,133,155,157,153,146,157,153,146,0,166,156,133,166,156,133,157,153,146,154,155,133,133,145,133,166,156,157,153,146,148,154,155,146,133,133,133,133,133,133,146,148,133,133,133,133,133,166,156,133,133,133,133,133,133,148,133,166,156,133,133,133,166,156,145,133,133,144,133,133,133,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,166,156,145,151,133,144,148,153,154,146,155,156,133,133,133,155,145,133,145,151,133,144,148,153,154,146,155,156,145,146,153,133,133,133,133,133,133,153,133,153,153,153,153,153,153,153,146,153,146,153,153,157,153,153,146,146,153,133,157,153,146,157,153,146,133,133,153,153,157,153,146,133,157,133,153,153,146,146,153,146,153,153,133,153,153,133,133,153,153,133,133,0,0,0,0,0,0,187,187,187,187,187,185,187,187,187,187,187,187,187,187,0,0,0,0,162,162,190,191,191,75,162,0,75,191,191,190,75,0,0,191,0,75,75,191,191,191,162,75,75,75,162,191,191,191,191,191,0,75,0,0,0,0,162,0,0,181,181,75,190,190,0,0,191,181,181,190,0,0,75,191,0,0,0,75,75,162,191,75,75,75,191,191,191,191,191,191,191,75,0,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,70,70,70,147,147,147,147,174,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,161,113,70,164,70,175,177,75,177,70,70,161,113,174,175,176,164,181,177,112,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,112,75,75,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,161,161,161,113,113,113,70,70,70,174,174,174,175,175,175,176,176,176,164,164,164,162,162,162,181,181,181,177,177,177,192,192,192,135,135,135,161,161,113,70,70,174,147,175,176,164,162,162,181,181,177,190,112,191,192,135,192,161,113,70,174,172,175,176,164,164,162,181,196,177,190,112,191,192,135,75,135,191,194,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,164,174,161,174,161,113,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,162,70,70,181,70,164,161,107,196,191,174,175,176,177,191,112,70,70,70,172,70,181,70,70,164,161,113,172,135,70,70,70,161,113,172,135,194,177,147,147,172,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,174,192,164,161,177,164,164,75,191,161,113,70,174,175,176,164,162,181,177,190,112,191,192,135,75,70,162,181,135,70,70,70,70,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,191,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,164,161,113,70,174,172,175,176,164,162,181,196,177,190,112,191,192,135,75,70,70,164,172,254,254,255,256,257,258,259,260,261,262,262,263,257,264,257,260,254,261,265,256,266,263,258,267,268,268,255,269,254,268,266,254,266,270,260,254,268,261,265,269,259,262,267,264,262,259,268,262,259,259,256,256,271,271,271],"f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0`{jF`}{jj}0{{jjj}j}{{jj}j}0{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fj}}}Fj}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Cf}}}Cf}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hb{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHd}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HfjHhAf}j}0{{j{Dj{Hj}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjHlHn{Bh{I`}}{Bh{Ej}}}j}{Gdj}11```{{}j}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{Ib}}}}}}{{}Gd}{{}Gf}{{}Gj}{{}Gl}{{}Gn}{{}H`}{jj}{Hh{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}11111111111111{Hh{{b{C`c}}}{}}0000000000000000000000000000{c{{n{Dh}}}Id}{c{{n{j}}}Id}{c{{n{Fj}}}Id}{c{{n{E`}}}Id}{c{{n{{Bb{Bd}}}}}Id}{c{{n{{Bb{{B`{If}}}}}}}Id}{c{{n{{Bb{{B`{Dd}}}}}}}Id}{c{{n{Fl}}}Id}{c{{n{Fn}}}Id}{c{{n{G`}}}Id}{c{{n{Gb}}}Id}{c{{n{Cf}}}Id}{c{{n{Gh}}}Id}{c{{n{Gj}}}Id}{c{{n{Gl}}}Id}{c{{n{Gn}}}Id}{c{{n{H`}}}Id}{{AdChIh}j}{{jChIh}j}{{jj}}{{jc}j{{Al{j}}}}{Hhf}0000000000000000000000000000{jj}{Adj}1`{jIj}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jHjAf}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fj}}{b{Fj}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfIl}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000{{InjAf}j}0{{jJ`}j}{{jjHl}j}11`{{jc}j{{Hb{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JbCh}j}{{Jb{b{A`}}}j}{{Jb{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJd}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jf}}}{{n{fJh}}}}{{{b{En}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Eh}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Jj}}{b{C`Jf}}}{{n{fJh}}}}{{{b{j}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{Fj}}{b{C`Jf}}}{{n{fJh}}}}{{{b{E`}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{{Bb{c}}}}{b{C`Jf}}}{{n{fJh}}}{}}{{{b{Fl}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{Fn}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{G`}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{Gb}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{Cf}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{Gd}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Gf}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Gh}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Gj}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Gl}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Gn}}{b{C`Jf}}}{{n{fJh}}}}{{{b{H`}}{b{C`Jf}}}{{n{fJh}}}}{{{b{El}}{b{C`Jf}}}{{n{fJh}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{{{b{A`}}}j}{Afj}{Jlj}{Jnj}{K`j}{Chj}{Kbj}{Dhj}8{Kdj}{Hjj}{Hdj}{Dlj}{Efj}=={Kf{{Bb{{B`{Dd}}}}}}{Kh{{Bb{{B`{Dd}}}}}}{Kj{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Fl{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{cc{}}{L`{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}4444{GbCf}{KfCf}{FlCf}7{FnCf}88888{H`Gn}999{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Ld}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHhHh}j}{{AbjAf}j}43{F`j}{{{b{Ib}}{b{Lf}}Lh{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lf}}Lh{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hh}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jj}}{b{Lf}}}{{n{{B`{Lf}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLj}{{{b{j}}{b{C`c}}}fLj}{{jDlDlDlDl}j}{{{b{Fj}}{b{C`c}}}fLj}{{{b{E`}}{b{C`c}}}fLj}{{{b{Fl}}{b{C`c}}}fLj}{{{b{Fn}}{b{C`c}}}fLj}{{{b{G`}}{b{C`c}}}fLj}{{{b{Gb}}{b{C`c}}}fLj}{{{b{Cf}}{b{C`c}}}fLj}{{{b{Gh}}{b{C`c}}}fLj}{{{b{Gj}}{b{C`c}}}fLj}{{{b{Gl}}{b{C`c}}}fLj}{{{b{Gn}}{b{C`c}}}fLj}{{{b{H`}}{b{C`c}}}fLj}{{Adj}j}{{j{Bh{Hh}}}j}{{j{Bh{j}}{Bh{Hh}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hh}0000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLl}j}{{jj}j}{ce{}{}}0000000000000000000000000000{{{b{j}}}}{LnAd}{AdAd}{h{{n{{`{M`}}l}}}}{{jccMb}j{{Al{j}}}}{{{b{h}}}Af}==={{jc}j{{Al{j}}}}>>>>>>>>11>{{AbjAf}j}{{AdjAf}j}{Jbj}{Mdj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMf}{{jHj}j}3;;3;;{{Mdc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mh{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Md{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMjAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMd}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gd}{{}Gf}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{Ml{{b{j}}}}}}}f}{{j{b{C`{Ml{j}}}}}f}=={Chj}>`8{{Fdc}j{{Al{j}}}}{{Fhc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jeH`}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHd}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Md{b{A`}}}j}05`{{j{Dj{Hj}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHh{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jMn}j}{{jjMn}j}9{{jN`{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jb{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}}j}`{Abj}{Adj}{jj}00{{jNb}j}{{jjGh}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nd}j}{{jHhc}j{{Cd{{b{C`{Nh{Nf}}}}}{{Bf{{Bh{Hj}}}}}}BlBnNj}}{{jNd}j}{{jjNl}j}101010{{jMnHjNd}j}{{jjMnHjNl}j}{{jHhAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jK`}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcNn}j{{Al{j}}}}``{{{b{Dh}}c}nO`}{{{b{j}}c}nO`}{{{b{Fj}}c}nO`}{{{b{E`}}c}nO`}{{{b{{Bb{{B`{If}}}}}}c}nO`}{{{b{{Bb{Bd}}}}c}nO`}{{{b{{Bb{{B`{Dd}}}}}}c}nO`}{{{b{Fl}}c}nO`}{{{b{Fn}}c}nO`}{{{b{G`}}c}nO`}{{{b{Gb}}c}nO`}{{{b{Cf}}c}nO`}{{{b{Gh}}c}nO`}{{{b{Gj}}c}nO`}{{{b{Gl}}c}nO`}{{{b{Gn}}c}nO`}{{{b{H`}}c}nO`}{{Adc}j{{Al{j}}}}0{{jOb}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHdAf}j}8{{AbHd}j}{{AdHd}j}{{jHd}j}{jOd}`{{jCj}j}`{jJb}{{jj}}{{Md{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hh}}}j}44{{jjj}j}{{Fbc}Fd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{jjHlHn}j}```{{AdHh}j}{{{b{j}}{b{Lf}}Lh}{{n{Dbl}}}}<{Mdj}{{{b{c}}}e{}{}}000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOf{Bh{{B`{Bj}}}}Hh}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Mh{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mh{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mh{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hd}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}0000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHd}j}{{AdHd}j}{{jHd}j}{ce{}{}}0000000000000000000000000000`{cFb{{Al{j}}}}{{Fdc}Ff{{Al{j}}}}{{Fhc}Ff{{Al{j}}}}`{{Gdj}Gd}0{{Gfj}Gf}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jb{Dj{j}}}j}{{Gfjjj}Gf}{{Gdjjj}Gd}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GdI`}Gd}{{Gd{Bh{Ej}}}Gd}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{Hhf}3{cc{}}87{{}Hh}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2``{{Ijj{Ed{Af}}{Dj{Ef}}Oj}j}{Ijj}<;{{IjI`}j}1{{IjjI`}j}{{IjEj}j}333<;:393873333333333{{Ijj}j}44{{Ij{Bh{Ej}}jOl}j}{{Ijjc}j{{Aj{A`}}}}6{{Ij{b{A`}}}j}7607777777{{IjjEj}j};;:<8878```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{On}}}On}{{{b{c}}{b{C`e}}}f{}{}}{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{c{{n{On}}}Id}{Hhf}{{{b{On}}{b{On}}}Af}{{{b{On}}{b{C`Jf}}}{{n{fJh}}}}0{cc{}}{{{b{On}}{b{C`c}}}fLj}{{}Hh}{ce{}{}}{{{b{On}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{c{{n{A@`}}}Id}{Hhf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`Jf}}}{{n{fJh}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLj}{{}Hh}{ce{}{}}{{{b{A@`}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{c{{n{A@b}}}Id}{Hhf}{{{b{A@b}}{b{A@b}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@b}}{b{C`Jf}}}{{n{fJh}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLj}{{}Hh}{ce{}{}}{{{b{A@b}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@f{{Dj{A@d}}}}}{{A@l{}{{A@h{A@j}}}}}}{cj{{Hb{Ej}}}}{{cA@n}{{A@f{A@j}}}{{Aj{{Ah{A@j}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHd}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjHlHn{Bh{I`}}{Bh{Ej}}}j}0{Gdj}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gfj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jMn}j}>{{cj}j{{Al{j}}}}{{jjGh}j}0``{{jjHdAf}j}4{{jjHlHn}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mj}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AA`}}A@d}{{n{A@dl}}}}{{{b{AA`}}}AA`}{{{b{c}}{b{C`e}}}f{}{}}{Hh{{b{c}}}{}}0{Hh{{b{C`c}}}{}}0{c{{n{AA`}}}Id}{Hhf}0{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AA`}}{b{C`Jf}}}{{n{fJh}}}}{cc{}}{{{AAd{AAb}}}AA`}1{{{b{Mj}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hh}0{ce{}{}}0{{{AAd{AAb}}{Bh{Cj}}Af}Mj}{{{b{AA`}}c}nO`}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mj}}{b{C`{Dj{Hd}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}066`{{OdAf}j}{Odj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Od{b{A`}}Af}j}{{OdjAf}j}{{Odj}j}1{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{Hhf}38{{OdjHh}j}4{{Od{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hh}{ce{}{}}{{Od{Bh{Cj}}{Bh{Hh}}}j}9>>{{OdHhAAf}j}0{{OdjjAf}j}0{{OdjjAfCh}j}{Odj}{{Odjj}j}>::>:>>>>>>{{OdCjGjj}j}?{{OdGj}j}{{Od{Bh{I`}}{Bh{Ej}}Gjj}j}{{OdHh}j}{{OdjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}={{Odj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@jc}{{A@f{A@d}}}{{Bj{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{Bf{{A@f{f}}}}}}}}{{A@jAf}A@j}{{AB`c}A@j{{Aj{{Ah{j}}}}}}{{ABbAf}ABb}{{{b{ABd}}}Af}{{{B`{ABf}}ABh}{{A@f{A@j}}}}{{A@jA@jcc}A@j{{Al{j}}}}{{AB`cABj}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{{b{ABd}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{A@jA@j}``{{{b{ABn}}}f}{{A@j{AC`{{b{A`}}Cj}}Af}A@j}{{A@jCjAf}A@j}{{{b{ABn}}}ABn}{{{b{A@j}}}A@j}{{{b{AB`}}}AB`}{{{b{ABh}}}ABh}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ABd}}}ABd}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACj}}}{{Bh{{b{ACl}}}}}}0````{{ABbACn}ABb}{A@j{{A@f{A@d}}}}{A@j{{A@f{ABn}}}}````{{{b{ACj}}{Dj{A@j}}}{{A@f{A@j}}}}0{{{b{ACb}}{Dj{A@j}}}{{A@f{A@j}}}}{A@jA@j}{{A@jA@j}A@j}{{}A@j}{{}ABh}{{}ACd}{{}ACf}{{}ACh}{Hh{{b{c}}}{}}000000000{Hh{{b{C`c}}}{}}000000000{{{b{A@j}}}{{A@f{Ej}}}}000{Hhf}{{{b{C`ABn}}}f}11{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}2222222{{A@j{Bh{{Dj{j}}}}}A@j}``{{{b{A@j}}Af}{{A@f{Ej}}}}{{A@je}A@j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ABn}}}{{Bh{{A@f{A@d}}}}}}{{A@jHh}{{A@f{A@d}}}}{{{b{ABn}}}{{A@f{A@d}}}}``{{A@jc}A@j{{Al{j}}}}0{{A@jj}A@j}{ABbA@j}{ACj{{A@f{A@j}}}}0{ACb{{A@f{A@j}}}}10{ABd{{A@f{A@j}}}}{A@jA@j}{{{b{ACh}}{b{C`Jf}}}{{n{fJh}}}}{{ABbAf}ABb}{cc{}}0{AB`A@j}{IfA@j}22222222{{A@jA@jcc}A@j{{Al{j}}}}{{{b{A@j}}}ACh}{{{b{ACj}}}Af}0{{{b{ACb}}}Af}`{{A@je}AB`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{A@jjcADb}AB`{{Aj{{Ah{j}}}}}}1{{AB`{Bh{Hh}}}A@j}`{{ABbADd}ABb}`{{}Hh}0000000008{ce{}{}}000000000{{{b{ACj}}}{{A@f{{Bh{ADf}}}}}}0{{A@jA@jccADh}A@j{{Aj{{Ah{j}}}}}}{A@jABb}{{ABbAf}ABb}{A@jA@j}{ADjA@j}1?{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jABl}A@j}``{{ABdAf}ABd}`{{A@jcADl{Bh{{B`{Jj}}}}{Bh{{b{A`}}}}}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{A@jAA`ADl{Bh{ABj}}Af}A@j}666{{A@jADn}A@j}`{{A@jA@j{b{A`}}}{{A@f{A@j}}}}8{{{b{ACj}}}{{Bh{Hh}}}}{{{b{ACb}}}{{Bh{Hh}}}}{{{b{ABd}}}{{Bh{Hh}}}}````={cACb{{Aj{AE`}}}}{cABd{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}}ACb}{{{B`{{Ah{AEb}}}}}ABd}?={{A@j{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{AAh}}}}`{{{b{ACj}}}{{b{AE`}}}}{{{b{ACb}}}{{b{AE`}}}}{{{b{ABd}}}{{b{AE`}}}}{{{b{ACj}}}{{b{{Ah{AEb}}}}}}{{{b{ACb}}}{{b{{Ah{AEb}}}}}}{{{b{ABd}}}{{b{{Ah{AEb}}}}}}```{A@j{{A@f{{AEd{A@dA@d}}}}}}``{{A@jjMn}A@j}{{{b{ACj}}}Af}{{{b{ACb}}}Af}{{{b{ABd}}}Af}``{{A@jei}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}}{A@jA@j}{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jjcNb}AB`{{Aj{{Ah{j}}}}}}``{{{b{ACj}}}{{Bh{{b{AEf}}}}}}{{{b{ACb}}}{{Bh{{b{AEf}}}}}}{{{b{ABd}}}{{Bh{{b{AEf}}}}}}```{{{b{ABd}}AEh}{{A@f{A@d}}}}{{LfAEjAf}A@j}{{cACd}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACd}{{A@f{A@j}}}}{{cACf}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACf}{{A@f{A@j}}}}{{{b{A@j}}}{{A@f{ABj}}}}{{{b{ABd}}{Bh{Hh}}}{{A@f{ABj}}}}`{{A@jc}A@j{{Aj{{Ah{j}}}}}}0{{A@jA@jcc}A@j{{Al{j}}}}{{A@jc}A@j{{Al{j}}}}{{A@jce}A@j{{Al{j}}}{{Al{j}}}}``{{A@jAEbAEl}{{A@f{f}}}}{{A@jAEbAEn}{{A@f{f}}}}{{A@jEj{Bh{ACl}}AEn}{{A@f{f}}}}{{A@jAEbAF`}{{A@f{f}}}}{{A@jAEbAFb}{{A@f{f}}}}{{A@jEj{Bh{ACl}}AFb}{{A@f{f}}}}`{{A@jChABl}A@j}``{{A@jcCn}A@j{{Hb{AFd}}}}{{A@jcCn}A@j{{Aj{{Ah{j}}}}}}{{A@jHd}A@j}``{{ABbc}ABb{{Aj{A`}}}}{A@jA@j}{{A@jABl}A@j}{{AB`{Bh{Hh}}}A@j}{A@j{{A@f{AFf}}}}0{{{b{A@j}}Af}{{A@f{Ej}}}}{{{b{c}}}e{}{}}00000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oh{}}000000000{{A@j{Bh{{Dj{Ej}}}}AFh}A@j}0{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}`{{ABbAFj}ABb}={ce{}{}}000000000{{ABbA@j}ABb}{{ABd{Bh{AFl}}}ABd}{{ACbAf}ACb}{{A@jAf}A@j}{{A@jj}A@j}{{A@jc}A@j{{Aj{{Ah{j}}}}}}022{{ACb{Bh{{b{A`}}}}}ACb}{{A@jc}A@j{{Aj{{Ah{A@j}}}}}}5{{ACb{Bh{ABj}}}ACb}{{ACbAFn}ACb}{{ACbHd}ACb}888{{ABdAf}ABd}{{ACb{Bh{Hh}}}ACb}{{ABd{Bh{Hh}}}ABd};;{{ACjc}ACj{{Al{{Bh{Hh}}}}}}2{{ACbc}ACb{{Al{{Bh{Hh}}}}}}{{ABdc}ABd{{Al{{Bh{Hh}}}}}}3{{ACb{Bh{AG`}}}ACb}{{A@jACh}A@j}{{ACjAEb}ACj}{{ACbAEb}ACb}{{ABdAEb}ABd}{{ACj{B`{{Ah{AEb}}}}}ACj}{{ACb{B`{{Ah{AEb}}}}}ACb}{{ABd{B`{{Ah{AEb}}}}}ABd}{{A@jAf}A@j}0{{ACb{Bh{Hd}}}ACb}{{ACbAf}ACb}{{ACjAf}ACj}1{{ABdAf}ABd}4{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{A@j{b{A`}}{Bh{ABl}}}A@j}{{ACbc}ACb{{Al{{Bh{AEf}}}}}}{{ACb{Bh{AEf}}}ACb}{{ABd{Bh{AEf}}}ABd}{{ABdc}ABd{{Al{{Bh{AEf}}}}}}{{ACb{Bh{ABj}}}ACb}{{ABd{Bh{ABj}}}ABd}{{ACbc}{{A@f{ACb}}}{{Bj{Lf}{{Bf{{A@f{Lf}}}}}}}}{{ACbHd}ACb}>{{ACbHh}ACb}0??==?{A@jA@j}{{{b{A@d}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@f{A@d}}}{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}{{Aj{A`}}}{{AD`{}{{A@h{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hh{{b{c}}}{}}{Hh{{b{C`c}}}{}}{Hhf}{{{b{C`AGb}}{b{C`AGd}}}{{A@f{A@d}}}}{{{b{C`AGf}}{b{C`AGd}}}{{A@f{A@d}}}}{cc{}}{{}Hh}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2{{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{{AGh{AGb}}}}}}``````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Hl}}Ch{Bh{{b{AGj}}}}}{{n{Chl}}}}00{{{b{ABf}}}Af}00{{{b{ABf}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000``{{{b{ADb}}}ADb}{{{b{Nb}}}Nb}{{{b{Hl}}}Hl}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{ADh}}}ADh}{{{b{ADd}}}ADd}{{{b{AFj}}}AFj}{{{b{AFb}}}AFb}{{{b{AGl}}}AGl}{{{b{N`}}}N`}{{{b{AGn}}}AGn}{{{b{AH`}}}AH`}{{{b{A@n}}}A@n}{{{b{If}}}If}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Hl}}{b{Hl}}}AHb}`{{{b{c}}{b{e}}}AHb{}{}}``{{{b{If}}}{{n{{B`{Lf}}l}}}}`{{{b{Hl}}}Ch}{{{b{Hl}}}Af}{{}ADb}{{}Nb}{{}AEl}{{}AEn}{{}AF`}{{}ADh}{{}AFj}{{}AFb}{{}N`}{{}AH`}{{}A@n}{{}If}{Hh{{b{c}}}{}}00000000000000000{Hh{{b{C`c}}}{}}00000000000000000`{{{b{If}}}{{n{Ejl}}}}0{c{{n{ADb}}}Id}{c{{n{Nb}}}Id}{c{{n{Hl}}}Id}{c{{n{AEl}}}Id}{c{{n{AEn}}}Id}{c{{n{AF`}}}Id}{c{{n{ADh}}}Id}{c{{n{ADd}}}Id}{c{{n{AFj}}}Id}{c{{n{AFb}}}Id}{c{{n{AGl}}}Id}{c{{n{N`}}}Id}{c{{n{AGn}}}Id}{c{{n{AH`}}}Id}{c{{n{A@n}}}Id}{c{{n{If}}}Id}`{{{b{If}}}{{n{{`{M`}}l}}}}{Hhf}00000000000000000{{{b{ADb}}{b{ADb}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{Hl}}{b{Hl}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADh}}{b{ADh}}}Af}{{{b{ADd}}{b{ADd}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AGl}}{b{AGl}}}Af}{{{b{N`}}{b{N`}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{A@n}}{b{A@n}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADb}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Nb}}{b{C`Jf}}}{{n{fJh}}}}{{{b{Hl}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{AEl}}{b{C`Jf}}}{{n{fJh}}}}{{{b{ABf}}{b{C`Jf}}}{{n{fJh}}}}{{{b{AEn}}{b{C`Jf}}}{{n{fJh}}}}{{{b{AF`}}{b{C`Jf}}}{{n{fJh}}}}{{{b{ADh}}{b{C`Jf}}}{{n{fJh}}}}{{{b{ADd}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{AFj}}{b{C`Jf}}}{{n{fJh}}}}0{{{b{AFb}}{b{C`Jf}}}{{n{fJh}}}}{{{b{AGl}}{b{C`Jf}}}{{n{fJh}}}}{{{b{N`}}{b{C`Jf}}}{{n{fJh}}}}{{{b{AGn}}{b{C`Jf}}}{{n{fJh}}}}{{{b{AH`}}{b{C`Jf}}}{{n{fJh}}}}{{{b{A@n}}{b{C`Jf}}}{{n{fJh}}}}`{cc{}}0000000{ADdADh}1111111111`{{{b{AGn}}}Cj}{{{b{AHd}}{Dj{Bd}}{b{ADb}}}{{n{{AEd{Bd{Dj{Bd}}AHf}}l}}}}{{{b{ADb}}{b{C`c}}}fLj}{{{b{Nb}}{b{C`c}}}fLj}{{{b{Hl}}{b{C`c}}}fLj}{{{b{AEl}}{b{C`c}}}fLj}{{{b{AEn}}{b{C`c}}}fLj}{{{b{AF`}}{b{C`c}}}fLj}{{{b{ADh}}{b{C`c}}}fLj}{{{b{ADd}}{b{C`c}}}fLj}{{{b{AFj}}{b{C`c}}}fLj}{{{b{AFb}}{b{C`c}}}fLj}{{{b{AGl}}{b{C`c}}}fLj}{{{b{N`}}{b{C`c}}}fLj}{{{b{AGn}}{b{C`c}}}fLj}{{{b{AH`}}{b{C`c}}}fLj}{{{b{A@n}}{b{C`c}}}fLj}``````{{}Hh}00000000000000000{ce{}{}}00000000000000000{{{b{ADd}}}Af}{{{b{Hl}}{Bh{{b{A`}}}}}Af}{{{b{Hl}}}Af}{{{b{AFj}}{b{ADd}}}{{n{fl}}}}1``{Mfj}{AHhj}{AGnj}````{AGnAGn}`{{{b{Hl}}}Ch}6{{HlCh}Hl}`1{{{b{AFj}}}Af}8{ChHl}{ADdADh}````{{{b{A`}}}Hl}`{{{b{Hl}}{b{Hl}}}{{Bh{AHb}}}}````{{{b{AHd}}{Dj{Bd}}{b{Nb}}}{{n{{AEd{Bd{Dj{Bd}}AHf}}l}}}}`{{{b{ABf}}AEh}{{n{A@dl}}}}{{{b{ABf}}{Bh{Hh}}}{{n{{B`{Lf}}l}}}}`{{{b{ADb}}c}nO`}{{{b{Nb}}c}nO`}{{{b{Hl}}c}nO`}{{{b{AEl}}c}nO`}{{{b{AEn}}c}nO`}{{{b{AF`}}c}nO`}{{{b{ADh}}c}nO`}{{{b{ADd}}c}nO`}{{{b{AFj}}c}nO`}{{{b{AFb}}c}nO`}{{{b{AGl}}c}nO`}{{{b{N`}}c}nO`}{{{b{AGn}}c}nO`}{{{b{AH`}}c}nO`}{{{b{A@n}}c}nO`}{{{b{If}}c}nO`}`````{{{b{ADh}}}{{b{A`}}}}`{If{{n{AFfl}}}}{{{b{AGn}}}{{Bh{AHj}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Hl}}Ch{Bh{{b{AGj}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHl}}}}}{{Bj{AHl}{{Bf{Ch}}}}}}{{{b{Hl}}Ch{Bh{{b{AGj}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHj{{n{AGnl}}}}111111111111111111111{{{b{c}}}Oh{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Hl}}}Ch}{{{b{Hl}}}Af}{{ADhACn}ADh}````````````````````````````````````````````````````````","D":"GEb","p":[[1,"reference"],[5,"Private",3188],[1,"unit"],[5,"MetaNameSpace",6,3189],[6,"Expr",6,3190],[6,"PolarsError",3191],[6,"Result",3192],[1,"str"],[5,"ArrayNameSpace",6,3193],[5,"ListNameSpace",6,3194],[1,"bool"],[1,"slice"],[10,"AsRef",3195],[10,"Into",3195],[10,"FunctionOutputField",6,3196],[5,"Arc",3197],[5,"SpecialEq",6,3196],[5,"Series",3198],[17,"Output"],[6,"Option",3199],[10,"Fn",3200],[10,"Send",3201],[10,"Sync",3201],[0,"mut"],[6,"VisitRecursion",3202],[10,"FnMut",3200],[6,"FunctionExpr",6,3203],[1,"i64"],[6,"DataType",3204],[5,"SortOptions",3205],[5,"SortMultipleOptions",3205],[5,"FieldsMapper",6,3206],[5,"Field",3207],[10,"SeriesUdf",6,3196],[10,"Any",3208],[6,"AggExpr",6,3190],[5,"Vec",3209],[1,"u64"],[5,"BinaryNameSpace",1479,3210],[6,"Operator",6,3190],[10,"Clone",3211],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3196],[5,"String",3212],[5,"UserDefinedFunction",6,3213],[10,"SeriesBinaryUdf",6,3196],[5,"CategoricalNameSpace",6,3214],[5,"When",6,3215],[5,"Then",6,3215],[5,"ChainedWhen",6,3215],[5,"ChainedThen",6,3215],[6,"Excluded",6,3190],[6,"BooleanFunction",6,3216],[6,"CategoricalFunction",6,3217],[6,"PowFunction",6,3218],[6,"StringFunction",6,3219],[5,"DatetimeArgs",6,3220],[5,"DurationArgs",6,3220],[5,"RollingCovOptions",6,3221],[5,"StrptimeOptions",6,3221],[5,"JoinOptions",6,3221],[6,"WindowType",6,3221],[6,"WindowMapping",6,3221],[10,"IntoVec",3222],[1,"u8"],[10,"ExprEvalExtension",6,3223],[1,"usize"],[1,"f64"],[5,"Duration",2544,3224],[6,"ClosedWindow",3225],[6,"TimeUnit",3226],[10,"BinaryUdfOutputField",6,3196],[10,"Deserializer",3227],[6,"DslPlan",2544,3228],[6,"NullBehavior",3229],[5,"DateLikeNameSpace",1500,3230],[10,"Sized",3201],[10,"ListNameSpaceExtension",6,3231],[5,"EWMOptions",3232],[5,"StructNameSpace",6,3233],[6,"FillNullStrategy",3234],[5,"Formatter",3235],[5,"Error",3235],[10,"UdfSchema",6,3236],[1,"u16"],[1,"f32"],[1,"u32"],[1,"i8"],[1,"i16"],[6,"BinaryFunction",3237],[6,"ArrayFunction",3238],[6,"ListFunction",3239],[6,"RangeFunction",3240],[6,"StructFunction",3241],[6,"BusinessFunction",3242],[6,"TemporalFunction",3243],[5,"FunctionOptions",3244],[5,"Schema",3245],[6,"Context",3228],[10,"Hasher",3246],[6,"InterpolationMethod",3247],[10,"IntoListNameSpace",6,3231],[10,"Display",3235],[6,"ClosedInterval",3248],[5,"ExprNameNameSpace",6,3249],[10,"Literal",2544,3250],[10,"FnOnce",3200],[5,"PythonUdfExpression",1974,3251],[5,"UnitVec",3252],[6,"QuantileInterpolOptions",3253],[5,"RankOptions",2544,3254],[5,"RollingGroupOptions",2544,3255],[5,"RollingOptionsFixedWindow",3256],[5,"Float64Type",3257],[5,"ChunkedArray",3258],[10,"Copy",3201],[5,"RollingOptionsDynamicWindow",3259],[6,"SearchSortedSide",3260],[10,"Serializer",3261],[6,"IsSorted",3262],[5,"StringNameSpace",2019,3263],[6,"ListToStructWidthStrategy",3264],[5,"TypeId",3208],[6,"Roll",3265],[6,"NonExistent",3266],[6,"RollingFunction",1794,3267],[6,"RollingFunctionBy",1826,3268],[6,"TrigonometricFunction",1857,3269],[5,"DataFrame",3270],[8,"PolarsResult",3191],[17,"Item"],[5,"LazyFrame",2087],[10,"IntoParallelIterator",3271],[5,"UnionArgs",2544,3244],[5,"PythonFunction",1974,3251],[5,"PyAny",3272],[5,"Py",3273],[1,"char"],[5,"Node",3274],[6,"IR",3275],[5,"Arena",3274],[6,"AExpr",3276],[5,"LazyGroupBy",2087],[5,"JoinBuilder",2087],[5,"LazyJsonLineReader",2087,3277],[10,"AnonymousScan",2544,3278],[5,"ScanArgsAnonymous",2087,3279],[8,"SchemaRef",3245],[8,"IdxSize",3280],[5,"InProcessQuery",2087,3281],[8,"PlHashMap",3282],[5,"LazyCsvReader",2087,3283],[5,"ScanArgsIpc",2087,3284],[5,"ScanArgsParquet",2087,3285],[5,"OptState",2087,3286],[10,"LazyFileListReader",2087,3287],[5,"CloudOptions",3288],[6,"JoinCoalesce",3289],[10,"IntoIterator",3290],[5,"DynamicGroupOptions",2544,3255],[6,"JoinType",2544,3289],[8,"PathIterator",2087,3287],[5,"JoinArgs",2544,3289],[10,"IntoLazy",2087],[8,"AllowedOptimizations",2087,3286],[5,"MeltArgs",3291],[5,"Path",3292],[5,"PathBuf",3292],[1,"tuple"],[5,"RowIndex",3293],[5,"AnonymousScanArgs",2544,3278],[8,"PyObject",3273],[5,"CsvWriterOptions",2544,3294],[5,"IpcWriterOptions",2544,3295],[5,"JsonWriterOptions",2544,3296],[5,"ParquetWriteOptions",2544,3297],[8,"String",3298],[5,"IRPlan",3275],[6,"UniqueKeepStrategy",3270],[6,"JoinValidation",2544,3289],[8,"NonZeroUsize",3299],[6,"CsvEncoding",3300],[6,"NullValues",3300],[10,"Executor",2527,3301],[5,"ExecutionState",3302],[5,"Dummy",2527,3301],[5,"Box",3303],[6,"Tz",3304],[6,"RankMethod",2544,3254],[6,"LiteralValue",2544,3250],[5,"AnonymousScanOptions",2544,3244],[6,"Ordering",3305],[10,"PolarsTemporalGroupby",2544,3255],[6,"GroupsProxy",3306],[5,"Null",2544,3250],[6,"AnyValue",3307],[5,"NaiveDateTime",3308],[15,"Quantile",1371],[15,"Min",1371],[15,"Max",1371],[15,"IsBetween",1721],[15,"Any",1721],[15,"All",1721],[15,"SortBy",1381],[15,"Filter",1381],[15,"Cast",1381],[15,"Sort",1381],[15,"Gather",1381],[15,"RenameAlias",1381],[15,"Ternary",1381],[15,"Function",1381],[15,"Window",1381],[15,"AnonymousFunction",1381],[15,"Slice",1381],[15,"BinaryExpr",1381],[15,"QCut",1724],[15,"Entropy",1724],[15,"Log",1724],[15,"Hist",1724],[15,"Cut",1724],[15,"Correlation",1724],[15,"Round",1724],[15,"RoundSF",1724],[15,"EwmMeanBy",1724],[15,"Clip",1724],[15,"BackwardFill",1724],[15,"ForwardFill",1724],[15,"Random",1724],[15,"GatherEvery",1724],[15,"ValueCounts",1724],[15,"Rank",1724],[15,"EwmMean",1724],[15,"EwmStd",1724],[15,"EwmVar",1724],[15,"Replace",1724],[15,"CumCount",1724],[15,"CumSum",1724],[15,"CumProd",1724],[15,"CumMin",1724],[15,"CumMax",1724],[15,"TopK",1724],[15,"TopKBy",1724],[15,"ConcatHorizontal",1768],[15,"ConcatVertical",1768],[15,"ExtractGroups",1768],[15,"JsonDecode",1768],[15,"PadStart",1768],[15,"PadEnd",1768],[15,"SplitExact",1768],[15,"Contains",1768],[15,"Find",1768],[15,"Replace",1768],[15,"GroupBy",3133],[15,"Union",3133],[15,"Sort",3133],[15,"Cache",3133],[15,"ExtContext",3133],[15,"DataFrameScan",3133],[15,"Select",3133],[15,"HStack",3133],[15,"Scan",3133],[15,"MapFunction",3133],[15,"Filter",3133],[15,"Distinct",3133],[15,"Slice",3133],[15,"Sink",3133],[15,"Join",3133],[15,"HConcat",3133],[15,"PythonScan",3133],[15,"Range",3185]],"r":[[8,3190],[21,3193],[29,3196],[31,3216],[35,3217],[36,3214],[39,3215],[40,3215],[59,3220],[66,3220],[76,3190],[81,3190],[82,3223],[83,3249],[89,3206],[90,3249],[100,3203],[101,3196],[107,3196],[120,3231],[134,3221],[144,3194],[145,3231],[160,3189],[175,3190],[185,3218],[195,3196],[203,3221],[210,3196],[211,3196],[222,3196],[230,3219],[237,3221],[239,3233],[246,3215],[255,3236],[260,3213],[263,3215],[266,3221],[267,3221],[300,3309],[304,3310],[311,3310],[314,3311],[318,3312],[320,3313],[335,3314],[337,3314],[343,3315],[344,3316],[346,3312],[348,3215],[409,3317],[416,3316],[418,3312],[469,3310],[470,3309],[471,3309],[472,3318],[473,3318],[474,3318],[483,3319],[485,3310],[489,3310],[494,3313],[495,3220],[496,3313],[497,3313],[624,3312],[626,3309],[627,3309],[628,3220],[703,3312],[738,3310],[741,3318],[803,3312],[843,3309],[874,3313],[875,3313],[921,3316],[923,3316],[933,3312],[936,3312],[940,3250],[950,3311],[961,3312],[964,3312],[971,3316],[975,3310],[976,3316],[979,3310],[980,3316],[988,3316],[992,3310],[1018,3316],[1020,3312],[1032,3319],[1039,3312],[1042,3316],[1046,3310],[1050,3320],[1062,3319],[1063,3319],[1133,3319],[1141,3312],[1146,3316],[1150,3310],[1156,3215],[1159,3313],[1295,3312],[1340,3215],[1479,3210],[1499,3214],[1500,3230],[1572,3216],[1575,3217],[1613,3203],[1660,3218],[1692,3219],[1716,3203],[1717,3203],[1718,3203],[1719,3203],[1720,3203],[1788,3217],[1792,3218],[1798,3267],[1830,3268],[1872,3269],[1899,3220],[1900,3220],[1901,3309],[1902,3310],[1904,3310],[1905,3311],[1906,3313],[1907,3314],[1908,3314],[1909,3315],[1910,3316],[1911,3316],[1912,3310],[1913,3309],[1915,3309],[1917,3318],[1920,3318],[1921,3318],[1922,3319],[1923,3310],[1924,3310],[1925,3313],[1926,3313],[1927,3220],[1928,3313],[1929,3313],[1932,3309],[1933,3309],[1934,3220],[1935,3310],[1936,3318],[1939,3309],[1940,3313],[1941,3313],[1942,3316],[1943,3316],[1944,3311],[1945,3316],[1946,3316],[1947,3316],[1951,3316],[1956,3316],[1957,3319],[1958,3316],[1959,3310],[1960,3320],[1961,3319],[1962,3319],[1965,3319],[1966,3316],[1967,3313],[1968,3313],[1974,3251],[1975,3251],[1976,3251],[1977,3251],[2019,3263],[2081,3213],[2087,3286],[2088,3281],[2091,3283],[2092,3287],[2095,3277],[2096,3286],[2097,3287],[2098,3279],[2099,3284],[2100,3285],[2527,3301],[2528,3301],[2543,3321],[2544,3278],[2545,3278],[2546,3244],[2554,3294],[2560,3228],[2561,3224],[2563,3255],[2579,3295],[2581,3289],[2582,3289],[2583,3289],[2584,3296],[2586,3250],[2587,3250],[2593,3250],[2594,3250],[2599,3297],[2600,3255],[2603,3254],[2604,3254],[2605,3255],[2621,3244]],"b":[[502,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[503,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[504,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[575,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[576,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[577,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[631,"impl-Expr"],[632,"impl-PartialEq-for-Expr"],[635,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[636,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[714,"impl-Debug-for-Expr"],[715,"impl-Display-for-Expr"],[717,"impl-Display-for-Operator"],[718,"impl-Debug-for-Operator"],[720,"impl-Display-for-BooleanFunction"],[721,"impl-Debug-for-BooleanFunction"],[722,"impl-Debug-for-CategoricalFunction"],[723,"impl-Display-for-CategoricalFunction"],[724,"impl-Debug-for-PowFunction"],[725,"impl-Display-for-PowFunction"],[726,"impl-Display-for-StringFunction"],[727,"impl-Debug-for-StringFunction"],[728,"impl-Display-for-FunctionExpr"],[729,"impl-Debug-for-FunctionExpr"],[755,"impl-From%3C%26str%3E-for-Expr"],[756,"impl-From%3Cbool%3E-for-Expr"],[757,"impl-From%3Cu16%3E-for-Expr"],[758,"impl-From%3Cf32%3E-for-Expr"],[759,"impl-From%3Cu32%3E-for-Expr"],[760,"impl-From%3Ci64%3E-for-Expr"],[761,"impl-From%3Ci8%3E-for-Expr"],[762,"impl-From%3CAggExpr%3E-for-Expr"],[764,"impl-From%3Ci16%3E-for-Expr"],[765,"impl-From%3Cf64%3E-for-Expr"],[766,"impl-From%3Cu8%3E-for-Expr"],[767,"impl-From%3Cu64%3E-for-Expr"],[768,"impl-From%3Ci32%3E-for-Expr"],[771,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[772,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[773,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[774,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[775,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[776,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[777,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[779,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[780,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[781,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[782,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[787,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[788,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[789,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[791,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[823,"impl-Hash-for-Expr"],[824,"impl-Expr"],[1100,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1101,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1102,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1813,"impl-Debug-for-RollingFunction"],[1814,"impl-Display-for-RollingFunction"],[1844,"impl-Display-for-RollingFunctionBy"],[1845,"impl-Debug-for-RollingFunctionBy"],[1886,"impl-Display-for-TrigonometricFunction"],[1887,"impl-Debug-for-TrigonometricFunction"],[2250,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2251,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2484,"impl-LazyCsvReader"],[2485,"impl-LazyFileListReader-for-LazyCsvReader"],[2486,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2487,"impl-LazyJsonLineReader"],[2506,"impl-LazyFileListReader-for-LazyCsvReader"],[2507,"impl-LazyCsvReader"],[2508,"impl-LazyJsonLineReader"],[2509,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2868,"impl-Display-for-Duration"],[2869,"impl-Debug-for-Duration"],[2875,"impl-Debug-for-JoinType"],[2876,"impl-Display-for-JoinType"],[2877,"impl-Debug-for-JoinValidation"],[2878,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMsI9AAEABEAFwANACYAAQAqABEAPQAFAEQABwBNAAMAUwAAAFUAFwBuABcAhwACAIsABQCSAA4AogALAK8AAgCzAB4A1QAJAOAADwDxAAQA+AAMAAYBAQAJAQAACwEdACoBAAAvAQAAMgEBADYBAAA8AQAAPgEAAEkBAABMAQAAUwEBAFYBAQBbAQAAXgE5AJoBAACcAQAAngEBAKMBAACqASsA2QEAAPMBDAABAksATwIAAFECHABvAgAAcQIAAHcCAAB5Ag4AiQIjALUCAAC4AgEAvgIAAMQCAADHAhsA5AIAAPQCBwD9AgQABAMGAAwDAwAUAwIAGAMAAB4DAAAiAwAAJAMAACkDAQAuAwUANwMBADoDCwBJAwEATQMcAIwDAgCQAwAAowMAAKsDAAC4AwAAuwMFAMQDAADHAwAA1wMAANoDAgDiAwIA5gMDAO8DAQDzAwIA+QMBAAUEAAAHBAEADgQAABAEAAAYBAEAHgQBACEEAAAmBAIAQAQFAEcEEgBjBAAAagQAAHEEAAB2BAAAeAQAAHoEAACABAAAhQQAAIcEAACJBAIAkAQWAKgEBwC0BDkA8AQAAPIEHgAdBQAAHwUdAEAFAQBFBQAAUgUAAFYFAQBbBRMAcgUBAHUFAQB4BQEAewUEAIEFRgDJBQMAzgUCANMFAgDYBQMA4AUBAOkFAgDvBQAA8QUAAP4FAAANBgMAFQYCARkHAQAcBxoAOAcBADsHJQBiBwEAZQcGAHAHAAB+BwAAiwcBAJIHAQCdBwIAoQcDAKoHAwCyBx0A0QcAANMHAgDYBwsA5QcDAO0HAgDxBwAA9AcAAPkHAgD9BwEAHQgDACkIAwAwCAAAMggNAEMIAQBHCBUAXggBAGMIEQB3CAEAfQgAAIQIAACHCBgApAgDAKkIBgDECAEAxwgAAMsIAQDXCAIA3wgAAOEICgD9CAEAAgkBAAUJAAAHCQAADAkBABIJAwAXCQMAHQkBACAJBAAtCQMAOgkEAEAJAABECQEARwkAAFMJAABgCQEAYwkdAIMJCQCQCQEAkwkJAJ4JAACnCQEAtgkBALwJAQC/CQEAywkAAM4JAADcCQQA4gkGAOoJAADsCQoA+gkAAP0JAgABCgMABwoAAAoKAAAOCgEAFAoAABYKBgAgCgIAJAoAACcKCAAxCgIANgoAADgKAAA+ChMAVQolAH0KJACmCosAMwsTAE8LAABaCwAAXAsRAG8LAAByCxEAlgsBAJkLAACbCwAAngsCAKQLBQCrCwAArgsAALALAgC0CwEAuAsCAL4LFADUC6AA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[231,"polars_ops::prelude"],[233,"polars_ops::series"],[282,"polars_ops::chunked_array::binary"],[283,"polars_core::datatypes"],[284,"polars_ops::chunked_array::binary::namespace"],[285,"polars_ops::chunked_array::scatter"],[286,"polars_utils::index"],[287,"polars_core::series"],[288,"polars_error"],[289,"core::marker"],[290,"core::option"],[291,"core::iter::traits::collect"],[292,"polars_ops::chunked_array::list::namespace"],[293,"polars_core::datatypes::aliases"],[294,"polars_core::chunked_array::ops::sort::options"],[295,"polars_core::frame"],[296,"dyn_clone::sealed"],[297,"polars_ops::frame::join::hash_join"],[298,"polars_ops::frame::join::args"],[299,"alloc::string"],[300,"polars_ops::frame::join::cross_join"],[301,"core::fmt"],[302,"core::convert"],[303,"core::hash"],[304,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[305,"polars_arrow::array::primitive"],[306,"core::result"],[307,"core::any"],[308,"polars_ops::series::ops::arg_min_max"],[309,"polars_ops::series::ops"],[310,"polars_core::chunked_array::ops::search_sorted"],[311,"polars_ops::series::ops::various"],[312,"polars_ops::frame::join::general"],[313,"polars_ops::series::ops::clip"],[314,"polars_ops::series::ops::horizontal"],[315,"polars_ops::series::ops::index"],[316,"polars_ops::series::ops::negate"],[317,"polars_ops::series::ops::not"],[318,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,0,56,56,0,0,0,0,0,0,0,54,54,54,54,56,56],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDb}111{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}={{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClFn}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{G`}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{G`}}BhBhDd}{{Af{Ch}}}}0","D":"Ef","p":[[10,"AsBinary",4,282],[1,"reference"],[8,"BinaryChunked",283],[10,"BinaryNameSpaceImpl",4,284],[1,"u8"],[1,"slice"],[8,"BooleanChunked",283],[10,"ChunkedSet",4,285],[8,"IdxSize",286],[5,"Series",287],[8,"PolarsResult",288],[10,"Copy",289],[17,"Item"],[6,"Option",290],[10,"IntoIterator",291],[10,"AsList",23],[8,"ListChunked",283],[10,"ListNameSpaceImpl",23,292],[1,"str"],[1,"bool"],[8,"StringChunked",283],[8,"IdxCa",293],[1,"i64"],[1,"usize"],[5,"SortOptions",294],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",295],[5,"Private",296],[1,"unit"],[10,"JoinDispatch",78,297],[8,"LeftJoinIds",78,298],[5,"JoinArgs",78,298],[5,"String",299],[0,"mut"],[6,"JoinCoalesce",78,298],[6,"JoinType",78,298],[6,"JoinValidation",78,298],[10,"CrossJoin",78,300],[1,"tuple"],[8,"ChunkJoinOptIds",78,298],[5,"Formatter",301],[8,"Result",301],[10,"DataFrameJoinOps",78],[10,"AsRef",302],[10,"Hasher",303],[10,"SeriesJoin",78,304],[8,"InnerJoinIds",78,298],[5,"PrimitiveArray",305],[6,"Result",306],[5,"TypeId",307],[10,"ArgAgg",233,308],[10,"SeriesSealed",233,309],[6,"SearchSortedSide",233,310],[5,"Error",301],[10,"SeriesMethods",233,311]],"r":[[4,282],[5,284],[6,285],[24,292],[78,298],[79,298],[82,300],[86,298],[87,298],[88,298],[89,297],[91,298],[92,298],[95,298],[100,304],[105,312],[108,312],[113,312],[141,297],[231,78],[232,74],[234,308],[237,310],[238,311],[239,309],[246,313],[247,313],[248,313],[251,314],[252,315],[266,315],[269,314],[270,314],[271,314],[272,316],[273,317],[274,318],[275,314]],"b":[[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAO8AEgAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAnALIAAAC3AAwAyQABAMwAAADOABwA7AAFAPQAAgD6AAwACAEBAA4BCgA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[118,"polars_utils::atomic"],[138,"polars_utils::binary_search"],[140,"polars_utils::cache"],[176,"polars_utils::cell"],[196,"polars_utils::clmul"],[200,"polars_utils::contention_pool"],[215,"polars_utils::cpuid"],[217,"polars_utils::float"],[223,"polars_utils::floor_divmod"],[225,"polars_utils::functions"],[229,"polars_utils::hashing"],[261,"polars_utils::idx_vec"],[305,"polars_utils::index"],[367,"polars_utils::io"],[369,"polars_utils::iter"],[382,"polars_utils::mem"],[383,"polars_utils::min_max"],[390,"polars_utils::nulls"],[395,"polars_utils::ord"],[397,"polars_utils::partitioned"],[416,"polars_utils::slice"],[430,"polars_utils::sort"],[432,"polars_utils::sync"],[455,"polars_utils::sys"],[469,"polars_utils::total_ord"],[519,"polars_utils::unwrap"],[521,"polars_utils::vec"],[534,"num_traits"],[535,"core::cmp"],[536,"core::marker"],[537,"core::fmt"],[538,"core::clone"],[539,"core::option"],[540,"core::hash"],[541,"core::default"],[542,"core::ops::function"],[543,"core::result"],[544,"core::any"],[545,"core::borrow"],[546,"alloc::sync"],[547,"alloc::vec"],[548,"core::convert"],[549,"core::ops::range"],[550,"core::iter::traits::collect"],[551,"polars_utils::iter::fallible"],[552,"core::slice::iter"],[553,"polars_error"],[554,"std::fs"],[555,"std::path"],[556,"polars_utils::iter::enumerate_idx"],[557,"core::error"],[558,"core::iter::traits::iterator"],[559,"hashbrown::map"],[560,"core::mem::maybe_uninit"],[561,"core::slice::index"],[562,"num_traits::cast"],[563,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,37,34,37,34,34,34,34,37,34,37,34,37,34,37,37,34,34,34,34,37,34,34,37,34,37,34,34,37,34,34,37,34,37,34,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,44,44,44,44,44,0,45,0,0,0,0,0,0,51,51,51,51,51,51,52,51,51,51,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,65,0,0,0,0,63,64,63,64,0,63,64,63,64,63,64,63,64,63,64,63,63,63,63,64,63,64,63,63,64,65,65,63,63,64,63,64,63,64,67,64,63,63,67,63,64,68,64,69,63,63,64,63,64,63,64,63,64,0,0,0,0,0,78,0,78,72,72,72,72,74,58,78,0,0,80,80,80,80,80,80,66,66,0,66,66,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Cn}}}Cn}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}Cn}{Ab{{Al{c}}}{}}{{{Al{Cn}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhCn}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhCn}}}B`}{AbCn}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{D`{c}}}}c}AbDb}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Dd{ce}}}}}{{Dd{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Dd{ce}}}{DfDh}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dj{ceg}}}}cBf}e{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Dd{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DfDhDl}{{Dn{c}}DfDh}{}}{{{Al{Ah{Dd{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Dn{c}}DfDh}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Dd{ce}}}}ce}{{Al{Ahe}}}{DfDh}{}}{ce{}{}}0{{gAb}{{Dj{ceg}}}{DfDhBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Dd{ce}}}{DfDh}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Dd{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{Dn{c}}DfDh}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{E`{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{c{{E`{c}}}{}}{Ebc{}}{{{Al{{E`{c}}}}}{}Dl}{{{Al{Ah{E`{c}}}}}{{Al{Ahc}}}Dl}{{}Ab}{ce{}{}}{{{E`{c}}}c{}}6{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EdEd}Ed}0{EdEd}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Ef{c}}}}}cCb}>={Ab{{Ef{c}}}Cb}{{{Al{{Ef{c}}}}c}B`Cb}<<;{{}Bf}0`00{{{Al{Eh}}}Bf}10`{{EjEj}{{El{EjEj}}}}{{{En{c}}e}{{En{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{D`{e}}}}{Bn{Ab}}}{{F`{c}}}Bb{{Fb{{D`{c}}}}}}{{AbAb{Fd{Ab}}}{{Fd{Ab}}}}{{{En{c}}g}{{Ch{{En{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``?>{{{Al{Ff}}}Ff}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Fh}}}Ed}{{{Al{Ff}}}Ed}?{{{Al{Ff}}{Al{Ff}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ff}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Ff}}{Al{Ahc}}}B`C`}{{EdAb}Ab}{{}Ab}{ce{}{}}{{{Al{Ff}}}Bf}{{{Bn{{Al{{D`{Fj}}}}}}Ed}Ff}2{{{Al{c}}}e{}{}}{{{Al{Ff}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ffc{}}``{{{Al{Ah{Fl{c}}}}}{{Al{Ah{D`{c}}}}}{}}0{{{Al{{Fl{c}}}}}{{Al{{D`{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fl{c}}}}}Ab{}}{{{Al{{Fl{c}}}}}{{Fl{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fl{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Fl{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Fl{c}}}}}B`{}}{{{Al{{Fl{c}}}}{Al{{Fl{c}}}}}BfFn}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fl{c}}}}e}B`{}{{Gb{}{{G`{c}}}}}}{{{Al{{Fl{c}}}}{Al{AhBh}}}Bjl}{{{F`{c}}}{{Fl{c}}}{}}{cc{}}{{{Al{{D`{c}}}}}{{Fl{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gd{c}{{G`{e}}}}}{}}{e{{Fl{c}}}{}{{Gb{}{{G`{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fl{c}}}}}Bf{}}{{{Al{{Fl{c}}}}}{{Gf{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Gh{c}}}{}}{{{Al{{Fl{c}}}}}Ab{}}{{}{{Fl{c}}}{}}{{{Al{Ah{Fl{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fl{c}}}}c}B`{}}0{{{Al{Ah{Fl{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fl{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{D`{Gj}}}}Gj}{{Gl{B`}}}}{{{Al{Gn}}}Gn}{{{Al{H`}}}H`}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Gn}}{Al{Gn}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{H`{{El{GjGj}}}}{{{Al{Gn}}{Al{AhBh}}}Bj}{{{Al{H`}}{Al{AhBh}}}Bj}{cc{}}{GjGn}1{{{Al{{Hb{}{{G`{c}}}}}}Ab}cHd}0{{{Al{Gn}}}Gj}{{}Ab}0`{{{Al{AhH`}}}{{Al{AhEd}}}}{ce{}{}}0{{{Al{Hf}}}Bf}{{{Al{H`}}}Bf}{{{Al{Gn}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hf}}}Ab}{{}Gn}{{}H`}{{{Al{Hh}}}Ab}{{GjGj}H`}{{HjEd}Gj}{{{Al{Gn}}}{{Bn{Gj}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gl{Hl}}}{{Fb{Hn}}}}0``````{I`{{`{I`Gj}}}}0{I`{{`{I`Ib}}}}0{g{{Ch{Idc}}}If{}{{Gd{c}{{G`{e}}}}}}{{{Al{AhGd}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{G`{c}}}}}}{{{Al{{D`{c}}}}}{{Al{Ah{D`{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hd{}{{Jb{c}}}}}}}Bf{}}{{{Hd{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEh}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{D`{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{F`{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{F`{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ed}{{El{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ed}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{D`{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{D`{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{D`{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{D`{Fj}}}}}Ed}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Fd{Ab}}}Kh}0{{e{Al{Ah{F`{Fj}}}}Ab}{{Al{Ah{D`{g}}}}}{Kjj}{{Gb{}{{G`{c}}}}}{Klj}}{{{Al{Kn}}{Al{{D`{{El{GjGj}}}}}}{Al{Ah{F`{Gj}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{{}{{L`{c}}}{}}{cc{}}1{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ed}:87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EdFh}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHd}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{D`{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHd{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{F`{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{F`{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{El{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{El{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",534],[10,"PartialOrd",535],[10,"Copy",536],[10,"Debug",537],[10,"Send",536],[10,"Sync",536],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[0,"mut"],[5,"Arena",59],[1,"reference"],[5,"Node",59],[1,"unit"],[10,"Clone",538],[6,"Ordering",535],[1,"bool"],[5,"Formatter",537],[8,"Result",537],[1,"array"],[6,"Option",539],[10,"Hasher",540],[10,"Default",541],[17,"Output"],[10,"FnOnce",542],[6,"Result",543],[10,"FnMut",542],[5,"TypeId",544],[5,"SyncCounter",118],[1,"slice"],[10,"Ord",535],[5,"FastFixedCache",140],[10,"Hash",540],[10,"Eq",535],[5,"FastCachedFunc",140],[10,"Sized",536],[10,"Borrow",545],[5,"SyncUnsafeCell",176],[1,"never"],[1,"u64"],[5,"LowContentionPool",200],[10,"IsFloat",217],[10,"FloorDivMod",223],[1,"tuple"],[5,"Arc",546],[5,"Vec",547],[10,"AsRef",548],[5,"Range",549],[5,"BytesHash",229],[10,"DirtyHash",229],[1,"u8"],[5,"UnitVec",261],[10,"PartialEq",535],[17,"Item"],[10,"IntoIterator",550],[10,"FallibleIterator",369,551],[5,"Iter",552],[5,"IterMut",552],[8,"IdxSize",305],[8,"PolarsResult",553],[5,"NullableIdxSize",305],[5,"ChunkId",305],[10,"Indexable",305],[10,"IsNull",390],[10,"Bounded",305],[10,"NullCount",305],[10,"ToIdx",305],[5,"File",554],[5,"Path",555],[10,"EnumerateIdxTrait",369,556],[1,"u32"],[10,"FromFallibleIterator",369,551],[10,"Error",557],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",369],[10,"Iterator",558],[10,"MinMax",383],[17,"Inner"],[5,"PartitionedHashMap",397],[5,"HashMap",559],[5,"RawEntryBuilder",559],[5,"RawEntryBuilderMut",559],[10,"Slice2Uninit",416],[20,"MaybeUninit",560],[10,"GetSaferUnchecked",416],[10,"SliceIndex",561],[10,"SortedSlice",416],[10,"Extrema",416],[10,"SliceAble",416],[10,"TotalOrd",469],[10,"FromPrimitive",562],[5,"ThreadPool",563],[5,"SyncPtr",432],[5,"MemInfo",455],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",469],[10,"TotalEq",469],[10,"TotalHash",469],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",469],[10,"UnwrapUncheckedRelease",519],[17,"ItemIn"],[10,"ConvertVec",521],[10,"ResizeFaster",521],[10,"IntoRawParts",521],[10,"PushUnchecked",521],[10,"CapacityByFactor",521],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"r":[[0,305],[1,305],[369,556],[370,551],[371,551]],"b":[[284,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[286,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMwBNgAAAAgACgBNAFoAAABcAAEAXwACAGQAEgB4AAkAgwAAAIYABACOAA4AnwAFAKcACQCyAAEAtQACALoAAAC9AAAAwgAMANAAAQDTAAYA2wAKAOcADgD3AAIA+wALAAgBFQAfAQMAJAEGACwBJABSAQAAVAEAAFYBBABdARcAdgEAAHgBBgCAAQsAjgEFAJUBAgCZAQ0AqQEEAK8BAACyAQUAuQECAL0BAgDBAQAAwwEFAMoBBADRAQAA0wEDANsBAwDhAQsA7gEDAPMBFQAKAgQAEAIDABUCAQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
